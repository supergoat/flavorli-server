### This file was autogenerated by Nexus 0.11.6
### Do not make changes to this file directly


type Address {
  city: String!
  createdAt: DateTime!
  id: ID!
  number: String!
  postalCode: String!
  restaurant: Restaurant!
  streetName: String!
  updatedAt: DateTime!
}

input AddressWhereInput {
  AND: [AddressWhereInput!]
  city: String
  city_contains: String
  city_ends_with: String
  city_gt: String
  city_gte: String
  city_in: [String!]
  city_lt: String
  city_lte: String
  city_not: String
  city_not_contains: String
  city_not_ends_with: String
  city_not_in: [String!]
  city_not_starts_with: String
  city_starts_with: String
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  NOT: [AddressWhereInput!]
  number: String
  number_contains: String
  number_ends_with: String
  number_gt: String
  number_gte: String
  number_in: [String!]
  number_lt: String
  number_lte: String
  number_not: String
  number_not_contains: String
  number_not_ends_with: String
  number_not_in: [String!]
  number_not_starts_with: String
  number_starts_with: String
  OR: [AddressWhereInput!]
  postalCode: String
  postalCode_contains: String
  postalCode_ends_with: String
  postalCode_gt: String
  postalCode_gte: String
  postalCode_in: [String!]
  postalCode_lt: String
  postalCode_lte: String
  postalCode_not: String
  postalCode_not_contains: String
  postalCode_not_ends_with: String
  postalCode_not_in: [String!]
  postalCode_not_starts_with: String
  postalCode_starts_with: String
  restaurant: RestaurantWhereInput
  streetName: String
  streetName_contains: String
  streetName_ends_with: String
  streetName_gt: String
  streetName_gte: String
  streetName_in: [String!]
  streetName_lt: String
  streetName_lte: String
  streetName_not: String
  streetName_not_contains: String
  streetName_not_ends_with: String
  streetName_not_in: [String!]
  streetName_not_starts_with: String
  streetName_starts_with: String
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

type Customer {
  createdAt: DateTime
  customerStripeId: String
  email: String!
  id: ID!
  name: String!
  orders(after: String, before: String, first: Int, last: Int, orderBy: OrderOrderByInput, skip: Int, where: OrderWhereInput): [Order!]
  paymentMethod: PaymentMethod
  tel: String!
  updatedAt: DateTime
}

type CustomerAuthPayload {
  customer: Customer!
  token: String!
}

enum CustomerOrderByInput {
  createdAt_ASC
  createdAt_DESC
  customerStripeId_ASC
  customerStripeId_DESC
  email_ASC
  email_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  password_ASC
  password_DESC
  tel_ASC
  tel_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input CustomerWhereInput {
  AND: [CustomerWhereInput!]
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  customerStripeId: String
  customerStripeId_contains: String
  customerStripeId_ends_with: String
  customerStripeId_gt: String
  customerStripeId_gte: String
  customerStripeId_in: [String!]
  customerStripeId_lt: String
  customerStripeId_lte: String
  customerStripeId_not: String
  customerStripeId_not_contains: String
  customerStripeId_not_ends_with: String
  customerStripeId_not_in: [String!]
  customerStripeId_not_starts_with: String
  customerStripeId_starts_with: String
  email: String
  email_contains: String
  email_ends_with: String
  email_gt: String
  email_gte: String
  email_in: [String!]
  email_lt: String
  email_lte: String
  email_not: String
  email_not_contains: String
  email_not_ends_with: String
  email_not_in: [String!]
  email_not_starts_with: String
  email_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [CustomerWhereInput!]
  OR: [CustomerWhereInput!]
  orders_every: OrderWhereInput
  orders_none: OrderWhereInput
  orders_some: OrderWhereInput
  password: String
  password_contains: String
  password_ends_with: String
  password_gt: String
  password_gte: String
  password_in: [String!]
  password_lt: String
  password_lte: String
  password_not: String
  password_not_contains: String
  password_not_ends_with: String
  password_not_in: [String!]
  password_not_starts_with: String
  password_starts_with: String
  paymentMethod: PaymentMethodWhereInput
  tel: String
  tel_contains: String
  tel_ends_with: String
  tel_gt: String
  tel_gte: String
  tel_in: [String!]
  tel_lt: String
  tel_lte: String
  tel_not: String
  tel_not_contains: String
  tel_not_ends_with: String
  tel_not_in: [String!]
  tel_not_starts_with: String
  tel_starts_with: String
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

input CustomerWhereUniqueInput {
  email: String
  id: ID
}

scalar DateTime

type Menu {
  categories(after: String, before: String, first: Int, last: Int, orderBy: MenuCategoryOrderByInput, skip: Int, where: MenuCategoryWhereInput): [MenuCategory!]
  createdAt: DateTime!
  description: String
  id: ID!
  name: String!
  restaurant: Restaurant!
  serviceTimes(after: String, before: String, first: Int, last: Int, orderBy: ServiceTimeOrderByInput, skip: Int, where: ServiceTimeWhereInput): [ServiceTime!]
  updatedAt: DateTime!
}

type MenuCategory {
  available: Boolean!
  createdAt: DateTime!
  description: String
  id: ID!
  items(after: String, before: String, first: Int, last: Int, orderBy: MenuItemOrderByInput, skip: Int, where: MenuItemWhereInput): [MenuItem!]
  menu: Menu!
  name: String!
  updatedAt: DateTime!
}

enum MenuCategoryOrderByInput {
  available_ASC
  available_DESC
  createdAt_ASC
  createdAt_DESC
  description_ASC
  description_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input MenuCategoryWhereInput {
  AND: [MenuCategoryWhereInput!]
  available: Boolean
  available_not: Boolean
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  description: String
  description_contains: String
  description_ends_with: String
  description_gt: String
  description_gte: String
  description_in: [String!]
  description_lt: String
  description_lte: String
  description_not: String
  description_not_contains: String
  description_not_ends_with: String
  description_not_in: [String!]
  description_not_starts_with: String
  description_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  items_every: MenuItemWhereInput
  items_none: MenuItemWhereInput
  items_some: MenuItemWhereInput
  menu: MenuWhereInput
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [MenuCategoryWhereInput!]
  OR: [MenuCategoryWhereInput!]
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

type MenuItem {
  available: Boolean!
  category: MenuCategory
  createdAt: DateTime!
  description: String
  dietary: [String!]!
  id: ID!
  image: String
  name: String
  options(after: String, before: String, first: Int, last: Int, orderBy: OptionOrderByInput, skip: Int, where: OptionWhereInput): [Option!]
  price: String
  updatedAt: DateTime!
}

enum MenuItemOrderByInput {
  available_ASC
  available_DESC
  createdAt_ASC
  createdAt_DESC
  description_ASC
  description_DESC
  id_ASC
  id_DESC
  image_ASC
  image_DESC
  name_ASC
  name_DESC
  price_ASC
  price_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input MenuItemWhereInput {
  AND: [MenuItemWhereInput!]
  available: Boolean
  available_not: Boolean
  category: MenuCategoryWhereInput
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  description: String
  description_contains: String
  description_ends_with: String
  description_gt: String
  description_gte: String
  description_in: [String!]
  description_lt: String
  description_lte: String
  description_not: String
  description_not_contains: String
  description_not_ends_with: String
  description_not_in: [String!]
  description_not_starts_with: String
  description_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  image: String
  image_contains: String
  image_ends_with: String
  image_gt: String
  image_gte: String
  image_in: [String!]
  image_lt: String
  image_lte: String
  image_not: String
  image_not_contains: String
  image_not_ends_with: String
  image_not_in: [String!]
  image_not_starts_with: String
  image_starts_with: String
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [MenuItemWhereInput!]
  options_every: OptionWhereInput
  options_none: OptionWhereInput
  options_some: OptionWhereInput
  OR: [MenuItemWhereInput!]
  price: String
  price_contains: String
  price_ends_with: String
  price_gt: String
  price_gte: String
  price_in: [String!]
  price_lt: String
  price_lte: String
  price_not: String
  price_not_contains: String
  price_not_ends_with: String
  price_not_in: [String!]
  price_not_starts_with: String
  price_starts_with: String
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

input MenuItemWhereUniqueInput {
  id: ID
}

enum MenuOrderByInput {
  createdAt_ASC
  createdAt_DESC
  description_ASC
  description_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input MenuWhereInput {
  AND: [MenuWhereInput!]
  categories_every: MenuCategoryWhereInput
  categories_none: MenuCategoryWhereInput
  categories_some: MenuCategoryWhereInput
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  description: String
  description_contains: String
  description_ends_with: String
  description_gt: String
  description_gte: String
  description_in: [String!]
  description_lt: String
  description_lte: String
  description_not: String
  description_not_contains: String
  description_not_ends_with: String
  description_not_in: [String!]
  description_not_starts_with: String
  description_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [MenuWhereInput!]
  OR: [MenuWhereInput!]
  restaurant: RestaurantWhereInput
  serviceTimes_every: ServiceTimeWhereInput
  serviceTimes_none: ServiceTimeWhereInput
  serviceTimes_some: ServiceTimeWhereInput
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

type Mutation {
  addMenu(name: String): Menu!
  addMenuCategory(menuId: ID, name: String): MenuCategory!
  addMenuItemOption(menuItemId: ID, optionId: ID): Option!
  connectStripe(code: String, state: String): Restaurant!
  createMenuItemOption(id: ID, items: [OptionItemWhereInput!]!, max: String, min: String, name: String): Option!
  deleteMenu(menuId: ID): Menu!
  deleteMenuCategory(categoryId: ID): MenuCategory!
  deleteMenuItem(menuItemId: ID): MenuItem!
  deleteOpeningTime(id: ID): OpeningTime!
  deleteServiceTime(id: ID): ServiceTime!
  login(email: String, password: String): CustomerAuthPayload!
  loginRestaurant(email: String, password: String): RestaurantAuthPayload!
  register(email: String, name: String, password: String, tel: String): CustomerAuthPayload!
  registerRestaurant(address: AddressWhereInput, email: String, name: String, password: String, tel: String): RestaurantAuthPayload!
  updateMenu(description: String, menuId: ID, name: String): Menu!
  updateMenuCategory(available: Boolean, categoryId: ID, description: String, name: String): MenuCategory!
  updateOrder(cancelReason: String, delayedBy: Int, orderId: ID, priceAdjustment: String, priceAdjustmentReason: String, status: String): Order!
  updateRestaurant(address: AddressWhereInput, averageBusyPreparationTime: String, averagePreparationTime: String, description: String, email: String, image: String, logo: String, name: String, status: String, tel: String): Restaurant!
  upsertMenuItem(available: Boolean, categoryId: ID, description: String, dietary: [String!], id: ID, image: String, name: String, options: [ID!], price: String): MenuItem!
  upsertOpeningTime(days: [String!], hours: [String!], id: ID): OpeningTime!
  upsertOrder(orderId: ID, orderItems: [OrderItemInput!]!, paymentMethod: PaymentMethodInput, restaurantId: ID, total: String): StripeCheckoutSession!
  upsertServiceTime(days: [String!], hours: [String!], id: ID, menuId: ID): ServiceTime!
}

type OpeningTime {
  days: [String!]!
  hours: [String!]!
  id: ID!
  restaurant: Restaurant
}

enum OpeningTimeOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input OpeningTimeWhereInput {
  AND: [OpeningTimeWhereInput!]
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  NOT: [OpeningTimeWhereInput!]
  OR: [OpeningTimeWhereInput!]
  restaurant: RestaurantWhereInput
}

type Option {
  createdAt: DateTime!
  id: ID!
  items(after: String, before: String, first: Int, last: Int, orderBy: OptionItemOrderByInput, skip: Int, where: OptionItemWhereInput): [OptionItem!]
  max: String!
  menuItems(after: String, before: String, first: Int, last: Int, orderBy: MenuItemOrderByInput, skip: Int, where: MenuItemWhereInput): [MenuItem!]
  min: String!
  name: String!
  restaurant: Restaurant
  updatedAt: DateTime!
}

type OptionItem {
  createdAt: DateTime!
  id: ID!
  name: String!
  option: Option
  price: String!
  updatedAt: DateTime!
}

enum OptionItemOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  price_ASC
  price_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input OptionItemWhereInput {
  AND: [OptionItemWhereInput!]
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [OptionItemWhereInput!]
  option: OptionWhereInput
  OR: [OptionItemWhereInput!]
  price: String
  price_contains: String
  price_ends_with: String
  price_gt: String
  price_gte: String
  price_in: [String!]
  price_lt: String
  price_lte: String
  price_not: String
  price_not_contains: String
  price_not_ends_with: String
  price_not_in: [String!]
  price_not_starts_with: String
  price_starts_with: String
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

enum OptionOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  max_ASC
  max_DESC
  min_ASC
  min_DESC
  name_ASC
  name_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input OptionWhereInput {
  AND: [OptionWhereInput!]
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  items_every: OptionItemWhereInput
  items_none: OptionItemWhereInput
  items_some: OptionItemWhereInput
  max: String
  max_contains: String
  max_ends_with: String
  max_gt: String
  max_gte: String
  max_in: [String!]
  max_lt: String
  max_lte: String
  max_not: String
  max_not_contains: String
  max_not_ends_with: String
  max_not_in: [String!]
  max_not_starts_with: String
  max_starts_with: String
  menuItems_every: MenuItemWhereInput
  menuItems_none: MenuItemWhereInput
  menuItems_some: MenuItemWhereInput
  min: String
  min_contains: String
  min_ends_with: String
  min_gt: String
  min_gte: String
  min_in: [String!]
  min_lt: String
  min_lte: String
  min_not: String
  min_not_contains: String
  min_not_ends_with: String
  min_not_in: [String!]
  min_not_starts_with: String
  min_starts_with: String
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [OptionWhereInput!]
  OR: [OptionWhereInput!]
  restaurant: RestaurantWhereInput
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

type Order {
  cancelReason: String
  createdAt: DateTime!
  customer: Customer!
  delayedBy: Int
  dueAt: DateTime!
  id: ID!
  items(after: String, before: String, first: Int, last: Int, orderBy: OrderItemOrderByInput, skip: Int, where: OrderItemWhereInput): [OrderItem!]
  orderNo: Int!
  paymentIntentId: String
  priceAdjustment: String
  priceAdjustmentReason: String
  restaurant: Restaurant!
  status: String!
  total: String!
  updatedAt: DateTime!
}

type OrderItem {
  createdAt: DateTime!
  id: ID!
  image: String
  name: String!
  options(after: String, before: String, first: Int, last: Int, orderBy: OrderItemOptionOrderByInput, skip: Int, where: OrderItemOptionWhereInput): [OrderItemOption!]
  order: Order!
  price: String
  quantity: Int
  updatedAt: DateTime!
}

input OrderItemInput {
  image: String
  name: String
  options: [OrderItemOptionInput!]
  price: String
  quantity: Int
}

type OrderItemOption {
  createdAt: DateTime!
  id: ID!
  items(after: String, before: String, first: Int, last: Int, orderBy: OrderItemOptionItemOrderByInput, skip: Int, where: OrderItemOptionItemWhereInput): [OrderItemOptionItem!]
  name: String!
  orderItem: OrderItem!
  updatedAt: DateTime!
}

input OrderItemOptionInput {
  items: [OrderItemOptionItemInput!]
  name: String
}

type OrderItemOptionItem {
  createdAt: DateTime!
  id: ID!
  name: String!
  option: OrderItemOption
  price: String!
  updatedAt: DateTime!
}

input OrderItemOptionItemInput {
  name: String
  price: String
}

enum OrderItemOptionItemOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  price_ASC
  price_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input OrderItemOptionItemWhereInput {
  AND: [OrderItemOptionItemWhereInput!]
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [OrderItemOptionItemWhereInput!]
  option: OrderItemOptionWhereInput
  OR: [OrderItemOptionItemWhereInput!]
  price: String
  price_contains: String
  price_ends_with: String
  price_gt: String
  price_gte: String
  price_in: [String!]
  price_lt: String
  price_lte: String
  price_not: String
  price_not_contains: String
  price_not_ends_with: String
  price_not_in: [String!]
  price_not_starts_with: String
  price_starts_with: String
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

enum OrderItemOptionOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  name_ASC
  name_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input OrderItemOptionWhereInput {
  AND: [OrderItemOptionWhereInput!]
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  items_every: OrderItemOptionItemWhereInput
  items_none: OrderItemOptionItemWhereInput
  items_some: OrderItemOptionItemWhereInput
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [OrderItemOptionWhereInput!]
  OR: [OrderItemOptionWhereInput!]
  orderItem: OrderItemWhereInput
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

enum OrderItemOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  image_ASC
  image_DESC
  name_ASC
  name_DESC
  price_ASC
  price_DESC
  quantity_ASC
  quantity_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input OrderItemWhereInput {
  AND: [OrderItemWhereInput!]
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  image: String
  image_contains: String
  image_ends_with: String
  image_gt: String
  image_gte: String
  image_in: [String!]
  image_lt: String
  image_lte: String
  image_not: String
  image_not_contains: String
  image_not_ends_with: String
  image_not_in: [String!]
  image_not_starts_with: String
  image_starts_with: String
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [OrderItemWhereInput!]
  options_every: OrderItemOptionWhereInput
  options_none: OrderItemOptionWhereInput
  options_some: OrderItemOptionWhereInput
  OR: [OrderItemWhereInput!]
  order: OrderWhereInput
  price: String
  price_contains: String
  price_ends_with: String
  price_gt: String
  price_gte: String
  price_in: [String!]
  price_lt: String
  price_lte: String
  price_not: String
  price_not_contains: String
  price_not_ends_with: String
  price_not_in: [String!]
  price_not_starts_with: String
  price_starts_with: String
  quantity: Int
  quantity_gt: Int
  quantity_gte: Int
  quantity_in: [Int!]
  quantity_lt: Int
  quantity_lte: Int
  quantity_not: Int
  quantity_not_in: [Int!]
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

enum OrderOrderByInput {
  cancelReason_ASC
  cancelReason_DESC
  createdAt_ASC
  createdAt_DESC
  delayedBy_ASC
  delayedBy_DESC
  dueAt_ASC
  dueAt_DESC
  id_ASC
  id_DESC
  orderNo_ASC
  orderNo_DESC
  paymentIntentId_ASC
  paymentIntentId_DESC
  priceAdjustment_ASC
  priceAdjustment_DESC
  priceAdjustmentReason_ASC
  priceAdjustmentReason_DESC
  status_ASC
  status_DESC
  total_ASC
  total_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input OrderWhereInput {
  AND: [OrderWhereInput!]
  cancelReason: String
  cancelReason_contains: String
  cancelReason_ends_with: String
  cancelReason_gt: String
  cancelReason_gte: String
  cancelReason_in: [String!]
  cancelReason_lt: String
  cancelReason_lte: String
  cancelReason_not: String
  cancelReason_not_contains: String
  cancelReason_not_ends_with: String
  cancelReason_not_in: [String!]
  cancelReason_not_starts_with: String
  cancelReason_starts_with: String
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  customer: CustomerWhereInput
  delayedBy: Int
  delayedBy_gt: Int
  delayedBy_gte: Int
  delayedBy_in: [Int!]
  delayedBy_lt: Int
  delayedBy_lte: Int
  delayedBy_not: Int
  delayedBy_not_in: [Int!]
  dueAt: DateTime
  dueAt_gt: DateTime
  dueAt_gte: DateTime
  dueAt_in: [DateTime!]
  dueAt_lt: DateTime
  dueAt_lte: DateTime
  dueAt_not: DateTime
  dueAt_not_in: [DateTime!]
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  items_every: OrderItemWhereInput
  items_none: OrderItemWhereInput
  items_some: OrderItemWhereInput
  NOT: [OrderWhereInput!]
  OR: [OrderWhereInput!]
  orderNo: Int
  orderNo_gt: Int
  orderNo_gte: Int
  orderNo_in: [Int!]
  orderNo_lt: Int
  orderNo_lte: Int
  orderNo_not: Int
  orderNo_not_in: [Int!]
  paymentIntentId: String
  paymentIntentId_contains: String
  paymentIntentId_ends_with: String
  paymentIntentId_gt: String
  paymentIntentId_gte: String
  paymentIntentId_in: [String!]
  paymentIntentId_lt: String
  paymentIntentId_lte: String
  paymentIntentId_not: String
  paymentIntentId_not_contains: String
  paymentIntentId_not_ends_with: String
  paymentIntentId_not_in: [String!]
  paymentIntentId_not_starts_with: String
  paymentIntentId_starts_with: String
  priceAdjustment: String
  priceAdjustment_contains: String
  priceAdjustment_ends_with: String
  priceAdjustment_gt: String
  priceAdjustment_gte: String
  priceAdjustment_in: [String!]
  priceAdjustment_lt: String
  priceAdjustment_lte: String
  priceAdjustment_not: String
  priceAdjustment_not_contains: String
  priceAdjustment_not_ends_with: String
  priceAdjustment_not_in: [String!]
  priceAdjustment_not_starts_with: String
  priceAdjustment_starts_with: String
  priceAdjustmentReason: String
  priceAdjustmentReason_contains: String
  priceAdjustmentReason_ends_with: String
  priceAdjustmentReason_gt: String
  priceAdjustmentReason_gte: String
  priceAdjustmentReason_in: [String!]
  priceAdjustmentReason_lt: String
  priceAdjustmentReason_lte: String
  priceAdjustmentReason_not: String
  priceAdjustmentReason_not_contains: String
  priceAdjustmentReason_not_ends_with: String
  priceAdjustmentReason_not_in: [String!]
  priceAdjustmentReason_not_starts_with: String
  priceAdjustmentReason_starts_with: String
  restaurant: RestaurantWhereInput
  status: String
  status_contains: String
  status_ends_with: String
  status_gt: String
  status_gte: String
  status_in: [String!]
  status_lt: String
  status_lte: String
  status_not: String
  status_not_contains: String
  status_not_ends_with: String
  status_not_in: [String!]
  status_not_starts_with: String
  status_starts_with: String
  total: String
  total_contains: String
  total_ends_with: String
  total_gt: String
  total_gte: String
  total_in: [String!]
  total_lt: String
  total_lte: String
  total_not: String
  total_not_contains: String
  total_not_ends_with: String
  total_not_in: [String!]
  total_not_starts_with: String
  total_starts_with: String
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

input OrderWhereUniqueInput {
  id: ID
}

type PaymentMethod {
  brand: String!
  customer: Customer
  id: ID!
  last4: String!
  payment_method_id: String!
}

input PaymentMethodInput {
  brand: String
  last4: String
  payment_method_id: String
}

input PaymentMethodWhereInput {
  AND: [PaymentMethodWhereInput!]
  brand: String
  brand_contains: String
  brand_ends_with: String
  brand_gt: String
  brand_gte: String
  brand_in: [String!]
  brand_lt: String
  brand_lte: String
  brand_not: String
  brand_not_contains: String
  brand_not_ends_with: String
  brand_not_in: [String!]
  brand_not_starts_with: String
  brand_starts_with: String
  customer: CustomerWhereInput
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  last4: String
  last4_contains: String
  last4_ends_with: String
  last4_gt: String
  last4_gte: String
  last4_in: [String!]
  last4_lt: String
  last4_lte: String
  last4_not: String
  last4_not_contains: String
  last4_not_ends_with: String
  last4_not_in: [String!]
  last4_not_starts_with: String
  last4_starts_with: String
  NOT: [PaymentMethodWhereInput!]
  OR: [PaymentMethodWhereInput!]
  payment_method_id: String
  payment_method_id_contains: String
  payment_method_id_ends_with: String
  payment_method_id_gt: String
  payment_method_id_gte: String
  payment_method_id_in: [String!]
  payment_method_id_lt: String
  payment_method_id_lte: String
  payment_method_id_not: String
  payment_method_id_not_contains: String
  payment_method_id_not_ends_with: String
  payment_method_id_not_in: [String!]
  payment_method_id_not_starts_with: String
  payment_method_id_starts_with: String
}

type Query {
  customer(where: CustomerWhereUniqueInput!): Customer
  customers(after: String, before: String, first: Int, last: Int, orderBy: CustomerOrderByInput, skip: Int, where: CustomerWhereInput): [Customer!]!
  getCategory(categoryId: ID): MenuCategory!
  getCustomerOrder(orderId: ID): Order!
  getMenu(menuId: ID): Menu!
  getMenuItem(menuItemId: ID): MenuItem!
  getOptions(menuItemId: ID): [Option!]!
  getOrder(id: ID): Order!
  getOrderHistory: [Order!]!
  getOrders: [Order!]!
  getRestaurant: Restaurant!
  me: Customer!
  menuItem(where: MenuItemWhereUniqueInput!): MenuItem
  order(where: OrderWhereUniqueInput!): Order
  restaurant(where: RestaurantWhereUniqueInput!): Restaurant
  restaurants(after: String, before: String, first: Int, last: Int, orderBy: RestaurantOrderByInput, skip: Int, where: RestaurantWhereInput): [Restaurant!]!
  userOrders: [Order!]!
}

type Restaurant {
  address: Address!
  averageBusyPreparationTime: String
  averagePreparationTime: String
  createdAt: DateTime!
  description: String
  email: String!
  id: ID!
  image: String
  isConnected: Boolean!
  logo: String
  menus(after: String, before: String, first: Int, last: Int, orderBy: MenuOrderByInput, skip: Int, where: MenuWhereInput): [Menu!]
  name: String!
  openingTimes(after: String, before: String, first: Int, last: Int, orderBy: OpeningTimeOrderByInput, skip: Int, where: OpeningTimeWhereInput): [OpeningTime!]
  status: String
  tags: [String!]!
  tel: String!
  updatedAt: DateTime!
}

type RestaurantAuthPayload {
  restaurant: Restaurant!
  token: String!
}

enum RestaurantOrderByInput {
  access_token_ASC
  access_token_DESC
  averageBusyPreparationTime_ASC
  averageBusyPreparationTime_DESC
  averagePreparationTime_ASC
  averagePreparationTime_DESC
  createdAt_ASC
  createdAt_DESC
  description_ASC
  description_DESC
  email_ASC
  email_DESC
  id_ASC
  id_DESC
  image_ASC
  image_DESC
  isConnected_ASC
  isConnected_DESC
  logo_ASC
  logo_DESC
  name_ASC
  name_DESC
  password_ASC
  password_DESC
  refresh_token_ASC
  refresh_token_DESC
  status_ASC
  status_DESC
  stripe_publishable_key_ASC
  stripe_publishable_key_DESC
  stripe_user_id_ASC
  stripe_user_id_DESC
  tel_ASC
  tel_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input RestaurantWhereInput {
  access_token: String
  access_token_contains: String
  access_token_ends_with: String
  access_token_gt: String
  access_token_gte: String
  access_token_in: [String!]
  access_token_lt: String
  access_token_lte: String
  access_token_not: String
  access_token_not_contains: String
  access_token_not_ends_with: String
  access_token_not_in: [String!]
  access_token_not_starts_with: String
  access_token_starts_with: String
  address: AddressWhereInput
  AND: [RestaurantWhereInput!]
  averageBusyPreparationTime: String
  averageBusyPreparationTime_contains: String
  averageBusyPreparationTime_ends_with: String
  averageBusyPreparationTime_gt: String
  averageBusyPreparationTime_gte: String
  averageBusyPreparationTime_in: [String!]
  averageBusyPreparationTime_lt: String
  averageBusyPreparationTime_lte: String
  averageBusyPreparationTime_not: String
  averageBusyPreparationTime_not_contains: String
  averageBusyPreparationTime_not_ends_with: String
  averageBusyPreparationTime_not_in: [String!]
  averageBusyPreparationTime_not_starts_with: String
  averageBusyPreparationTime_starts_with: String
  averagePreparationTime: String
  averagePreparationTime_contains: String
  averagePreparationTime_ends_with: String
  averagePreparationTime_gt: String
  averagePreparationTime_gte: String
  averagePreparationTime_in: [String!]
  averagePreparationTime_lt: String
  averagePreparationTime_lte: String
  averagePreparationTime_not: String
  averagePreparationTime_not_contains: String
  averagePreparationTime_not_ends_with: String
  averagePreparationTime_not_in: [String!]
  averagePreparationTime_not_starts_with: String
  averagePreparationTime_starts_with: String
  createdAt: DateTime
  createdAt_gt: DateTime
  createdAt_gte: DateTime
  createdAt_in: [DateTime!]
  createdAt_lt: DateTime
  createdAt_lte: DateTime
  createdAt_not: DateTime
  createdAt_not_in: [DateTime!]
  description: String
  description_contains: String
  description_ends_with: String
  description_gt: String
  description_gte: String
  description_in: [String!]
  description_lt: String
  description_lte: String
  description_not: String
  description_not_contains: String
  description_not_ends_with: String
  description_not_in: [String!]
  description_not_starts_with: String
  description_starts_with: String
  email: String
  email_contains: String
  email_ends_with: String
  email_gt: String
  email_gte: String
  email_in: [String!]
  email_lt: String
  email_lte: String
  email_not: String
  email_not_contains: String
  email_not_ends_with: String
  email_not_in: [String!]
  email_not_starts_with: String
  email_starts_with: String
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  image: String
  image_contains: String
  image_ends_with: String
  image_gt: String
  image_gte: String
  image_in: [String!]
  image_lt: String
  image_lte: String
  image_not: String
  image_not_contains: String
  image_not_ends_with: String
  image_not_in: [String!]
  image_not_starts_with: String
  image_starts_with: String
  isConnected: Boolean
  isConnected_not: Boolean
  logo: String
  logo_contains: String
  logo_ends_with: String
  logo_gt: String
  logo_gte: String
  logo_in: [String!]
  logo_lt: String
  logo_lte: String
  logo_not: String
  logo_not_contains: String
  logo_not_ends_with: String
  logo_not_in: [String!]
  logo_not_starts_with: String
  logo_starts_with: String
  menus_every: MenuWhereInput
  menus_none: MenuWhereInput
  menus_some: MenuWhereInput
  name: String
  name_contains: String
  name_ends_with: String
  name_gt: String
  name_gte: String
  name_in: [String!]
  name_lt: String
  name_lte: String
  name_not: String
  name_not_contains: String
  name_not_ends_with: String
  name_not_in: [String!]
  name_not_starts_with: String
  name_starts_with: String
  NOT: [RestaurantWhereInput!]
  openingTimes_every: OpeningTimeWhereInput
  openingTimes_none: OpeningTimeWhereInput
  openingTimes_some: OpeningTimeWhereInput
  OR: [RestaurantWhereInput!]
  password: String
  password_contains: String
  password_ends_with: String
  password_gt: String
  password_gte: String
  password_in: [String!]
  password_lt: String
  password_lte: String
  password_not: String
  password_not_contains: String
  password_not_ends_with: String
  password_not_in: [String!]
  password_not_starts_with: String
  password_starts_with: String
  refresh_token: String
  refresh_token_contains: String
  refresh_token_ends_with: String
  refresh_token_gt: String
  refresh_token_gte: String
  refresh_token_in: [String!]
  refresh_token_lt: String
  refresh_token_lte: String
  refresh_token_not: String
  refresh_token_not_contains: String
  refresh_token_not_ends_with: String
  refresh_token_not_in: [String!]
  refresh_token_not_starts_with: String
  refresh_token_starts_with: String
  status: String
  status_contains: String
  status_ends_with: String
  status_gt: String
  status_gte: String
  status_in: [String!]
  status_lt: String
  status_lte: String
  status_not: String
  status_not_contains: String
  status_not_ends_with: String
  status_not_in: [String!]
  status_not_starts_with: String
  status_starts_with: String
  stripe_publishable_key: String
  stripe_publishable_key_contains: String
  stripe_publishable_key_ends_with: String
  stripe_publishable_key_gt: String
  stripe_publishable_key_gte: String
  stripe_publishable_key_in: [String!]
  stripe_publishable_key_lt: String
  stripe_publishable_key_lte: String
  stripe_publishable_key_not: String
  stripe_publishable_key_not_contains: String
  stripe_publishable_key_not_ends_with: String
  stripe_publishable_key_not_in: [String!]
  stripe_publishable_key_not_starts_with: String
  stripe_publishable_key_starts_with: String
  stripe_user_id: String
  stripe_user_id_contains: String
  stripe_user_id_ends_with: String
  stripe_user_id_gt: String
  stripe_user_id_gte: String
  stripe_user_id_in: [String!]
  stripe_user_id_lt: String
  stripe_user_id_lte: String
  stripe_user_id_not: String
  stripe_user_id_not_contains: String
  stripe_user_id_not_ends_with: String
  stripe_user_id_not_in: [String!]
  stripe_user_id_not_starts_with: String
  stripe_user_id_starts_with: String
  tel: String
  tel_contains: String
  tel_ends_with: String
  tel_gt: String
  tel_gte: String
  tel_in: [String!]
  tel_lt: String
  tel_lte: String
  tel_not: String
  tel_not_contains: String
  tel_not_ends_with: String
  tel_not_in: [String!]
  tel_not_starts_with: String
  tel_starts_with: String
  updatedAt: DateTime
  updatedAt_gt: DateTime
  updatedAt_gte: DateTime
  updatedAt_in: [DateTime!]
  updatedAt_lt: DateTime
  updatedAt_lte: DateTime
  updatedAt_not: DateTime
  updatedAt_not_in: [DateTime!]
}

input RestaurantWhereUniqueInput {
  email: String
  id: ID
}

type ServiceTime {
  days: [String!]!
  hours: [String!]!
  id: ID!
  menu: Menu
}

enum ServiceTimeOrderByInput {
  createdAt_ASC
  createdAt_DESC
  id_ASC
  id_DESC
  updatedAt_ASC
  updatedAt_DESC
}

input ServiceTimeWhereInput {
  AND: [ServiceTimeWhereInput!]
  id: ID
  id_contains: ID
  id_ends_with: ID
  id_gt: ID
  id_gte: ID
  id_in: [ID!]
  id_lt: ID
  id_lte: ID
  id_not: ID
  id_not_contains: ID
  id_not_ends_with: ID
  id_not_in: [ID!]
  id_not_starts_with: ID
  id_starts_with: ID
  menu: MenuWhereInput
  NOT: [ServiceTimeWhereInput!]
  OR: [ServiceTimeWhereInput!]
}

type StripeCheckoutSession {
  client_secret: String!
  order: Order!
  stripe_user_id: String!
}

type Subscription {
  getOrderStatus(orderId: ID): Order!
  getRestaurantOrders: Order!
}
