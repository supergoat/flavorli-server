/**
 * This file was automatically generated by nexus-prisma@0.3.7
 * Do not make changes to this file directly
 */

import { core } from 'nexus'
import { GraphQLResolveInfo } from 'graphql'
import * as prisma from '../prisma-client'

declare global {
  interface NexusPrismaGen extends NexusPrismaTypes {}
}

export interface NexusPrismaTypes {
  objectTypes: {
    fields: {
      Query: QueryObject
      Customer: CustomerObject
      Order: OrderObject
      Restaurant: RestaurantObject
      Address: AddressObject
      OpeningTime: OpeningTimeObject
      Menu: MenuObject
      ServiceTime: ServiceTimeObject
      MenuCategory: MenuCategoryObject
      MenuItem: MenuItemObject
      Option: OptionObject
      OptionItem: OptionItemObject
      OrderItem: OrderItemObject
      OrderItemOption: OrderItemOptionObject
      OrderItemOptionItem: OrderItemOptionItemObject
      PaymentMethod: PaymentMethodObject
      CustomerConnection: CustomerConnectionObject
      PageInfo: PageInfoObject
      CustomerEdge: CustomerEdgeObject
      AggregateCustomer: AggregateCustomerObject
      PaymentMethodConnection: PaymentMethodConnectionObject
      PaymentMethodEdge: PaymentMethodEdgeObject
      AggregatePaymentMethod: AggregatePaymentMethodObject
      AddressConnection: AddressConnectionObject
      AddressEdge: AddressEdgeObject
      AggregateAddress: AggregateAddressObject
      RestaurantConnection: RestaurantConnectionObject
      RestaurantEdge: RestaurantEdgeObject
      AggregateRestaurant: AggregateRestaurantObject
      OpeningTimeConnection: OpeningTimeConnectionObject
      OpeningTimeEdge: OpeningTimeEdgeObject
      AggregateOpeningTime: AggregateOpeningTimeObject
      ServiceTimeConnection: ServiceTimeConnectionObject
      ServiceTimeEdge: ServiceTimeEdgeObject
      AggregateServiceTime: AggregateServiceTimeObject
      MenuConnection: MenuConnectionObject
      MenuEdge: MenuEdgeObject
      AggregateMenu: AggregateMenuObject
      MenuCategoryConnection: MenuCategoryConnectionObject
      MenuCategoryEdge: MenuCategoryEdgeObject
      AggregateMenuCategory: AggregateMenuCategoryObject
      MenuItemConnection: MenuItemConnectionObject
      MenuItemEdge: MenuItemEdgeObject
      AggregateMenuItem: AggregateMenuItemObject
      OptionItemConnection: OptionItemConnectionObject
      OptionItemEdge: OptionItemEdgeObject
      AggregateOptionItem: AggregateOptionItemObject
      OptionConnection: OptionConnectionObject
      OptionEdge: OptionEdgeObject
      AggregateOption: AggregateOptionObject
      OrderItemOptionItemConnection: OrderItemOptionItemConnectionObject
      OrderItemOptionItemEdge: OrderItemOptionItemEdgeObject
      AggregateOrderItemOptionItem: AggregateOrderItemOptionItemObject
      OrderItemOptionConnection: OrderItemOptionConnectionObject
      OrderItemOptionEdge: OrderItemOptionEdgeObject
      AggregateOrderItemOption: AggregateOrderItemOptionObject
      OrderItemConnection: OrderItemConnectionObject
      OrderItemEdge: OrderItemEdgeObject
      AggregateOrderItem: AggregateOrderItemObject
      OrderConnection: OrderConnectionObject
      OrderEdge: OrderEdgeObject
      AggregateOrder: AggregateOrderObject
      Mutation: MutationObject
      BatchPayload: BatchPayloadObject
      Subscription: SubscriptionObject
      CustomerSubscriptionPayload: CustomerSubscriptionPayloadObject
      CustomerPreviousValues: CustomerPreviousValuesObject
      PaymentMethodSubscriptionPayload: PaymentMethodSubscriptionPayloadObject
      PaymentMethodPreviousValues: PaymentMethodPreviousValuesObject
      AddressSubscriptionPayload: AddressSubscriptionPayloadObject
      AddressPreviousValues: AddressPreviousValuesObject
      RestaurantSubscriptionPayload: RestaurantSubscriptionPayloadObject
      RestaurantPreviousValues: RestaurantPreviousValuesObject
      OpeningTimeSubscriptionPayload: OpeningTimeSubscriptionPayloadObject
      OpeningTimePreviousValues: OpeningTimePreviousValuesObject
      ServiceTimeSubscriptionPayload: ServiceTimeSubscriptionPayloadObject
      ServiceTimePreviousValues: ServiceTimePreviousValuesObject
      MenuSubscriptionPayload: MenuSubscriptionPayloadObject
      MenuPreviousValues: MenuPreviousValuesObject
      MenuCategorySubscriptionPayload: MenuCategorySubscriptionPayloadObject
      MenuCategoryPreviousValues: MenuCategoryPreviousValuesObject
      MenuItemSubscriptionPayload: MenuItemSubscriptionPayloadObject
      MenuItemPreviousValues: MenuItemPreviousValuesObject
      OptionItemSubscriptionPayload: OptionItemSubscriptionPayloadObject
      OptionItemPreviousValues: OptionItemPreviousValuesObject
      OptionSubscriptionPayload: OptionSubscriptionPayloadObject
      OptionPreviousValues: OptionPreviousValuesObject
      OrderItemOptionItemSubscriptionPayload: OrderItemOptionItemSubscriptionPayloadObject
      OrderItemOptionItemPreviousValues: OrderItemOptionItemPreviousValuesObject
      OrderItemOptionSubscriptionPayload: OrderItemOptionSubscriptionPayloadObject
      OrderItemOptionPreviousValues: OrderItemOptionPreviousValuesObject
      OrderItemSubscriptionPayload: OrderItemSubscriptionPayloadObject
      OrderItemPreviousValues: OrderItemPreviousValuesObject
      OrderSubscriptionPayload: OrderSubscriptionPayloadObject
      OrderPreviousValues: OrderPreviousValuesObject
    }
    fieldsDetails: {
      Query: QueryFieldDetails
      Customer: CustomerFieldDetails
      Order: OrderFieldDetails
      Restaurant: RestaurantFieldDetails
      Address: AddressFieldDetails
      OpeningTime: OpeningTimeFieldDetails
      Menu: MenuFieldDetails
      ServiceTime: ServiceTimeFieldDetails
      MenuCategory: MenuCategoryFieldDetails
      MenuItem: MenuItemFieldDetails
      Option: OptionFieldDetails
      OptionItem: OptionItemFieldDetails
      OrderItem: OrderItemFieldDetails
      OrderItemOption: OrderItemOptionFieldDetails
      OrderItemOptionItem: OrderItemOptionItemFieldDetails
      PaymentMethod: PaymentMethodFieldDetails
      CustomerConnection: CustomerConnectionFieldDetails
      PageInfo: PageInfoFieldDetails
      CustomerEdge: CustomerEdgeFieldDetails
      AggregateCustomer: AggregateCustomerFieldDetails
      PaymentMethodConnection: PaymentMethodConnectionFieldDetails
      PaymentMethodEdge: PaymentMethodEdgeFieldDetails
      AggregatePaymentMethod: AggregatePaymentMethodFieldDetails
      AddressConnection: AddressConnectionFieldDetails
      AddressEdge: AddressEdgeFieldDetails
      AggregateAddress: AggregateAddressFieldDetails
      RestaurantConnection: RestaurantConnectionFieldDetails
      RestaurantEdge: RestaurantEdgeFieldDetails
      AggregateRestaurant: AggregateRestaurantFieldDetails
      OpeningTimeConnection: OpeningTimeConnectionFieldDetails
      OpeningTimeEdge: OpeningTimeEdgeFieldDetails
      AggregateOpeningTime: AggregateOpeningTimeFieldDetails
      ServiceTimeConnection: ServiceTimeConnectionFieldDetails
      ServiceTimeEdge: ServiceTimeEdgeFieldDetails
      AggregateServiceTime: AggregateServiceTimeFieldDetails
      MenuConnection: MenuConnectionFieldDetails
      MenuEdge: MenuEdgeFieldDetails
      AggregateMenu: AggregateMenuFieldDetails
      MenuCategoryConnection: MenuCategoryConnectionFieldDetails
      MenuCategoryEdge: MenuCategoryEdgeFieldDetails
      AggregateMenuCategory: AggregateMenuCategoryFieldDetails
      MenuItemConnection: MenuItemConnectionFieldDetails
      MenuItemEdge: MenuItemEdgeFieldDetails
      AggregateMenuItem: AggregateMenuItemFieldDetails
      OptionItemConnection: OptionItemConnectionFieldDetails
      OptionItemEdge: OptionItemEdgeFieldDetails
      AggregateOptionItem: AggregateOptionItemFieldDetails
      OptionConnection: OptionConnectionFieldDetails
      OptionEdge: OptionEdgeFieldDetails
      AggregateOption: AggregateOptionFieldDetails
      OrderItemOptionItemConnection: OrderItemOptionItemConnectionFieldDetails
      OrderItemOptionItemEdge: OrderItemOptionItemEdgeFieldDetails
      AggregateOrderItemOptionItem: AggregateOrderItemOptionItemFieldDetails
      OrderItemOptionConnection: OrderItemOptionConnectionFieldDetails
      OrderItemOptionEdge: OrderItemOptionEdgeFieldDetails
      AggregateOrderItemOption: AggregateOrderItemOptionFieldDetails
      OrderItemConnection: OrderItemConnectionFieldDetails
      OrderItemEdge: OrderItemEdgeFieldDetails
      AggregateOrderItem: AggregateOrderItemFieldDetails
      OrderConnection: OrderConnectionFieldDetails
      OrderEdge: OrderEdgeFieldDetails
      AggregateOrder: AggregateOrderFieldDetails
      Mutation: MutationFieldDetails
      BatchPayload: BatchPayloadFieldDetails
      Subscription: SubscriptionFieldDetails
      CustomerSubscriptionPayload: CustomerSubscriptionPayloadFieldDetails
      CustomerPreviousValues: CustomerPreviousValuesFieldDetails
      PaymentMethodSubscriptionPayload: PaymentMethodSubscriptionPayloadFieldDetails
      PaymentMethodPreviousValues: PaymentMethodPreviousValuesFieldDetails
      AddressSubscriptionPayload: AddressSubscriptionPayloadFieldDetails
      AddressPreviousValues: AddressPreviousValuesFieldDetails
      RestaurantSubscriptionPayload: RestaurantSubscriptionPayloadFieldDetails
      RestaurantPreviousValues: RestaurantPreviousValuesFieldDetails
      OpeningTimeSubscriptionPayload: OpeningTimeSubscriptionPayloadFieldDetails
      OpeningTimePreviousValues: OpeningTimePreviousValuesFieldDetails
      ServiceTimeSubscriptionPayload: ServiceTimeSubscriptionPayloadFieldDetails
      ServiceTimePreviousValues: ServiceTimePreviousValuesFieldDetails
      MenuSubscriptionPayload: MenuSubscriptionPayloadFieldDetails
      MenuPreviousValues: MenuPreviousValuesFieldDetails
      MenuCategorySubscriptionPayload: MenuCategorySubscriptionPayloadFieldDetails
      MenuCategoryPreviousValues: MenuCategoryPreviousValuesFieldDetails
      MenuItemSubscriptionPayload: MenuItemSubscriptionPayloadFieldDetails
      MenuItemPreviousValues: MenuItemPreviousValuesFieldDetails
      OptionItemSubscriptionPayload: OptionItemSubscriptionPayloadFieldDetails
      OptionItemPreviousValues: OptionItemPreviousValuesFieldDetails
      OptionSubscriptionPayload: OptionSubscriptionPayloadFieldDetails
      OptionPreviousValues: OptionPreviousValuesFieldDetails
      OrderItemOptionItemSubscriptionPayload: OrderItemOptionItemSubscriptionPayloadFieldDetails
      OrderItemOptionItemPreviousValues: OrderItemOptionItemPreviousValuesFieldDetails
      OrderItemOptionSubscriptionPayload: OrderItemOptionSubscriptionPayloadFieldDetails
      OrderItemOptionPreviousValues: OrderItemOptionPreviousValuesFieldDetails
      OrderItemSubscriptionPayload: OrderItemSubscriptionPayloadFieldDetails
      OrderItemPreviousValues: OrderItemPreviousValuesFieldDetails
      OrderSubscriptionPayload: OrderSubscriptionPayloadFieldDetails
      OrderPreviousValues: OrderPreviousValuesFieldDetails
    }
  }
  inputTypes: {
    fields: {
      CustomerWhereUniqueInput: CustomerWhereUniqueInputInputObject
      OrderWhereInput: OrderWhereInputInputObject
      RestaurantWhereInput: RestaurantWhereInputInputObject
      AddressWhereInput: AddressWhereInputInputObject
      OpeningTimeWhereInput: OpeningTimeWhereInputInputObject
      MenuWhereInput: MenuWhereInputInputObject
      ServiceTimeWhereInput: ServiceTimeWhereInputInputObject
      MenuCategoryWhereInput: MenuCategoryWhereInputInputObject
      MenuItemWhereInput: MenuItemWhereInputInputObject
      OptionWhereInput: OptionWhereInputInputObject
      OptionItemWhereInput: OptionItemWhereInputInputObject
      CustomerWhereInput: CustomerWhereInputInputObject
      PaymentMethodWhereInput: PaymentMethodWhereInputInputObject
      OrderItemWhereInput: OrderItemWhereInputInputObject
      OrderItemOptionWhereInput: OrderItemOptionWhereInputInputObject
      OrderItemOptionItemWhereInput: OrderItemOptionItemWhereInputInputObject
      PaymentMethodWhereUniqueInput: PaymentMethodWhereUniqueInputInputObject
      AddressWhereUniqueInput: AddressWhereUniqueInputInputObject
      RestaurantWhereUniqueInput: RestaurantWhereUniqueInputInputObject
      OpeningTimeWhereUniqueInput: OpeningTimeWhereUniqueInputInputObject
      ServiceTimeWhereUniqueInput: ServiceTimeWhereUniqueInputInputObject
      MenuWhereUniqueInput: MenuWhereUniqueInputInputObject
      MenuCategoryWhereUniqueInput: MenuCategoryWhereUniqueInputInputObject
      MenuItemWhereUniqueInput: MenuItemWhereUniqueInputInputObject
      OptionItemWhereUniqueInput: OptionItemWhereUniqueInputInputObject
      OptionWhereUniqueInput: OptionWhereUniqueInputInputObject
      OrderItemOptionItemWhereUniqueInput: OrderItemOptionItemWhereUniqueInputInputObject
      OrderItemOptionWhereUniqueInput: OrderItemOptionWhereUniqueInputInputObject
      OrderItemWhereUniqueInput: OrderItemWhereUniqueInputInputObject
      OrderWhereUniqueInput: OrderWhereUniqueInputInputObject
      CustomerCreateInput: CustomerCreateInputInputObject
      OrderCreateManyWithoutCustomerInput: OrderCreateManyWithoutCustomerInputInputObject
      OrderCreateWithoutCustomerInput: OrderCreateWithoutCustomerInputInputObject
      RestaurantCreateOneInput: RestaurantCreateOneInputInputObject
      RestaurantCreateInput: RestaurantCreateInputInputObject
      AddressCreateOneWithoutRestaurantInput: AddressCreateOneWithoutRestaurantInputInputObject
      AddressCreateWithoutRestaurantInput: AddressCreateWithoutRestaurantInputInputObject
      RestaurantCreatetagsInput: RestaurantCreatetagsInputInputObject
      OpeningTimeCreateManyWithoutRestaurantInput: OpeningTimeCreateManyWithoutRestaurantInputInputObject
      OpeningTimeCreateWithoutRestaurantInput: OpeningTimeCreateWithoutRestaurantInputInputObject
      OpeningTimeCreatehoursInput: OpeningTimeCreatehoursInputInputObject
      OpeningTimeCreatedaysInput: OpeningTimeCreatedaysInputInputObject
      MenuCreateManyWithoutRestaurantInput: MenuCreateManyWithoutRestaurantInputInputObject
      MenuCreateWithoutRestaurantInput: MenuCreateWithoutRestaurantInputInputObject
      ServiceTimeCreateManyWithoutMenuInput: ServiceTimeCreateManyWithoutMenuInputInputObject
      ServiceTimeCreateWithoutMenuInput: ServiceTimeCreateWithoutMenuInputInputObject
      ServiceTimeCreatehoursInput: ServiceTimeCreatehoursInputInputObject
      ServiceTimeCreatedaysInput: ServiceTimeCreatedaysInputInputObject
      MenuCategoryCreateManyWithoutMenuInput: MenuCategoryCreateManyWithoutMenuInputInputObject
      MenuCategoryCreateWithoutMenuInput: MenuCategoryCreateWithoutMenuInputInputObject
      MenuItemCreateManyWithoutCategoryInput: MenuItemCreateManyWithoutCategoryInputInputObject
      MenuItemCreateWithoutCategoryInput: MenuItemCreateWithoutCategoryInputInputObject
      MenuItemCreatedietaryInput: MenuItemCreatedietaryInputInputObject
      OptionCreateManyWithoutMenuItemsInput: OptionCreateManyWithoutMenuItemsInputInputObject
      OptionCreateWithoutMenuItemsInput: OptionCreateWithoutMenuItemsInputInputObject
      OptionItemCreateManyWithoutOptionInput: OptionItemCreateManyWithoutOptionInputInputObject
      OptionItemCreateWithoutOptionInput: OptionItemCreateWithoutOptionInputInputObject
      OrderItemCreateManyWithoutOrderInput: OrderItemCreateManyWithoutOrderInputInputObject
      OrderItemCreateWithoutOrderInput: OrderItemCreateWithoutOrderInputInputObject
      OrderItemOptionCreateManyWithoutOrderItemInput: OrderItemOptionCreateManyWithoutOrderItemInputInputObject
      OrderItemOptionCreateWithoutOrderItemInput: OrderItemOptionCreateWithoutOrderItemInputInputObject
      OrderItemOptionItemCreateManyWithoutOptionInput: OrderItemOptionItemCreateManyWithoutOptionInputInputObject
      OrderItemOptionItemCreateWithoutOptionInput: OrderItemOptionItemCreateWithoutOptionInputInputObject
      PaymentMethodCreateOneWithoutCustomerInput: PaymentMethodCreateOneWithoutCustomerInputInputObject
      PaymentMethodCreateWithoutCustomerInput: PaymentMethodCreateWithoutCustomerInputInputObject
      CustomerUpdateInput: CustomerUpdateInputInputObject
      OrderUpdateManyWithoutCustomerInput: OrderUpdateManyWithoutCustomerInputInputObject
      OrderUpdateWithWhereUniqueWithoutCustomerInput: OrderUpdateWithWhereUniqueWithoutCustomerInputInputObject
      OrderUpdateWithoutCustomerDataInput: OrderUpdateWithoutCustomerDataInputInputObject
      RestaurantUpdateOneRequiredInput: RestaurantUpdateOneRequiredInputInputObject
      RestaurantUpdateDataInput: RestaurantUpdateDataInputInputObject
      AddressUpdateOneRequiredWithoutRestaurantInput: AddressUpdateOneRequiredWithoutRestaurantInputInputObject
      AddressUpdateWithoutRestaurantDataInput: AddressUpdateWithoutRestaurantDataInputInputObject
      AddressUpsertWithoutRestaurantInput: AddressUpsertWithoutRestaurantInputInputObject
      RestaurantUpdatetagsInput: RestaurantUpdatetagsInputInputObject
      OpeningTimeUpdateManyWithoutRestaurantInput: OpeningTimeUpdateManyWithoutRestaurantInputInputObject
      OpeningTimeUpdateWithWhereUniqueWithoutRestaurantInput: OpeningTimeUpdateWithWhereUniqueWithoutRestaurantInputInputObject
      OpeningTimeUpdateWithoutRestaurantDataInput: OpeningTimeUpdateWithoutRestaurantDataInputInputObject
      OpeningTimeUpdatehoursInput: OpeningTimeUpdatehoursInputInputObject
      OpeningTimeUpdatedaysInput: OpeningTimeUpdatedaysInputInputObject
      OpeningTimeUpsertWithWhereUniqueWithoutRestaurantInput: OpeningTimeUpsertWithWhereUniqueWithoutRestaurantInputInputObject
      OpeningTimeScalarWhereInput: OpeningTimeScalarWhereInputInputObject
      OpeningTimeUpdateManyWithWhereNestedInput: OpeningTimeUpdateManyWithWhereNestedInputInputObject
      OpeningTimeUpdateManyDataInput: OpeningTimeUpdateManyDataInputInputObject
      MenuUpdateManyWithoutRestaurantInput: MenuUpdateManyWithoutRestaurantInputInputObject
      MenuUpdateWithWhereUniqueWithoutRestaurantInput: MenuUpdateWithWhereUniqueWithoutRestaurantInputInputObject
      MenuUpdateWithoutRestaurantDataInput: MenuUpdateWithoutRestaurantDataInputInputObject
      ServiceTimeUpdateManyWithoutMenuInput: ServiceTimeUpdateManyWithoutMenuInputInputObject
      ServiceTimeUpdateWithWhereUniqueWithoutMenuInput: ServiceTimeUpdateWithWhereUniqueWithoutMenuInputInputObject
      ServiceTimeUpdateWithoutMenuDataInput: ServiceTimeUpdateWithoutMenuDataInputInputObject
      ServiceTimeUpdatehoursInput: ServiceTimeUpdatehoursInputInputObject
      ServiceTimeUpdatedaysInput: ServiceTimeUpdatedaysInputInputObject
      ServiceTimeUpsertWithWhereUniqueWithoutMenuInput: ServiceTimeUpsertWithWhereUniqueWithoutMenuInputInputObject
      ServiceTimeScalarWhereInput: ServiceTimeScalarWhereInputInputObject
      ServiceTimeUpdateManyWithWhereNestedInput: ServiceTimeUpdateManyWithWhereNestedInputInputObject
      ServiceTimeUpdateManyDataInput: ServiceTimeUpdateManyDataInputInputObject
      MenuCategoryUpdateManyWithoutMenuInput: MenuCategoryUpdateManyWithoutMenuInputInputObject
      MenuCategoryUpdateWithWhereUniqueWithoutMenuInput: MenuCategoryUpdateWithWhereUniqueWithoutMenuInputInputObject
      MenuCategoryUpdateWithoutMenuDataInput: MenuCategoryUpdateWithoutMenuDataInputInputObject
      MenuItemUpdateManyWithoutCategoryInput: MenuItemUpdateManyWithoutCategoryInputInputObject
      MenuItemUpdateWithWhereUniqueWithoutCategoryInput: MenuItemUpdateWithWhereUniqueWithoutCategoryInputInputObject
      MenuItemUpdateWithoutCategoryDataInput: MenuItemUpdateWithoutCategoryDataInputInputObject
      MenuItemUpdatedietaryInput: MenuItemUpdatedietaryInputInputObject
      OptionUpdateManyWithoutMenuItemsInput: OptionUpdateManyWithoutMenuItemsInputInputObject
      OptionUpdateWithWhereUniqueWithoutMenuItemsInput: OptionUpdateWithWhereUniqueWithoutMenuItemsInputInputObject
      OptionUpdateWithoutMenuItemsDataInput: OptionUpdateWithoutMenuItemsDataInputInputObject
      OptionItemUpdateManyWithoutOptionInput: OptionItemUpdateManyWithoutOptionInputInputObject
      OptionItemUpdateWithWhereUniqueWithoutOptionInput: OptionItemUpdateWithWhereUniqueWithoutOptionInputInputObject
      OptionItemUpdateWithoutOptionDataInput: OptionItemUpdateWithoutOptionDataInputInputObject
      OptionItemUpsertWithWhereUniqueWithoutOptionInput: OptionItemUpsertWithWhereUniqueWithoutOptionInputInputObject
      OptionItemScalarWhereInput: OptionItemScalarWhereInputInputObject
      OptionItemUpdateManyWithWhereNestedInput: OptionItemUpdateManyWithWhereNestedInputInputObject
      OptionItemUpdateManyDataInput: OptionItemUpdateManyDataInputInputObject
      RestaurantUpdateOneInput: RestaurantUpdateOneInputInputObject
      RestaurantUpsertNestedInput: RestaurantUpsertNestedInputInputObject
      OptionUpsertWithWhereUniqueWithoutMenuItemsInput: OptionUpsertWithWhereUniqueWithoutMenuItemsInputInputObject
      OptionScalarWhereInput: OptionScalarWhereInputInputObject
      OptionUpdateManyWithWhereNestedInput: OptionUpdateManyWithWhereNestedInputInputObject
      OptionUpdateManyDataInput: OptionUpdateManyDataInputInputObject
      MenuItemUpsertWithWhereUniqueWithoutCategoryInput: MenuItemUpsertWithWhereUniqueWithoutCategoryInputInputObject
      MenuItemScalarWhereInput: MenuItemScalarWhereInputInputObject
      MenuItemUpdateManyWithWhereNestedInput: MenuItemUpdateManyWithWhereNestedInputInputObject
      MenuItemUpdateManyDataInput: MenuItemUpdateManyDataInputInputObject
      MenuCategoryUpsertWithWhereUniqueWithoutMenuInput: MenuCategoryUpsertWithWhereUniqueWithoutMenuInputInputObject
      MenuCategoryScalarWhereInput: MenuCategoryScalarWhereInputInputObject
      MenuCategoryUpdateManyWithWhereNestedInput: MenuCategoryUpdateManyWithWhereNestedInputInputObject
      MenuCategoryUpdateManyDataInput: MenuCategoryUpdateManyDataInputInputObject
      MenuUpsertWithWhereUniqueWithoutRestaurantInput: MenuUpsertWithWhereUniqueWithoutRestaurantInputInputObject
      MenuScalarWhereInput: MenuScalarWhereInputInputObject
      MenuUpdateManyWithWhereNestedInput: MenuUpdateManyWithWhereNestedInputInputObject
      MenuUpdateManyDataInput: MenuUpdateManyDataInputInputObject
      OrderItemUpdateManyWithoutOrderInput: OrderItemUpdateManyWithoutOrderInputInputObject
      OrderItemUpdateWithWhereUniqueWithoutOrderInput: OrderItemUpdateWithWhereUniqueWithoutOrderInputInputObject
      OrderItemUpdateWithoutOrderDataInput: OrderItemUpdateWithoutOrderDataInputInputObject
      OrderItemOptionUpdateManyWithoutOrderItemInput: OrderItemOptionUpdateManyWithoutOrderItemInputInputObject
      OrderItemOptionUpdateWithWhereUniqueWithoutOrderItemInput: OrderItemOptionUpdateWithWhereUniqueWithoutOrderItemInputInputObject
      OrderItemOptionUpdateWithoutOrderItemDataInput: OrderItemOptionUpdateWithoutOrderItemDataInputInputObject
      OrderItemOptionItemUpdateManyWithoutOptionInput: OrderItemOptionItemUpdateManyWithoutOptionInputInputObject
      OrderItemOptionItemUpdateWithWhereUniqueWithoutOptionInput: OrderItemOptionItemUpdateWithWhereUniqueWithoutOptionInputInputObject
      OrderItemOptionItemUpdateWithoutOptionDataInput: OrderItemOptionItemUpdateWithoutOptionDataInputInputObject
      OrderItemOptionItemUpsertWithWhereUniqueWithoutOptionInput: OrderItemOptionItemUpsertWithWhereUniqueWithoutOptionInputInputObject
      OrderItemOptionItemScalarWhereInput: OrderItemOptionItemScalarWhereInputInputObject
      OrderItemOptionItemUpdateManyWithWhereNestedInput: OrderItemOptionItemUpdateManyWithWhereNestedInputInputObject
      OrderItemOptionItemUpdateManyDataInput: OrderItemOptionItemUpdateManyDataInputInputObject
      OrderItemOptionUpsertWithWhereUniqueWithoutOrderItemInput: OrderItemOptionUpsertWithWhereUniqueWithoutOrderItemInputInputObject
      OrderItemOptionScalarWhereInput: OrderItemOptionScalarWhereInputInputObject
      OrderItemOptionUpdateManyWithWhereNestedInput: OrderItemOptionUpdateManyWithWhereNestedInputInputObject
      OrderItemOptionUpdateManyDataInput: OrderItemOptionUpdateManyDataInputInputObject
      OrderItemUpsertWithWhereUniqueWithoutOrderInput: OrderItemUpsertWithWhereUniqueWithoutOrderInputInputObject
      OrderItemScalarWhereInput: OrderItemScalarWhereInputInputObject
      OrderItemUpdateManyWithWhereNestedInput: OrderItemUpdateManyWithWhereNestedInputInputObject
      OrderItemUpdateManyDataInput: OrderItemUpdateManyDataInputInputObject
      OrderUpsertWithWhereUniqueWithoutCustomerInput: OrderUpsertWithWhereUniqueWithoutCustomerInputInputObject
      OrderScalarWhereInput: OrderScalarWhereInputInputObject
      OrderUpdateManyWithWhereNestedInput: OrderUpdateManyWithWhereNestedInputInputObject
      OrderUpdateManyDataInput: OrderUpdateManyDataInputInputObject
      PaymentMethodUpdateOneWithoutCustomerInput: PaymentMethodUpdateOneWithoutCustomerInputInputObject
      PaymentMethodUpdateWithoutCustomerDataInput: PaymentMethodUpdateWithoutCustomerDataInputInputObject
      PaymentMethodUpsertWithoutCustomerInput: PaymentMethodUpsertWithoutCustomerInputInputObject
      CustomerUpdateManyMutationInput: CustomerUpdateManyMutationInputInputObject
      PaymentMethodCreateInput: PaymentMethodCreateInputInputObject
      CustomerCreateOneWithoutPaymentMethodInput: CustomerCreateOneWithoutPaymentMethodInputInputObject
      CustomerCreateWithoutPaymentMethodInput: CustomerCreateWithoutPaymentMethodInputInputObject
      PaymentMethodUpdateInput: PaymentMethodUpdateInputInputObject
      CustomerUpdateOneWithoutPaymentMethodInput: CustomerUpdateOneWithoutPaymentMethodInputInputObject
      CustomerUpdateWithoutPaymentMethodDataInput: CustomerUpdateWithoutPaymentMethodDataInputInputObject
      CustomerUpsertWithoutPaymentMethodInput: CustomerUpsertWithoutPaymentMethodInputInputObject
      PaymentMethodUpdateManyMutationInput: PaymentMethodUpdateManyMutationInputInputObject
      AddressCreateInput: AddressCreateInputInputObject
      RestaurantCreateOneWithoutAddressInput: RestaurantCreateOneWithoutAddressInputInputObject
      RestaurantCreateWithoutAddressInput: RestaurantCreateWithoutAddressInputInputObject
      AddressUpdateInput: AddressUpdateInputInputObject
      RestaurantUpdateOneRequiredWithoutAddressInput: RestaurantUpdateOneRequiredWithoutAddressInputInputObject
      RestaurantUpdateWithoutAddressDataInput: RestaurantUpdateWithoutAddressDataInputInputObject
      RestaurantUpsertWithoutAddressInput: RestaurantUpsertWithoutAddressInputInputObject
      AddressUpdateManyMutationInput: AddressUpdateManyMutationInputInputObject
      RestaurantUpdateInput: RestaurantUpdateInputInputObject
      RestaurantUpdateManyMutationInput: RestaurantUpdateManyMutationInputInputObject
      OpeningTimeCreateInput: OpeningTimeCreateInputInputObject
      RestaurantCreateOneWithoutOpeningTimesInput: RestaurantCreateOneWithoutOpeningTimesInputInputObject
      RestaurantCreateWithoutOpeningTimesInput: RestaurantCreateWithoutOpeningTimesInputInputObject
      OpeningTimeUpdateInput: OpeningTimeUpdateInputInputObject
      RestaurantUpdateOneWithoutOpeningTimesInput: RestaurantUpdateOneWithoutOpeningTimesInputInputObject
      RestaurantUpdateWithoutOpeningTimesDataInput: RestaurantUpdateWithoutOpeningTimesDataInputInputObject
      RestaurantUpsertWithoutOpeningTimesInput: RestaurantUpsertWithoutOpeningTimesInputInputObject
      OpeningTimeUpdateManyMutationInput: OpeningTimeUpdateManyMutationInputInputObject
      ServiceTimeCreateInput: ServiceTimeCreateInputInputObject
      MenuCreateOneWithoutServiceTimesInput: MenuCreateOneWithoutServiceTimesInputInputObject
      MenuCreateWithoutServiceTimesInput: MenuCreateWithoutServiceTimesInputInputObject
      RestaurantCreateOneWithoutMenusInput: RestaurantCreateOneWithoutMenusInputInputObject
      RestaurantCreateWithoutMenusInput: RestaurantCreateWithoutMenusInputInputObject
      ServiceTimeUpdateInput: ServiceTimeUpdateInputInputObject
      MenuUpdateOneWithoutServiceTimesInput: MenuUpdateOneWithoutServiceTimesInputInputObject
      MenuUpdateWithoutServiceTimesDataInput: MenuUpdateWithoutServiceTimesDataInputInputObject
      RestaurantUpdateOneRequiredWithoutMenusInput: RestaurantUpdateOneRequiredWithoutMenusInputInputObject
      RestaurantUpdateWithoutMenusDataInput: RestaurantUpdateWithoutMenusDataInputInputObject
      RestaurantUpsertWithoutMenusInput: RestaurantUpsertWithoutMenusInputInputObject
      MenuUpsertWithoutServiceTimesInput: MenuUpsertWithoutServiceTimesInputInputObject
      ServiceTimeUpdateManyMutationInput: ServiceTimeUpdateManyMutationInputInputObject
      MenuCreateInput: MenuCreateInputInputObject
      MenuUpdateInput: MenuUpdateInputInputObject
      MenuUpdateManyMutationInput: MenuUpdateManyMutationInputInputObject
      MenuCategoryCreateInput: MenuCategoryCreateInputInputObject
      MenuCreateOneWithoutCategoriesInput: MenuCreateOneWithoutCategoriesInputInputObject
      MenuCreateWithoutCategoriesInput: MenuCreateWithoutCategoriesInputInputObject
      MenuCategoryUpdateInput: MenuCategoryUpdateInputInputObject
      MenuUpdateOneRequiredWithoutCategoriesInput: MenuUpdateOneRequiredWithoutCategoriesInputInputObject
      MenuUpdateWithoutCategoriesDataInput: MenuUpdateWithoutCategoriesDataInputInputObject
      MenuUpsertWithoutCategoriesInput: MenuUpsertWithoutCategoriesInputInputObject
      MenuCategoryUpdateManyMutationInput: MenuCategoryUpdateManyMutationInputInputObject
      MenuItemCreateInput: MenuItemCreateInputInputObject
      MenuCategoryCreateOneWithoutItemsInput: MenuCategoryCreateOneWithoutItemsInputInputObject
      MenuCategoryCreateWithoutItemsInput: MenuCategoryCreateWithoutItemsInputInputObject
      MenuItemUpdateInput: MenuItemUpdateInputInputObject
      MenuCategoryUpdateOneWithoutItemsInput: MenuCategoryUpdateOneWithoutItemsInputInputObject
      MenuCategoryUpdateWithoutItemsDataInput: MenuCategoryUpdateWithoutItemsDataInputInputObject
      MenuCategoryUpsertWithoutItemsInput: MenuCategoryUpsertWithoutItemsInputInputObject
      MenuItemUpdateManyMutationInput: MenuItemUpdateManyMutationInputInputObject
      OptionItemCreateInput: OptionItemCreateInputInputObject
      OptionCreateOneWithoutItemsInput: OptionCreateOneWithoutItemsInputInputObject
      OptionCreateWithoutItemsInput: OptionCreateWithoutItemsInputInputObject
      MenuItemCreateManyWithoutOptionsInput: MenuItemCreateManyWithoutOptionsInputInputObject
      MenuItemCreateWithoutOptionsInput: MenuItemCreateWithoutOptionsInputInputObject
      OptionItemUpdateInput: OptionItemUpdateInputInputObject
      OptionUpdateOneWithoutItemsInput: OptionUpdateOneWithoutItemsInputInputObject
      OptionUpdateWithoutItemsDataInput: OptionUpdateWithoutItemsDataInputInputObject
      MenuItemUpdateManyWithoutOptionsInput: MenuItemUpdateManyWithoutOptionsInputInputObject
      MenuItemUpdateWithWhereUniqueWithoutOptionsInput: MenuItemUpdateWithWhereUniqueWithoutOptionsInputInputObject
      MenuItemUpdateWithoutOptionsDataInput: MenuItemUpdateWithoutOptionsDataInputInputObject
      MenuItemUpsertWithWhereUniqueWithoutOptionsInput: MenuItemUpsertWithWhereUniqueWithoutOptionsInputInputObject
      OptionUpsertWithoutItemsInput: OptionUpsertWithoutItemsInputInputObject
      OptionItemUpdateManyMutationInput: OptionItemUpdateManyMutationInputInputObject
      OptionCreateInput: OptionCreateInputInputObject
      OptionUpdateInput: OptionUpdateInputInputObject
      OptionUpdateManyMutationInput: OptionUpdateManyMutationInputInputObject
      OrderItemOptionItemCreateInput: OrderItemOptionItemCreateInputInputObject
      OrderItemOptionCreateOneWithoutItemsInput: OrderItemOptionCreateOneWithoutItemsInputInputObject
      OrderItemOptionCreateWithoutItemsInput: OrderItemOptionCreateWithoutItemsInputInputObject
      OrderItemCreateOneWithoutOptionsInput: OrderItemCreateOneWithoutOptionsInputInputObject
      OrderItemCreateWithoutOptionsInput: OrderItemCreateWithoutOptionsInputInputObject
      OrderCreateOneWithoutItemsInput: OrderCreateOneWithoutItemsInputInputObject
      OrderCreateWithoutItemsInput: OrderCreateWithoutItemsInputInputObject
      CustomerCreateOneWithoutOrdersInput: CustomerCreateOneWithoutOrdersInputInputObject
      CustomerCreateWithoutOrdersInput: CustomerCreateWithoutOrdersInputInputObject
      OrderItemOptionItemUpdateInput: OrderItemOptionItemUpdateInputInputObject
      OrderItemOptionUpdateOneWithoutItemsInput: OrderItemOptionUpdateOneWithoutItemsInputInputObject
      OrderItemOptionUpdateWithoutItemsDataInput: OrderItemOptionUpdateWithoutItemsDataInputInputObject
      OrderItemUpdateOneRequiredWithoutOptionsInput: OrderItemUpdateOneRequiredWithoutOptionsInputInputObject
      OrderItemUpdateWithoutOptionsDataInput: OrderItemUpdateWithoutOptionsDataInputInputObject
      OrderUpdateOneRequiredWithoutItemsInput: OrderUpdateOneRequiredWithoutItemsInputInputObject
      OrderUpdateWithoutItemsDataInput: OrderUpdateWithoutItemsDataInputInputObject
      CustomerUpdateOneRequiredWithoutOrdersInput: CustomerUpdateOneRequiredWithoutOrdersInputInputObject
      CustomerUpdateWithoutOrdersDataInput: CustomerUpdateWithoutOrdersDataInputInputObject
      CustomerUpsertWithoutOrdersInput: CustomerUpsertWithoutOrdersInputInputObject
      OrderUpsertWithoutItemsInput: OrderUpsertWithoutItemsInputInputObject
      OrderItemUpsertWithoutOptionsInput: OrderItemUpsertWithoutOptionsInputInputObject
      OrderItemOptionUpsertWithoutItemsInput: OrderItemOptionUpsertWithoutItemsInputInputObject
      OrderItemOptionItemUpdateManyMutationInput: OrderItemOptionItemUpdateManyMutationInputInputObject
      OrderItemOptionCreateInput: OrderItemOptionCreateInputInputObject
      OrderItemOptionUpdateInput: OrderItemOptionUpdateInputInputObject
      OrderItemOptionUpdateManyMutationInput: OrderItemOptionUpdateManyMutationInputInputObject
      OrderItemCreateInput: OrderItemCreateInputInputObject
      OrderItemUpdateInput: OrderItemUpdateInputInputObject
      OrderItemUpdateManyMutationInput: OrderItemUpdateManyMutationInputInputObject
      OrderCreateInput: OrderCreateInputInputObject
      OrderUpdateInput: OrderUpdateInputInputObject
      OrderUpdateManyMutationInput: OrderUpdateManyMutationInputInputObject
      CustomerSubscriptionWhereInput: CustomerSubscriptionWhereInputInputObject
      PaymentMethodSubscriptionWhereInput: PaymentMethodSubscriptionWhereInputInputObject
      AddressSubscriptionWhereInput: AddressSubscriptionWhereInputInputObject
      RestaurantSubscriptionWhereInput: RestaurantSubscriptionWhereInputInputObject
      OpeningTimeSubscriptionWhereInput: OpeningTimeSubscriptionWhereInputInputObject
      ServiceTimeSubscriptionWhereInput: ServiceTimeSubscriptionWhereInputInputObject
      MenuSubscriptionWhereInput: MenuSubscriptionWhereInputInputObject
      MenuCategorySubscriptionWhereInput: MenuCategorySubscriptionWhereInputInputObject
      MenuItemSubscriptionWhereInput: MenuItemSubscriptionWhereInputInputObject
      OptionItemSubscriptionWhereInput: OptionItemSubscriptionWhereInputInputObject
      OptionSubscriptionWhereInput: OptionSubscriptionWhereInputInputObject
      OrderItemOptionItemSubscriptionWhereInput: OrderItemOptionItemSubscriptionWhereInputInputObject
      OrderItemOptionSubscriptionWhereInput: OrderItemOptionSubscriptionWhereInputInputObject
      OrderItemSubscriptionWhereInput: OrderItemSubscriptionWhereInputInputObject
      OrderSubscriptionWhereInput: OrderSubscriptionWhereInputInputObject
    }
  }
  enumTypes: {
    OrderOrderByInput: OrderOrderByInputValues,
    OpeningTimeOrderByInput: OpeningTimeOrderByInputValues,
    MenuOrderByInput: MenuOrderByInputValues,
    ServiceTimeOrderByInput: ServiceTimeOrderByInputValues,
    MenuCategoryOrderByInput: MenuCategoryOrderByInputValues,
    MenuItemOrderByInput: MenuItemOrderByInputValues,
    OptionOrderByInput: OptionOrderByInputValues,
    OptionItemOrderByInput: OptionItemOrderByInputValues,
    OrderItemOrderByInput: OrderItemOrderByInputValues,
    OrderItemOptionOrderByInput: OrderItemOptionOrderByInputValues,
    OrderItemOptionItemOrderByInput: OrderItemOptionItemOrderByInputValues,
    CustomerOrderByInput: CustomerOrderByInputValues,
    PaymentMethodOrderByInput: PaymentMethodOrderByInputValues,
    AddressOrderByInput: AddressOrderByInputValues,
    RestaurantOrderByInput: RestaurantOrderByInputValues,
    MutationType: MutationTypeValues,
  }
}

// Types for Query

type QueryObject =
  | QueryFields
  | { name: 'customer', args?: QueryCustomerArgs[] | false, alias?: string  } 
  | { name: 'customers', args?: QueryCustomersArgs[] | false, alias?: string  } 
  | { name: 'customersConnection', args?: QueryCustomersConnectionArgs[] | false, alias?: string  } 
  | { name: 'paymentMethod', args?: QueryPaymentMethodArgs[] | false, alias?: string  } 
  | { name: 'paymentMethods', args?: QueryPaymentMethodsArgs[] | false, alias?: string  } 
  | { name: 'paymentMethodsConnection', args?: QueryPaymentMethodsConnectionArgs[] | false, alias?: string  } 
  | { name: 'address', args?: QueryAddressArgs[] | false, alias?: string  } 
  | { name: 'addresses', args?: QueryAddressesArgs[] | false, alias?: string  } 
  | { name: 'addressesConnection', args?: QueryAddressesConnectionArgs[] | false, alias?: string  } 
  | { name: 'restaurant', args?: QueryRestaurantArgs[] | false, alias?: string  } 
  | { name: 'restaurants', args?: QueryRestaurantsArgs[] | false, alias?: string  } 
  | { name: 'restaurantsConnection', args?: QueryRestaurantsConnectionArgs[] | false, alias?: string  } 
  | { name: 'openingTime', args?: QueryOpeningTimeArgs[] | false, alias?: string  } 
  | { name: 'openingTimes', args?: QueryOpeningTimesArgs[] | false, alias?: string  } 
  | { name: 'openingTimesConnection', args?: QueryOpeningTimesConnectionArgs[] | false, alias?: string  } 
  | { name: 'serviceTime', args?: QueryServiceTimeArgs[] | false, alias?: string  } 
  | { name: 'serviceTimes', args?: QueryServiceTimesArgs[] | false, alias?: string  } 
  | { name: 'serviceTimesConnection', args?: QueryServiceTimesConnectionArgs[] | false, alias?: string  } 
  | { name: 'menu', args?: QueryMenuArgs[] | false, alias?: string  } 
  | { name: 'menus', args?: QueryMenusArgs[] | false, alias?: string  } 
  | { name: 'menusConnection', args?: QueryMenusConnectionArgs[] | false, alias?: string  } 
  | { name: 'menuCategory', args?: QueryMenuCategoryArgs[] | false, alias?: string  } 
  | { name: 'menuCategories', args?: QueryMenuCategoriesArgs[] | false, alias?: string  } 
  | { name: 'menuCategoriesConnection', args?: QueryMenuCategoriesConnectionArgs[] | false, alias?: string  } 
  | { name: 'menuItem', args?: QueryMenuItemArgs[] | false, alias?: string  } 
  | { name: 'menuItems', args?: QueryMenuItemsArgs[] | false, alias?: string  } 
  | { name: 'menuItemsConnection', args?: QueryMenuItemsConnectionArgs[] | false, alias?: string  } 
  | { name: 'optionItem', args?: QueryOptionItemArgs[] | false, alias?: string  } 
  | { name: 'optionItems', args?: QueryOptionItemsArgs[] | false, alias?: string  } 
  | { name: 'optionItemsConnection', args?: QueryOptionItemsConnectionArgs[] | false, alias?: string  } 
  | { name: 'option', args?: QueryOptionArgs[] | false, alias?: string  } 
  | { name: 'options', args?: QueryOptionsArgs[] | false, alias?: string  } 
  | { name: 'optionsConnection', args?: QueryOptionsConnectionArgs[] | false, alias?: string  } 
  | { name: 'orderItemOptionItem', args?: QueryOrderItemOptionItemArgs[] | false, alias?: string  } 
  | { name: 'orderItemOptionItems', args?: QueryOrderItemOptionItemsArgs[] | false, alias?: string  } 
  | { name: 'orderItemOptionItemsConnection', args?: QueryOrderItemOptionItemsConnectionArgs[] | false, alias?: string  } 
  | { name: 'orderItemOption', args?: QueryOrderItemOptionArgs[] | false, alias?: string  } 
  | { name: 'orderItemOptions', args?: QueryOrderItemOptionsArgs[] | false, alias?: string  } 
  | { name: 'orderItemOptionsConnection', args?: QueryOrderItemOptionsConnectionArgs[] | false, alias?: string  } 
  | { name: 'orderItem', args?: QueryOrderItemArgs[] | false, alias?: string  } 
  | { name: 'orderItems', args?: QueryOrderItemsArgs[] | false, alias?: string  } 
  | { name: 'orderItemsConnection', args?: QueryOrderItemsConnectionArgs[] | false, alias?: string  } 
  | { name: 'order', args?: QueryOrderArgs[] | false, alias?: string  } 
  | { name: 'orders', args?: QueryOrdersArgs[] | false, alias?: string  } 
  | { name: 'ordersConnection', args?: QueryOrdersConnectionArgs[] | false, alias?: string  } 

type QueryFields =
  | 'customer'
  | 'customers'
  | 'customersConnection'
  | 'paymentMethod'
  | 'paymentMethods'
  | 'paymentMethodsConnection'
  | 'address'
  | 'addresses'
  | 'addressesConnection'
  | 'restaurant'
  | 'restaurants'
  | 'restaurantsConnection'
  | 'openingTime'
  | 'openingTimes'
  | 'openingTimesConnection'
  | 'serviceTime'
  | 'serviceTimes'
  | 'serviceTimesConnection'
  | 'menu'
  | 'menus'
  | 'menusConnection'
  | 'menuCategory'
  | 'menuCategories'
  | 'menuCategoriesConnection'
  | 'menuItem'
  | 'menuItems'
  | 'menuItemsConnection'
  | 'optionItem'
  | 'optionItems'
  | 'optionItemsConnection'
  | 'option'
  | 'options'
  | 'optionsConnection'
  | 'orderItemOptionItem'
  | 'orderItemOptionItems'
  | 'orderItemOptionItemsConnection'
  | 'orderItemOption'
  | 'orderItemOptions'
  | 'orderItemOptionsConnection'
  | 'orderItem'
  | 'orderItems'
  | 'orderItemsConnection'
  | 'order'
  | 'orders'
  | 'ordersConnection'


type QueryCustomerArgs =
  | 'where'
type QueryCustomersArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryCustomersConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryPaymentMethodArgs =
  | 'where'
type QueryPaymentMethodsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryPaymentMethodsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryAddressArgs =
  | 'where'
type QueryAddressesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryAddressesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryRestaurantArgs =
  | 'where'
type QueryRestaurantsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryRestaurantsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryOpeningTimeArgs =
  | 'where'
type QueryOpeningTimesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryOpeningTimesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryServiceTimeArgs =
  | 'where'
type QueryServiceTimesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryServiceTimesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryMenuArgs =
  | 'where'
type QueryMenusArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryMenusConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryMenuCategoryArgs =
  | 'where'
type QueryMenuCategoriesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryMenuCategoriesConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryMenuItemArgs =
  | 'where'
type QueryMenuItemsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryMenuItemsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryOptionItemArgs =
  | 'where'
type QueryOptionItemsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryOptionItemsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryOptionArgs =
  | 'where'
type QueryOptionsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryOptionsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryOrderItemOptionItemArgs =
  | 'where'
type QueryOrderItemOptionItemsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryOrderItemOptionItemsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryOrderItemOptionArgs =
  | 'where'
type QueryOrderItemOptionsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryOrderItemOptionsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryOrderItemArgs =
  | 'where'
type QueryOrderItemsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryOrderItemsConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryOrderArgs =
  | 'where'
type QueryOrdersArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type QueryOrdersConnectionArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface QueryFieldDetails {
  customer: {
    type: 'Customer'
    args: Record<QueryCustomerArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: CustomerWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Customer | null> | prisma.Customer | null
  }
  customers: {
    type: 'Customer'
    args: Record<QueryCustomersArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: CustomerWhereInput | null, orderBy?: prisma.CustomerOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Customer[]> | prisma.Customer[]
  }
  customersConnection: {
    type: 'CustomerConnection'
    args: Record<QueryCustomersConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: CustomerWhereInput | null, orderBy?: prisma.CustomerOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CustomerConnection> | prisma.CustomerConnection
  }
  paymentMethod: {
    type: 'PaymentMethod'
    args: Record<QueryPaymentMethodArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: PaymentMethodWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PaymentMethod | null> | prisma.PaymentMethod | null
  }
  paymentMethods: {
    type: 'PaymentMethod'
    args: Record<QueryPaymentMethodsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: PaymentMethodWhereInput | null, orderBy?: prisma.PaymentMethodOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PaymentMethod[]> | prisma.PaymentMethod[]
  }
  paymentMethodsConnection: {
    type: 'PaymentMethodConnection'
    args: Record<QueryPaymentMethodsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: PaymentMethodWhereInput | null, orderBy?: prisma.PaymentMethodOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PaymentMethodConnection> | prisma.PaymentMethodConnection
  }
  address: {
    type: 'Address'
    args: Record<QueryAddressArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: AddressWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Address | null> | prisma.Address | null
  }
  addresses: {
    type: 'Address'
    args: Record<QueryAddressesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: AddressWhereInput | null, orderBy?: prisma.AddressOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Address[]> | prisma.Address[]
  }
  addressesConnection: {
    type: 'AddressConnection'
    args: Record<QueryAddressesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: AddressWhereInput | null, orderBy?: prisma.AddressOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AddressConnection> | prisma.AddressConnection
  }
  restaurant: {
    type: 'Restaurant'
    args: Record<QueryRestaurantArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: RestaurantWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Restaurant | null> | prisma.Restaurant | null
  }
  restaurants: {
    type: 'Restaurant'
    args: Record<QueryRestaurantsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: RestaurantWhereInput | null, orderBy?: prisma.RestaurantOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Restaurant[]> | prisma.Restaurant[]
  }
  restaurantsConnection: {
    type: 'RestaurantConnection'
    args: Record<QueryRestaurantsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: RestaurantWhereInput | null, orderBy?: prisma.RestaurantOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.RestaurantConnection> | prisma.RestaurantConnection
  }
  openingTime: {
    type: 'OpeningTime'
    args: Record<QueryOpeningTimeArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: OpeningTimeWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OpeningTime | null> | prisma.OpeningTime | null
  }
  openingTimes: {
    type: 'OpeningTime'
    args: Record<QueryOpeningTimesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: OpeningTimeWhereInput | null, orderBy?: prisma.OpeningTimeOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OpeningTime[]> | prisma.OpeningTime[]
  }
  openingTimesConnection: {
    type: 'OpeningTimeConnection'
    args: Record<QueryOpeningTimesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: OpeningTimeWhereInput | null, orderBy?: prisma.OpeningTimeOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OpeningTimeConnection> | prisma.OpeningTimeConnection
  }
  serviceTime: {
    type: 'ServiceTime'
    args: Record<QueryServiceTimeArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: ServiceTimeWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ServiceTime | null> | prisma.ServiceTime | null
  }
  serviceTimes: {
    type: 'ServiceTime'
    args: Record<QueryServiceTimesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: ServiceTimeWhereInput | null, orderBy?: prisma.ServiceTimeOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ServiceTime[]> | prisma.ServiceTime[]
  }
  serviceTimesConnection: {
    type: 'ServiceTimeConnection'
    args: Record<QueryServiceTimesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: ServiceTimeWhereInput | null, orderBy?: prisma.ServiceTimeOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ServiceTimeConnection> | prisma.ServiceTimeConnection
  }
  menu: {
    type: 'Menu'
    args: Record<QueryMenuArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: MenuWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Menu | null> | prisma.Menu | null
  }
  menus: {
    type: 'Menu'
    args: Record<QueryMenusArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: MenuWhereInput | null, orderBy?: prisma.MenuOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Menu[]> | prisma.Menu[]
  }
  menusConnection: {
    type: 'MenuConnection'
    args: Record<QueryMenusConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: MenuWhereInput | null, orderBy?: prisma.MenuOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuConnection> | prisma.MenuConnection
  }
  menuCategory: {
    type: 'MenuCategory'
    args: Record<QueryMenuCategoryArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: MenuCategoryWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuCategory | null> | prisma.MenuCategory | null
  }
  menuCategories: {
    type: 'MenuCategory'
    args: Record<QueryMenuCategoriesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: MenuCategoryWhereInput | null, orderBy?: prisma.MenuCategoryOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuCategory[]> | prisma.MenuCategory[]
  }
  menuCategoriesConnection: {
    type: 'MenuCategoryConnection'
    args: Record<QueryMenuCategoriesConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: MenuCategoryWhereInput | null, orderBy?: prisma.MenuCategoryOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuCategoryConnection> | prisma.MenuCategoryConnection
  }
  menuItem: {
    type: 'MenuItem'
    args: Record<QueryMenuItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: MenuItemWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuItem | null> | prisma.MenuItem | null
  }
  menuItems: {
    type: 'MenuItem'
    args: Record<QueryMenuItemsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: MenuItemWhereInput | null, orderBy?: prisma.MenuItemOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuItem[]> | prisma.MenuItem[]
  }
  menuItemsConnection: {
    type: 'MenuItemConnection'
    args: Record<QueryMenuItemsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: MenuItemWhereInput | null, orderBy?: prisma.MenuItemOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuItemConnection> | prisma.MenuItemConnection
  }
  optionItem: {
    type: 'OptionItem'
    args: Record<QueryOptionItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: OptionItemWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OptionItem | null> | prisma.OptionItem | null
  }
  optionItems: {
    type: 'OptionItem'
    args: Record<QueryOptionItemsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: OptionItemWhereInput | null, orderBy?: prisma.OptionItemOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OptionItem[]> | prisma.OptionItem[]
  }
  optionItemsConnection: {
    type: 'OptionItemConnection'
    args: Record<QueryOptionItemsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: OptionItemWhereInput | null, orderBy?: prisma.OptionItemOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OptionItemConnection> | prisma.OptionItemConnection
  }
  option: {
    type: 'Option'
    args: Record<QueryOptionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: OptionWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Option | null> | prisma.Option | null
  }
  options: {
    type: 'Option'
    args: Record<QueryOptionsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: OptionWhereInput | null, orderBy?: prisma.OptionOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Option[]> | prisma.Option[]
  }
  optionsConnection: {
    type: 'OptionConnection'
    args: Record<QueryOptionsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: OptionWhereInput | null, orderBy?: prisma.OptionOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OptionConnection> | prisma.OptionConnection
  }
  orderItemOptionItem: {
    type: 'OrderItemOptionItem'
    args: Record<QueryOrderItemOptionItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: OrderItemOptionItemWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItemOptionItem | null> | prisma.OrderItemOptionItem | null
  }
  orderItemOptionItems: {
    type: 'OrderItemOptionItem'
    args: Record<QueryOrderItemOptionItemsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: OrderItemOptionItemWhereInput | null, orderBy?: prisma.OrderItemOptionItemOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItemOptionItem[]> | prisma.OrderItemOptionItem[]
  }
  orderItemOptionItemsConnection: {
    type: 'OrderItemOptionItemConnection'
    args: Record<QueryOrderItemOptionItemsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: OrderItemOptionItemWhereInput | null, orderBy?: prisma.OrderItemOptionItemOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItemOptionItemConnection> | prisma.OrderItemOptionItemConnection
  }
  orderItemOption: {
    type: 'OrderItemOption'
    args: Record<QueryOrderItemOptionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: OrderItemOptionWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItemOption | null> | prisma.OrderItemOption | null
  }
  orderItemOptions: {
    type: 'OrderItemOption'
    args: Record<QueryOrderItemOptionsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: OrderItemOptionWhereInput | null, orderBy?: prisma.OrderItemOptionOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItemOption[]> | prisma.OrderItemOption[]
  }
  orderItemOptionsConnection: {
    type: 'OrderItemOptionConnection'
    args: Record<QueryOrderItemOptionsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: OrderItemOptionWhereInput | null, orderBy?: prisma.OrderItemOptionOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItemOptionConnection> | prisma.OrderItemOptionConnection
  }
  orderItem: {
    type: 'OrderItem'
    args: Record<QueryOrderItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: OrderItemWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItem | null> | prisma.OrderItem | null
  }
  orderItems: {
    type: 'OrderItem'
    args: Record<QueryOrderItemsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: OrderItemWhereInput | null, orderBy?: prisma.OrderItemOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItem[]> | prisma.OrderItem[]
  }
  orderItemsConnection: {
    type: 'OrderItemConnection'
    args: Record<QueryOrderItemsConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: OrderItemWhereInput | null, orderBy?: prisma.OrderItemOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItemConnection> | prisma.OrderItemConnection
  }
  order: {
    type: 'Order'
    args: Record<QueryOrderArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Query">,
      args: { where: OrderWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Order | null> | prisma.Order | null
  }
  orders: {
    type: 'Order'
    args: Record<QueryOrdersArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: OrderWhereInput | null, orderBy?: prisma.OrderOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Order[]> | prisma.Order[]
  }
  ordersConnection: {
    type: 'OrderConnection'
    args: Record<QueryOrdersConnectionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Query">,
      args: { where?: OrderWhereInput | null, orderBy?: prisma.OrderOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderConnection> | prisma.OrderConnection
  }
}
  

// Types for Customer

type CustomerObject =
  | CustomerFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'password', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'tel', args?: [] | false, alias?: string  } 
  | { name: 'customerStripeId', args?: [] | false, alias?: string  } 
  | { name: 'orders', args?: CustomerOrdersArgs[] | false, alias?: string  } 
  | { name: 'paymentMethod', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type CustomerFields =
  | 'id'
  | 'email'
  | 'password'
  | 'name'
  | 'tel'
  | 'customerStripeId'
  | 'orders'
  | 'paymentMethod'
  | 'createdAt'
  | 'updatedAt'


type CustomerOrdersArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface CustomerFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  password: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  tel: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  customerStripeId: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  orders: {
    type: 'Order'
    args: Record<CustomerOrdersArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Customer">,
      args: { where?: OrderWhereInput | null, orderBy?: prisma.OrderOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Order[]> | prisma.Order[]
  }
  paymentMethod: {
    type: 'PaymentMethod'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Customer">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PaymentMethod | null> | prisma.PaymentMethod | null
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for Order

type OrderObject =
  | OrderFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'orderNo', args?: [] | false, alias?: string  } 
  | { name: 'paymentIntentId', args?: [] | false, alias?: string  } 
  | { name: 'status', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'dueAt', args?: [] | false, alias?: string  } 
  | { name: 'delayedBy', args?: [] | false, alias?: string  } 
  | { name: 'restaurant', args?: [] | false, alias?: string  } 
  | { name: 'customer', args?: [] | false, alias?: string  } 
  | { name: 'items', args?: OrderItemsArgs[] | false, alias?: string  } 
  | { name: 'total', args?: [] | false, alias?: string  } 
  | { name: 'priceAdjustment', args?: [] | false, alias?: string  } 
  | { name: 'cancelReason', args?: [] | false, alias?: string  } 
  | { name: 'priceAdjustmentReason', args?: [] | false, alias?: string  } 

type OrderFields =
  | 'id'
  | 'orderNo'
  | 'paymentIntentId'
  | 'status'
  | 'createdAt'
  | 'updatedAt'
  | 'dueAt'
  | 'delayedBy'
  | 'restaurant'
  | 'customer'
  | 'items'
  | 'total'
  | 'priceAdjustment'
  | 'cancelReason'
  | 'priceAdjustmentReason'


type OrderItemsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface OrderFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  orderNo: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  paymentIntentId: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  status: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  dueAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  delayedBy: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  restaurant: {
    type: 'Restaurant'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Order">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Restaurant> | prisma.Restaurant
  }
  customer: {
    type: 'Customer'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Order">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Customer> | prisma.Customer
  }
  items: {
    type: 'OrderItem'
    args: Record<OrderItemsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Order">,
      args: { where?: OrderItemWhereInput | null, orderBy?: prisma.OrderItemOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItem[]> | prisma.OrderItem[]
  }
  total: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  priceAdjustment: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  cancelReason: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  priceAdjustmentReason: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for Restaurant

type RestaurantObject =
  | RestaurantFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'password', args?: [] | false, alias?: string  } 
  | { name: 'address', args?: [] | false, alias?: string  } 
  | { name: 'tel', args?: [] | false, alias?: string  } 
  | { name: 'image', args?: [] | false, alias?: string  } 
  | { name: 'logo', args?: [] | false, alias?: string  } 
  | { name: 'description', args?: [] | false, alias?: string  } 
  | { name: 'status', args?: [] | false, alias?: string  } 
  | { name: 'tags', args?: [] | false, alias?: string  } 
  | { name: 'openingTimes', args?: RestaurantOpeningTimesArgs[] | false, alias?: string  } 
  | { name: 'averageBusyPreparationTime', args?: [] | false, alias?: string  } 
  | { name: 'averagePreparationTime', args?: [] | false, alias?: string  } 
  | { name: 'menus', args?: RestaurantMenusArgs[] | false, alias?: string  } 
  | { name: 'isConnected', args?: [] | false, alias?: string  } 
  | { name: 'stripe_user_id', args?: [] | false, alias?: string  } 
  | { name: 'stripe_publishable_key', args?: [] | false, alias?: string  } 
  | { name: 'access_token', args?: [] | false, alias?: string  } 
  | { name: 'refresh_token', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type RestaurantFields =
  | 'id'
  | 'name'
  | 'email'
  | 'password'
  | 'address'
  | 'tel'
  | 'image'
  | 'logo'
  | 'description'
  | 'status'
  | 'tags'
  | 'openingTimes'
  | 'averageBusyPreparationTime'
  | 'averagePreparationTime'
  | 'menus'
  | 'isConnected'
  | 'stripe_user_id'
  | 'stripe_publishable_key'
  | 'access_token'
  | 'refresh_token'
  | 'createdAt'
  | 'updatedAt'


type RestaurantOpeningTimesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type RestaurantMenusArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface RestaurantFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  password: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  address: {
    type: 'Address'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Restaurant">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Address> | prisma.Address
  }
  tel: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  image: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  logo: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  description: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  status: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  tags: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  openingTimes: {
    type: 'OpeningTime'
    args: Record<RestaurantOpeningTimesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Restaurant">,
      args: { where?: OpeningTimeWhereInput | null, orderBy?: prisma.OpeningTimeOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OpeningTime[]> | prisma.OpeningTime[]
  }
  averageBusyPreparationTime: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  averagePreparationTime: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  menus: {
    type: 'Menu'
    args: Record<RestaurantMenusArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Restaurant">,
      args: { where?: MenuWhereInput | null, orderBy?: prisma.MenuOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Menu[]> | prisma.Menu[]
  }
  isConnected: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  stripe_user_id: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  stripe_publishable_key: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  access_token: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  refresh_token: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Address

type AddressObject =
  | AddressFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'number', args?: [] | false, alias?: string  } 
  | { name: 'streetName', args?: [] | false, alias?: string  } 
  | { name: 'city', args?: [] | false, alias?: string  } 
  | { name: 'postalCode', args?: [] | false, alias?: string  } 
  | { name: 'restaurant', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type AddressFields =
  | 'id'
  | 'number'
  | 'streetName'
  | 'city'
  | 'postalCode'
  | 'restaurant'
  | 'createdAt'
  | 'updatedAt'



  

export interface AddressFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  number: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  streetName: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  city: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  postalCode: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  restaurant: {
    type: 'Restaurant'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Address">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Restaurant> | prisma.Restaurant
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for OpeningTime

type OpeningTimeObject =
  | OpeningTimeFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'hours', args?: [] | false, alias?: string  } 
  | { name: 'days', args?: [] | false, alias?: string  } 
  | { name: 'restaurant', args?: [] | false, alias?: string  } 

type OpeningTimeFields =
  | 'id'
  | 'hours'
  | 'days'
  | 'restaurant'



  

export interface OpeningTimeFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  hours: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  days: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  restaurant: {
    type: 'Restaurant'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"OpeningTime">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Restaurant | null> | prisma.Restaurant | null
  }
}
  

// Types for Menu

type MenuObject =
  | MenuFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'description', args?: [] | false, alias?: string  } 
  | { name: 'restaurant', args?: [] | false, alias?: string  } 
  | { name: 'serviceTimes', args?: MenuServiceTimesArgs[] | false, alias?: string  } 
  | { name: 'categories', args?: MenuCategoriesArgs[] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type MenuFields =
  | 'id'
  | 'name'
  | 'description'
  | 'restaurant'
  | 'serviceTimes'
  | 'categories'
  | 'createdAt'
  | 'updatedAt'


type MenuServiceTimesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type MenuCategoriesArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface MenuFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  description: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  restaurant: {
    type: 'Restaurant'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Menu">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Restaurant> | prisma.Restaurant
  }
  serviceTimes: {
    type: 'ServiceTime'
    args: Record<MenuServiceTimesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Menu">,
      args: { where?: ServiceTimeWhereInput | null, orderBy?: prisma.ServiceTimeOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ServiceTime[]> | prisma.ServiceTime[]
  }
  categories: {
    type: 'MenuCategory'
    args: Record<MenuCategoriesArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Menu">,
      args: { where?: MenuCategoryWhereInput | null, orderBy?: prisma.MenuCategoryOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuCategory[]> | prisma.MenuCategory[]
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for ServiceTime

type ServiceTimeObject =
  | ServiceTimeFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'hours', args?: [] | false, alias?: string  } 
  | { name: 'days', args?: [] | false, alias?: string  } 
  | { name: 'menu', args?: [] | false, alias?: string  } 

type ServiceTimeFields =
  | 'id'
  | 'hours'
  | 'days'
  | 'menu'



  

export interface ServiceTimeFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  hours: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  days: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  menu: {
    type: 'Menu'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"ServiceTime">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Menu | null> | prisma.Menu | null
  }
}
  

// Types for MenuCategory

type MenuCategoryObject =
  | MenuCategoryFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'menu', args?: [] | false, alias?: string  } 
  | { name: 'description', args?: [] | false, alias?: string  } 
  | { name: 'available', args?: [] | false, alias?: string  } 
  | { name: 'items', args?: MenuCategoryItemsArgs[] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type MenuCategoryFields =
  | 'id'
  | 'name'
  | 'menu'
  | 'description'
  | 'available'
  | 'items'
  | 'createdAt'
  | 'updatedAt'


type MenuCategoryItemsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface MenuCategoryFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  menu: {
    type: 'Menu'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"MenuCategory">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Menu> | prisma.Menu
  }
  description: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  available: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  items: {
    type: 'MenuItem'
    args: Record<MenuCategoryItemsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"MenuCategory">,
      args: { where?: MenuItemWhereInput | null, orderBy?: prisma.MenuItemOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuItem[]> | prisma.MenuItem[]
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for MenuItem

type MenuItemObject =
  | MenuItemFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'description', args?: [] | false, alias?: string  } 
  | { name: 'price', args?: [] | false, alias?: string  } 
  | { name: 'image', args?: [] | false, alias?: string  } 
  | { name: 'available', args?: [] | false, alias?: string  } 
  | { name: 'dietary', args?: [] | false, alias?: string  } 
  | { name: 'category', args?: [] | false, alias?: string  } 
  | { name: 'options', args?: MenuItemOptionsArgs[] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type MenuItemFields =
  | 'id'
  | 'name'
  | 'description'
  | 'price'
  | 'image'
  | 'available'
  | 'dietary'
  | 'category'
  | 'options'
  | 'createdAt'
  | 'updatedAt'


type MenuItemOptionsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface MenuItemFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  description: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  price: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  image: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  available: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  dietary: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  category: {
    type: 'MenuCategory'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"MenuItem">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuCategory | null> | prisma.MenuCategory | null
  }
  options: {
    type: 'Option'
    args: Record<MenuItemOptionsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"MenuItem">,
      args: { where?: OptionWhereInput | null, orderBy?: prisma.OptionOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Option[]> | prisma.Option[]
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Option

type OptionObject =
  | OptionFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'min', args?: [] | false, alias?: string  } 
  | { name: 'max', args?: [] | false, alias?: string  } 
  | { name: 'items', args?: OptionItemsArgs[] | false, alias?: string  } 
  | { name: 'menuItems', args?: OptionMenuItemsArgs[] | false, alias?: string  } 
  | { name: 'restaurant', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type OptionFields =
  | 'id'
  | 'name'
  | 'min'
  | 'max'
  | 'items'
  | 'menuItems'
  | 'restaurant'
  | 'createdAt'
  | 'updatedAt'


type OptionItemsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
type OptionMenuItemsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface OptionFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  min: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  max: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  items: {
    type: 'OptionItem'
    args: Record<OptionItemsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Option">,
      args: { where?: OptionItemWhereInput | null, orderBy?: prisma.OptionItemOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OptionItem[]> | prisma.OptionItem[]
  }
  menuItems: {
    type: 'MenuItem'
    args: Record<OptionMenuItemsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"Option">,
      args: { where?: MenuItemWhereInput | null, orderBy?: prisma.MenuItemOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuItem[]> | prisma.MenuItem[]
  }
  restaurant: {
    type: 'Restaurant'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Option">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Restaurant | null> | prisma.Restaurant | null
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for OptionItem

type OptionItemObject =
  | OptionItemFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'price', args?: [] | false, alias?: string  } 
  | { name: 'option', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type OptionItemFields =
  | 'id'
  | 'name'
  | 'price'
  | 'option'
  | 'createdAt'
  | 'updatedAt'



  

export interface OptionItemFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  price: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  option: {
    type: 'Option'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"OptionItem">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Option | null> | prisma.Option | null
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for OrderItem

type OrderItemObject =
  | OrderItemFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'price', args?: [] | false, alias?: string  } 
  | { name: 'image', args?: [] | false, alias?: string  } 
  | { name: 'quantity', args?: [] | false, alias?: string  } 
  | { name: 'options', args?: OrderItemOptionsArgs[] | false, alias?: string  } 
  | { name: 'order', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type OrderItemFields =
  | 'id'
  | 'name'
  | 'price'
  | 'image'
  | 'quantity'
  | 'options'
  | 'order'
  | 'createdAt'
  | 'updatedAt'


type OrderItemOptionsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface OrderItemFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  price: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  image: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  quantity: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  options: {
    type: 'OrderItemOption'
    args: Record<OrderItemOptionsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"OrderItem">,
      args: { where?: OrderItemOptionWhereInput | null, orderBy?: prisma.OrderItemOptionOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItemOption[]> | prisma.OrderItemOption[]
  }
  order: {
    type: 'Order'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OrderItem">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Order> | prisma.Order
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for OrderItemOption

type OrderItemOptionObject =
  | OrderItemOptionFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'items', args?: OrderItemOptionItemsArgs[] | false, alias?: string  } 
  | { name: 'orderItem', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type OrderItemOptionFields =
  | 'id'
  | 'name'
  | 'items'
  | 'orderItem'
  | 'createdAt'
  | 'updatedAt'


type OrderItemOptionItemsArgs =
  | 'where'
  | 'orderBy'
  | 'skip'
  | 'after'
  | 'before'
  | 'first'
  | 'last'
  

export interface OrderItemOptionFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  items: {
    type: 'OrderItemOptionItem'
    args: Record<OrderItemOptionItemsArgs, core.NexusArgDef<string>>
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"OrderItemOption">,
      args: { where?: OrderItemOptionItemWhereInput | null, orderBy?: prisma.OrderItemOptionItemOrderByInput | null, skip?: number | null, after?: string | null, before?: string | null, first?: number | null, last?: number | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItemOptionItem[]> | prisma.OrderItemOptionItem[]
  }
  orderItem: {
    type: 'OrderItem'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OrderItemOption">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItem> | prisma.OrderItem
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for OrderItemOptionItem

type OrderItemOptionItemObject =
  | OrderItemOptionItemFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'price', args?: [] | false, alias?: string  } 
  | { name: 'option', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type OrderItemOptionItemFields =
  | 'id'
  | 'name'
  | 'price'
  | 'option'
  | 'createdAt'
  | 'updatedAt'



  

export interface OrderItemOptionItemFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  price: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  option: {
    type: 'OrderItemOption'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"OrderItemOptionItem">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItemOption | null> | prisma.OrderItemOption | null
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for PaymentMethod

type PaymentMethodObject =
  | PaymentMethodFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'payment_method_id', args?: [] | false, alias?: string  } 
  | { name: 'brand', args?: [] | false, alias?: string  } 
  | { name: 'last4', args?: [] | false, alias?: string  } 
  | { name: 'customer', args?: [] | false, alias?: string  } 

type PaymentMethodFields =
  | 'id'
  | 'payment_method_id'
  | 'brand'
  | 'last4'
  | 'customer'



  

export interface PaymentMethodFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  payment_method_id: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  brand: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  last4: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  customer: {
    type: 'Customer'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"PaymentMethod">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Customer | null> | prisma.Customer | null
  }
}
  

// Types for CustomerConnection

type CustomerConnectionObject =
  | CustomerConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type CustomerConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface CustomerConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"CustomerConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'CustomerEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"CustomerConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CustomerEdge[]> | prisma.CustomerEdge[]
  }
  aggregate: {
    type: 'AggregateCustomer'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"CustomerConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateCustomer> | prisma.AggregateCustomer
  }
}
  

// Types for PageInfo

type PageInfoObject =
  | PageInfoFields
  | { name: 'hasNextPage', args?: [] | false, alias?: string  } 
  | { name: 'hasPreviousPage', args?: [] | false, alias?: string  } 
  | { name: 'startCursor', args?: [] | false, alias?: string  } 
  | { name: 'endCursor', args?: [] | false, alias?: string  } 

type PageInfoFields =
  | 'hasNextPage'
  | 'hasPreviousPage'
  | 'startCursor'
  | 'endCursor'



  

export interface PageInfoFieldDetails {
  hasNextPage: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  hasPreviousPage: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  startCursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  endCursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for CustomerEdge

type CustomerEdgeObject =
  | CustomerEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type CustomerEdgeFields =
  | 'node'
  | 'cursor'



  

export interface CustomerEdgeFieldDetails {
  node: {
    type: 'Customer'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"CustomerEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Customer> | prisma.Customer
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateCustomer

type AggregateCustomerObject =
  | AggregateCustomerFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateCustomerFields =
  | 'count'



  

export interface AggregateCustomerFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for PaymentMethodConnection

type PaymentMethodConnectionObject =
  | PaymentMethodConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type PaymentMethodConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface PaymentMethodConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PaymentMethodConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'PaymentMethodEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"PaymentMethodConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PaymentMethodEdge[]> | prisma.PaymentMethodEdge[]
  }
  aggregate: {
    type: 'AggregatePaymentMethod'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PaymentMethodConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregatePaymentMethod> | prisma.AggregatePaymentMethod
  }
}
  

// Types for PaymentMethodEdge

type PaymentMethodEdgeObject =
  | PaymentMethodEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type PaymentMethodEdgeFields =
  | 'node'
  | 'cursor'



  

export interface PaymentMethodEdgeFieldDetails {
  node: {
    type: 'PaymentMethod'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PaymentMethodEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PaymentMethod> | prisma.PaymentMethod
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregatePaymentMethod

type AggregatePaymentMethodObject =
  | AggregatePaymentMethodFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregatePaymentMethodFields =
  | 'count'



  

export interface AggregatePaymentMethodFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AddressConnection

type AddressConnectionObject =
  | AddressConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type AddressConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface AddressConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"AddressConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'AddressEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"AddressConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AddressEdge[]> | prisma.AddressEdge[]
  }
  aggregate: {
    type: 'AggregateAddress'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"AddressConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateAddress> | prisma.AggregateAddress
  }
}
  

// Types for AddressEdge

type AddressEdgeObject =
  | AddressEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type AddressEdgeFields =
  | 'node'
  | 'cursor'



  

export interface AddressEdgeFieldDetails {
  node: {
    type: 'Address'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"AddressEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Address> | prisma.Address
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateAddress

type AggregateAddressObject =
  | AggregateAddressFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateAddressFields =
  | 'count'



  

export interface AggregateAddressFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for RestaurantConnection

type RestaurantConnectionObject =
  | RestaurantConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type RestaurantConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface RestaurantConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"RestaurantConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'RestaurantEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"RestaurantConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.RestaurantEdge[]> | prisma.RestaurantEdge[]
  }
  aggregate: {
    type: 'AggregateRestaurant'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"RestaurantConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateRestaurant> | prisma.AggregateRestaurant
  }
}
  

// Types for RestaurantEdge

type RestaurantEdgeObject =
  | RestaurantEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type RestaurantEdgeFields =
  | 'node'
  | 'cursor'



  

export interface RestaurantEdgeFieldDetails {
  node: {
    type: 'Restaurant'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"RestaurantEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Restaurant> | prisma.Restaurant
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateRestaurant

type AggregateRestaurantObject =
  | AggregateRestaurantFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateRestaurantFields =
  | 'count'



  

export interface AggregateRestaurantFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for OpeningTimeConnection

type OpeningTimeConnectionObject =
  | OpeningTimeConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type OpeningTimeConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface OpeningTimeConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OpeningTimeConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'OpeningTimeEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"OpeningTimeConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OpeningTimeEdge[]> | prisma.OpeningTimeEdge[]
  }
  aggregate: {
    type: 'AggregateOpeningTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OpeningTimeConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateOpeningTime> | prisma.AggregateOpeningTime
  }
}
  

// Types for OpeningTimeEdge

type OpeningTimeEdgeObject =
  | OpeningTimeEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type OpeningTimeEdgeFields =
  | 'node'
  | 'cursor'



  

export interface OpeningTimeEdgeFieldDetails {
  node: {
    type: 'OpeningTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OpeningTimeEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OpeningTime> | prisma.OpeningTime
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateOpeningTime

type AggregateOpeningTimeObject =
  | AggregateOpeningTimeFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateOpeningTimeFields =
  | 'count'



  

export interface AggregateOpeningTimeFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for ServiceTimeConnection

type ServiceTimeConnectionObject =
  | ServiceTimeConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type ServiceTimeConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface ServiceTimeConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ServiceTimeConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'ServiceTimeEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"ServiceTimeConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ServiceTimeEdge[]> | prisma.ServiceTimeEdge[]
  }
  aggregate: {
    type: 'AggregateServiceTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ServiceTimeConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateServiceTime> | prisma.AggregateServiceTime
  }
}
  

// Types for ServiceTimeEdge

type ServiceTimeEdgeObject =
  | ServiceTimeEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type ServiceTimeEdgeFields =
  | 'node'
  | 'cursor'



  

export interface ServiceTimeEdgeFieldDetails {
  node: {
    type: 'ServiceTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ServiceTimeEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ServiceTime> | prisma.ServiceTime
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateServiceTime

type AggregateServiceTimeObject =
  | AggregateServiceTimeFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateServiceTimeFields =
  | 'count'



  

export interface AggregateServiceTimeFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for MenuConnection

type MenuConnectionObject =
  | MenuConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type MenuConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface MenuConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"MenuConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'MenuEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"MenuConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuEdge[]> | prisma.MenuEdge[]
  }
  aggregate: {
    type: 'AggregateMenu'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"MenuConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateMenu> | prisma.AggregateMenu
  }
}
  

// Types for MenuEdge

type MenuEdgeObject =
  | MenuEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type MenuEdgeFields =
  | 'node'
  | 'cursor'



  

export interface MenuEdgeFieldDetails {
  node: {
    type: 'Menu'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"MenuEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Menu> | prisma.Menu
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateMenu

type AggregateMenuObject =
  | AggregateMenuFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateMenuFields =
  | 'count'



  

export interface AggregateMenuFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for MenuCategoryConnection

type MenuCategoryConnectionObject =
  | MenuCategoryConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type MenuCategoryConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface MenuCategoryConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"MenuCategoryConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'MenuCategoryEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"MenuCategoryConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuCategoryEdge[]> | prisma.MenuCategoryEdge[]
  }
  aggregate: {
    type: 'AggregateMenuCategory'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"MenuCategoryConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateMenuCategory> | prisma.AggregateMenuCategory
  }
}
  

// Types for MenuCategoryEdge

type MenuCategoryEdgeObject =
  | MenuCategoryEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type MenuCategoryEdgeFields =
  | 'node'
  | 'cursor'



  

export interface MenuCategoryEdgeFieldDetails {
  node: {
    type: 'MenuCategory'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"MenuCategoryEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuCategory> | prisma.MenuCategory
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateMenuCategory

type AggregateMenuCategoryObject =
  | AggregateMenuCategoryFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateMenuCategoryFields =
  | 'count'



  

export interface AggregateMenuCategoryFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for MenuItemConnection

type MenuItemConnectionObject =
  | MenuItemConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type MenuItemConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface MenuItemConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"MenuItemConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'MenuItemEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"MenuItemConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuItemEdge[]> | prisma.MenuItemEdge[]
  }
  aggregate: {
    type: 'AggregateMenuItem'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"MenuItemConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateMenuItem> | prisma.AggregateMenuItem
  }
}
  

// Types for MenuItemEdge

type MenuItemEdgeObject =
  | MenuItemEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type MenuItemEdgeFields =
  | 'node'
  | 'cursor'



  

export interface MenuItemEdgeFieldDetails {
  node: {
    type: 'MenuItem'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"MenuItemEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuItem> | prisma.MenuItem
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateMenuItem

type AggregateMenuItemObject =
  | AggregateMenuItemFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateMenuItemFields =
  | 'count'



  

export interface AggregateMenuItemFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for OptionItemConnection

type OptionItemConnectionObject =
  | OptionItemConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type OptionItemConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface OptionItemConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OptionItemConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'OptionItemEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"OptionItemConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OptionItemEdge[]> | prisma.OptionItemEdge[]
  }
  aggregate: {
    type: 'AggregateOptionItem'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OptionItemConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateOptionItem> | prisma.AggregateOptionItem
  }
}
  

// Types for OptionItemEdge

type OptionItemEdgeObject =
  | OptionItemEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type OptionItemEdgeFields =
  | 'node'
  | 'cursor'



  

export interface OptionItemEdgeFieldDetails {
  node: {
    type: 'OptionItem'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OptionItemEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OptionItem> | prisma.OptionItem
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateOptionItem

type AggregateOptionItemObject =
  | AggregateOptionItemFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateOptionItemFields =
  | 'count'



  

export interface AggregateOptionItemFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for OptionConnection

type OptionConnectionObject =
  | OptionConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type OptionConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface OptionConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OptionConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'OptionEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"OptionConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OptionEdge[]> | prisma.OptionEdge[]
  }
  aggregate: {
    type: 'AggregateOption'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OptionConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateOption> | prisma.AggregateOption
  }
}
  

// Types for OptionEdge

type OptionEdgeObject =
  | OptionEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type OptionEdgeFields =
  | 'node'
  | 'cursor'



  

export interface OptionEdgeFieldDetails {
  node: {
    type: 'Option'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OptionEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Option> | prisma.Option
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateOption

type AggregateOptionObject =
  | AggregateOptionFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateOptionFields =
  | 'count'



  

export interface AggregateOptionFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for OrderItemOptionItemConnection

type OrderItemOptionItemConnectionObject =
  | OrderItemOptionItemConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type OrderItemOptionItemConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface OrderItemOptionItemConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OrderItemOptionItemConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'OrderItemOptionItemEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"OrderItemOptionItemConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItemOptionItemEdge[]> | prisma.OrderItemOptionItemEdge[]
  }
  aggregate: {
    type: 'AggregateOrderItemOptionItem'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OrderItemOptionItemConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateOrderItemOptionItem> | prisma.AggregateOrderItemOptionItem
  }
}
  

// Types for OrderItemOptionItemEdge

type OrderItemOptionItemEdgeObject =
  | OrderItemOptionItemEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type OrderItemOptionItemEdgeFields =
  | 'node'
  | 'cursor'



  

export interface OrderItemOptionItemEdgeFieldDetails {
  node: {
    type: 'OrderItemOptionItem'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OrderItemOptionItemEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItemOptionItem> | prisma.OrderItemOptionItem
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateOrderItemOptionItem

type AggregateOrderItemOptionItemObject =
  | AggregateOrderItemOptionItemFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateOrderItemOptionItemFields =
  | 'count'



  

export interface AggregateOrderItemOptionItemFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for OrderItemOptionConnection

type OrderItemOptionConnectionObject =
  | OrderItemOptionConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type OrderItemOptionConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface OrderItemOptionConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OrderItemOptionConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'OrderItemOptionEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"OrderItemOptionConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItemOptionEdge[]> | prisma.OrderItemOptionEdge[]
  }
  aggregate: {
    type: 'AggregateOrderItemOption'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OrderItemOptionConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateOrderItemOption> | prisma.AggregateOrderItemOption
  }
}
  

// Types for OrderItemOptionEdge

type OrderItemOptionEdgeObject =
  | OrderItemOptionEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type OrderItemOptionEdgeFields =
  | 'node'
  | 'cursor'



  

export interface OrderItemOptionEdgeFieldDetails {
  node: {
    type: 'OrderItemOption'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OrderItemOptionEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItemOption> | prisma.OrderItemOption
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateOrderItemOption

type AggregateOrderItemOptionObject =
  | AggregateOrderItemOptionFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateOrderItemOptionFields =
  | 'count'



  

export interface AggregateOrderItemOptionFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for OrderItemConnection

type OrderItemConnectionObject =
  | OrderItemConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type OrderItemConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface OrderItemConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OrderItemConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'OrderItemEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"OrderItemConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItemEdge[]> | prisma.OrderItemEdge[]
  }
  aggregate: {
    type: 'AggregateOrderItem'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OrderItemConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateOrderItem> | prisma.AggregateOrderItem
  }
}
  

// Types for OrderItemEdge

type OrderItemEdgeObject =
  | OrderItemEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type OrderItemEdgeFields =
  | 'node'
  | 'cursor'



  

export interface OrderItemEdgeFieldDetails {
  node: {
    type: 'OrderItem'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OrderItemEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItem> | prisma.OrderItem
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateOrderItem

type AggregateOrderItemObject =
  | AggregateOrderItemFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateOrderItemFields =
  | 'count'



  

export interface AggregateOrderItemFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for OrderConnection

type OrderConnectionObject =
  | OrderConnectionFields
  | { name: 'pageInfo', args?: [] | false, alias?: string  } 
  | { name: 'edges', args?: [] | false, alias?: string  } 
  | { name: 'aggregate', args?: [] | false, alias?: string  } 

type OrderConnectionFields =
  | 'pageInfo'
  | 'edges'
  | 'aggregate'



  

export interface OrderConnectionFieldDetails {
  pageInfo: {
    type: 'PageInfo'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OrderConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PageInfo> | prisma.PageInfo
  }
  edges: {
    type: 'OrderEdge'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: (
      root: core.RootValue<"OrderConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderEdge[]> | prisma.OrderEdge[]
  }
  aggregate: {
    type: 'AggregateOrder'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OrderConnection">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AggregateOrder> | prisma.AggregateOrder
  }
}
  

// Types for OrderEdge

type OrderEdgeObject =
  | OrderEdgeFields
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'cursor', args?: [] | false, alias?: string  } 

type OrderEdgeFields =
  | 'node'
  | 'cursor'



  

export interface OrderEdgeFieldDetails {
  node: {
    type: 'Order'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OrderEdge">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Order> | prisma.Order
  }
  cursor: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AggregateOrder

type AggregateOrderObject =
  | AggregateOrderFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type AggregateOrderFields =
  | 'count'



  

export interface AggregateOrderFieldDetails {
  count: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Mutation

type MutationObject =
  | MutationFields
  | { name: 'createCustomer', args?: MutationCreateCustomerArgs[] | false, alias?: string  } 
  | { name: 'updateCustomer', args?: MutationUpdateCustomerArgs[] | false, alias?: string  } 
  | { name: 'updateManyCustomers', args?: MutationUpdateManyCustomersArgs[] | false, alias?: string  } 
  | { name: 'upsertCustomer', args?: MutationUpsertCustomerArgs[] | false, alias?: string  } 
  | { name: 'deleteCustomer', args?: MutationDeleteCustomerArgs[] | false, alias?: string  } 
  | { name: 'deleteManyCustomers', args?: MutationDeleteManyCustomersArgs[] | false, alias?: string  } 
  | { name: 'createPaymentMethod', args?: MutationCreatePaymentMethodArgs[] | false, alias?: string  } 
  | { name: 'updatePaymentMethod', args?: MutationUpdatePaymentMethodArgs[] | false, alias?: string  } 
  | { name: 'updateManyPaymentMethods', args?: MutationUpdateManyPaymentMethodsArgs[] | false, alias?: string  } 
  | { name: 'upsertPaymentMethod', args?: MutationUpsertPaymentMethodArgs[] | false, alias?: string  } 
  | { name: 'deletePaymentMethod', args?: MutationDeletePaymentMethodArgs[] | false, alias?: string  } 
  | { name: 'deleteManyPaymentMethods', args?: MutationDeleteManyPaymentMethodsArgs[] | false, alias?: string  } 
  | { name: 'createAddress', args?: MutationCreateAddressArgs[] | false, alias?: string  } 
  | { name: 'updateAddress', args?: MutationUpdateAddressArgs[] | false, alias?: string  } 
  | { name: 'updateManyAddresses', args?: MutationUpdateManyAddressesArgs[] | false, alias?: string  } 
  | { name: 'upsertAddress', args?: MutationUpsertAddressArgs[] | false, alias?: string  } 
  | { name: 'deleteAddress', args?: MutationDeleteAddressArgs[] | false, alias?: string  } 
  | { name: 'deleteManyAddresses', args?: MutationDeleteManyAddressesArgs[] | false, alias?: string  } 
  | { name: 'createRestaurant', args?: MutationCreateRestaurantArgs[] | false, alias?: string  } 
  | { name: 'updateRestaurant', args?: MutationUpdateRestaurantArgs[] | false, alias?: string  } 
  | { name: 'updateManyRestaurants', args?: MutationUpdateManyRestaurantsArgs[] | false, alias?: string  } 
  | { name: 'upsertRestaurant', args?: MutationUpsertRestaurantArgs[] | false, alias?: string  } 
  | { name: 'deleteRestaurant', args?: MutationDeleteRestaurantArgs[] | false, alias?: string  } 
  | { name: 'deleteManyRestaurants', args?: MutationDeleteManyRestaurantsArgs[] | false, alias?: string  } 
  | { name: 'createOpeningTime', args?: MutationCreateOpeningTimeArgs[] | false, alias?: string  } 
  | { name: 'updateOpeningTime', args?: MutationUpdateOpeningTimeArgs[] | false, alias?: string  } 
  | { name: 'updateManyOpeningTimes', args?: MutationUpdateManyOpeningTimesArgs[] | false, alias?: string  } 
  | { name: 'upsertOpeningTime', args?: MutationUpsertOpeningTimeArgs[] | false, alias?: string  } 
  | { name: 'deleteOpeningTime', args?: MutationDeleteOpeningTimeArgs[] | false, alias?: string  } 
  | { name: 'deleteManyOpeningTimes', args?: MutationDeleteManyOpeningTimesArgs[] | false, alias?: string  } 
  | { name: 'createServiceTime', args?: MutationCreateServiceTimeArgs[] | false, alias?: string  } 
  | { name: 'updateServiceTime', args?: MutationUpdateServiceTimeArgs[] | false, alias?: string  } 
  | { name: 'updateManyServiceTimes', args?: MutationUpdateManyServiceTimesArgs[] | false, alias?: string  } 
  | { name: 'upsertServiceTime', args?: MutationUpsertServiceTimeArgs[] | false, alias?: string  } 
  | { name: 'deleteServiceTime', args?: MutationDeleteServiceTimeArgs[] | false, alias?: string  } 
  | { name: 'deleteManyServiceTimes', args?: MutationDeleteManyServiceTimesArgs[] | false, alias?: string  } 
  | { name: 'createMenu', args?: MutationCreateMenuArgs[] | false, alias?: string  } 
  | { name: 'updateMenu', args?: MutationUpdateMenuArgs[] | false, alias?: string  } 
  | { name: 'updateManyMenus', args?: MutationUpdateManyMenusArgs[] | false, alias?: string  } 
  | { name: 'upsertMenu', args?: MutationUpsertMenuArgs[] | false, alias?: string  } 
  | { name: 'deleteMenu', args?: MutationDeleteMenuArgs[] | false, alias?: string  } 
  | { name: 'deleteManyMenus', args?: MutationDeleteManyMenusArgs[] | false, alias?: string  } 
  | { name: 'createMenuCategory', args?: MutationCreateMenuCategoryArgs[] | false, alias?: string  } 
  | { name: 'updateMenuCategory', args?: MutationUpdateMenuCategoryArgs[] | false, alias?: string  } 
  | { name: 'updateManyMenuCategories', args?: MutationUpdateManyMenuCategoriesArgs[] | false, alias?: string  } 
  | { name: 'upsertMenuCategory', args?: MutationUpsertMenuCategoryArgs[] | false, alias?: string  } 
  | { name: 'deleteMenuCategory', args?: MutationDeleteMenuCategoryArgs[] | false, alias?: string  } 
  | { name: 'deleteManyMenuCategories', args?: MutationDeleteManyMenuCategoriesArgs[] | false, alias?: string  } 
  | { name: 'createMenuItem', args?: MutationCreateMenuItemArgs[] | false, alias?: string  } 
  | { name: 'updateMenuItem', args?: MutationUpdateMenuItemArgs[] | false, alias?: string  } 
  | { name: 'updateManyMenuItems', args?: MutationUpdateManyMenuItemsArgs[] | false, alias?: string  } 
  | { name: 'upsertMenuItem', args?: MutationUpsertMenuItemArgs[] | false, alias?: string  } 
  | { name: 'deleteMenuItem', args?: MutationDeleteMenuItemArgs[] | false, alias?: string  } 
  | { name: 'deleteManyMenuItems', args?: MutationDeleteManyMenuItemsArgs[] | false, alias?: string  } 
  | { name: 'createOptionItem', args?: MutationCreateOptionItemArgs[] | false, alias?: string  } 
  | { name: 'updateOptionItem', args?: MutationUpdateOptionItemArgs[] | false, alias?: string  } 
  | { name: 'updateManyOptionItems', args?: MutationUpdateManyOptionItemsArgs[] | false, alias?: string  } 
  | { name: 'upsertOptionItem', args?: MutationUpsertOptionItemArgs[] | false, alias?: string  } 
  | { name: 'deleteOptionItem', args?: MutationDeleteOptionItemArgs[] | false, alias?: string  } 
  | { name: 'deleteManyOptionItems', args?: MutationDeleteManyOptionItemsArgs[] | false, alias?: string  } 
  | { name: 'createOption', args?: MutationCreateOptionArgs[] | false, alias?: string  } 
  | { name: 'updateOption', args?: MutationUpdateOptionArgs[] | false, alias?: string  } 
  | { name: 'updateManyOptions', args?: MutationUpdateManyOptionsArgs[] | false, alias?: string  } 
  | { name: 'upsertOption', args?: MutationUpsertOptionArgs[] | false, alias?: string  } 
  | { name: 'deleteOption', args?: MutationDeleteOptionArgs[] | false, alias?: string  } 
  | { name: 'deleteManyOptions', args?: MutationDeleteManyOptionsArgs[] | false, alias?: string  } 
  | { name: 'createOrderItemOptionItem', args?: MutationCreateOrderItemOptionItemArgs[] | false, alias?: string  } 
  | { name: 'updateOrderItemOptionItem', args?: MutationUpdateOrderItemOptionItemArgs[] | false, alias?: string  } 
  | { name: 'updateManyOrderItemOptionItems', args?: MutationUpdateManyOrderItemOptionItemsArgs[] | false, alias?: string  } 
  | { name: 'upsertOrderItemOptionItem', args?: MutationUpsertOrderItemOptionItemArgs[] | false, alias?: string  } 
  | { name: 'deleteOrderItemOptionItem', args?: MutationDeleteOrderItemOptionItemArgs[] | false, alias?: string  } 
  | { name: 'deleteManyOrderItemOptionItems', args?: MutationDeleteManyOrderItemOptionItemsArgs[] | false, alias?: string  } 
  | { name: 'createOrderItemOption', args?: MutationCreateOrderItemOptionArgs[] | false, alias?: string  } 
  | { name: 'updateOrderItemOption', args?: MutationUpdateOrderItemOptionArgs[] | false, alias?: string  } 
  | { name: 'updateManyOrderItemOptions', args?: MutationUpdateManyOrderItemOptionsArgs[] | false, alias?: string  } 
  | { name: 'upsertOrderItemOption', args?: MutationUpsertOrderItemOptionArgs[] | false, alias?: string  } 
  | { name: 'deleteOrderItemOption', args?: MutationDeleteOrderItemOptionArgs[] | false, alias?: string  } 
  | { name: 'deleteManyOrderItemOptions', args?: MutationDeleteManyOrderItemOptionsArgs[] | false, alias?: string  } 
  | { name: 'createOrderItem', args?: MutationCreateOrderItemArgs[] | false, alias?: string  } 
  | { name: 'updateOrderItem', args?: MutationUpdateOrderItemArgs[] | false, alias?: string  } 
  | { name: 'updateManyOrderItems', args?: MutationUpdateManyOrderItemsArgs[] | false, alias?: string  } 
  | { name: 'upsertOrderItem', args?: MutationUpsertOrderItemArgs[] | false, alias?: string  } 
  | { name: 'deleteOrderItem', args?: MutationDeleteOrderItemArgs[] | false, alias?: string  } 
  | { name: 'deleteManyOrderItems', args?: MutationDeleteManyOrderItemsArgs[] | false, alias?: string  } 
  | { name: 'createOrder', args?: MutationCreateOrderArgs[] | false, alias?: string  } 
  | { name: 'updateOrder', args?: MutationUpdateOrderArgs[] | false, alias?: string  } 
  | { name: 'updateManyOrders', args?: MutationUpdateManyOrdersArgs[] | false, alias?: string  } 
  | { name: 'upsertOrder', args?: MutationUpsertOrderArgs[] | false, alias?: string  } 
  | { name: 'deleteOrder', args?: MutationDeleteOrderArgs[] | false, alias?: string  } 
  | { name: 'deleteManyOrders', args?: MutationDeleteManyOrdersArgs[] | false, alias?: string  } 

type MutationFields =
  | 'createCustomer'
  | 'updateCustomer'
  | 'updateManyCustomers'
  | 'upsertCustomer'
  | 'deleteCustomer'
  | 'deleteManyCustomers'
  | 'createPaymentMethod'
  | 'updatePaymentMethod'
  | 'updateManyPaymentMethods'
  | 'upsertPaymentMethod'
  | 'deletePaymentMethod'
  | 'deleteManyPaymentMethods'
  | 'createAddress'
  | 'updateAddress'
  | 'updateManyAddresses'
  | 'upsertAddress'
  | 'deleteAddress'
  | 'deleteManyAddresses'
  | 'createRestaurant'
  | 'updateRestaurant'
  | 'updateManyRestaurants'
  | 'upsertRestaurant'
  | 'deleteRestaurant'
  | 'deleteManyRestaurants'
  | 'createOpeningTime'
  | 'updateOpeningTime'
  | 'updateManyOpeningTimes'
  | 'upsertOpeningTime'
  | 'deleteOpeningTime'
  | 'deleteManyOpeningTimes'
  | 'createServiceTime'
  | 'updateServiceTime'
  | 'updateManyServiceTimes'
  | 'upsertServiceTime'
  | 'deleteServiceTime'
  | 'deleteManyServiceTimes'
  | 'createMenu'
  | 'updateMenu'
  | 'updateManyMenus'
  | 'upsertMenu'
  | 'deleteMenu'
  | 'deleteManyMenus'
  | 'createMenuCategory'
  | 'updateMenuCategory'
  | 'updateManyMenuCategories'
  | 'upsertMenuCategory'
  | 'deleteMenuCategory'
  | 'deleteManyMenuCategories'
  | 'createMenuItem'
  | 'updateMenuItem'
  | 'updateManyMenuItems'
  | 'upsertMenuItem'
  | 'deleteMenuItem'
  | 'deleteManyMenuItems'
  | 'createOptionItem'
  | 'updateOptionItem'
  | 'updateManyOptionItems'
  | 'upsertOptionItem'
  | 'deleteOptionItem'
  | 'deleteManyOptionItems'
  | 'createOption'
  | 'updateOption'
  | 'updateManyOptions'
  | 'upsertOption'
  | 'deleteOption'
  | 'deleteManyOptions'
  | 'createOrderItemOptionItem'
  | 'updateOrderItemOptionItem'
  | 'updateManyOrderItemOptionItems'
  | 'upsertOrderItemOptionItem'
  | 'deleteOrderItemOptionItem'
  | 'deleteManyOrderItemOptionItems'
  | 'createOrderItemOption'
  | 'updateOrderItemOption'
  | 'updateManyOrderItemOptions'
  | 'upsertOrderItemOption'
  | 'deleteOrderItemOption'
  | 'deleteManyOrderItemOptions'
  | 'createOrderItem'
  | 'updateOrderItem'
  | 'updateManyOrderItems'
  | 'upsertOrderItem'
  | 'deleteOrderItem'
  | 'deleteManyOrderItems'
  | 'createOrder'
  | 'updateOrder'
  | 'updateManyOrders'
  | 'upsertOrder'
  | 'deleteOrder'
  | 'deleteManyOrders'


type MutationCreateCustomerArgs =
  | 'data'
type MutationUpdateCustomerArgs =
  | 'data'
  | 'where'
type MutationUpdateManyCustomersArgs =
  | 'data'
  | 'where'
type MutationUpsertCustomerArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteCustomerArgs =
  | 'where'
type MutationDeleteManyCustomersArgs =
  | 'where'
type MutationCreatePaymentMethodArgs =
  | 'data'
type MutationUpdatePaymentMethodArgs =
  | 'data'
  | 'where'
type MutationUpdateManyPaymentMethodsArgs =
  | 'data'
  | 'where'
type MutationUpsertPaymentMethodArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeletePaymentMethodArgs =
  | 'where'
type MutationDeleteManyPaymentMethodsArgs =
  | 'where'
type MutationCreateAddressArgs =
  | 'data'
type MutationUpdateAddressArgs =
  | 'data'
  | 'where'
type MutationUpdateManyAddressesArgs =
  | 'data'
  | 'where'
type MutationUpsertAddressArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteAddressArgs =
  | 'where'
type MutationDeleteManyAddressesArgs =
  | 'where'
type MutationCreateRestaurantArgs =
  | 'data'
type MutationUpdateRestaurantArgs =
  | 'data'
  | 'where'
type MutationUpdateManyRestaurantsArgs =
  | 'data'
  | 'where'
type MutationUpsertRestaurantArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteRestaurantArgs =
  | 'where'
type MutationDeleteManyRestaurantsArgs =
  | 'where'
type MutationCreateOpeningTimeArgs =
  | 'data'
type MutationUpdateOpeningTimeArgs =
  | 'data'
  | 'where'
type MutationUpdateManyOpeningTimesArgs =
  | 'data'
  | 'where'
type MutationUpsertOpeningTimeArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteOpeningTimeArgs =
  | 'where'
type MutationDeleteManyOpeningTimesArgs =
  | 'where'
type MutationCreateServiceTimeArgs =
  | 'data'
type MutationUpdateServiceTimeArgs =
  | 'data'
  | 'where'
type MutationUpdateManyServiceTimesArgs =
  | 'data'
  | 'where'
type MutationUpsertServiceTimeArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteServiceTimeArgs =
  | 'where'
type MutationDeleteManyServiceTimesArgs =
  | 'where'
type MutationCreateMenuArgs =
  | 'data'
type MutationUpdateMenuArgs =
  | 'data'
  | 'where'
type MutationUpdateManyMenusArgs =
  | 'data'
  | 'where'
type MutationUpsertMenuArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteMenuArgs =
  | 'where'
type MutationDeleteManyMenusArgs =
  | 'where'
type MutationCreateMenuCategoryArgs =
  | 'data'
type MutationUpdateMenuCategoryArgs =
  | 'data'
  | 'where'
type MutationUpdateManyMenuCategoriesArgs =
  | 'data'
  | 'where'
type MutationUpsertMenuCategoryArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteMenuCategoryArgs =
  | 'where'
type MutationDeleteManyMenuCategoriesArgs =
  | 'where'
type MutationCreateMenuItemArgs =
  | 'data'
type MutationUpdateMenuItemArgs =
  | 'data'
  | 'where'
type MutationUpdateManyMenuItemsArgs =
  | 'data'
  | 'where'
type MutationUpsertMenuItemArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteMenuItemArgs =
  | 'where'
type MutationDeleteManyMenuItemsArgs =
  | 'where'
type MutationCreateOptionItemArgs =
  | 'data'
type MutationUpdateOptionItemArgs =
  | 'data'
  | 'where'
type MutationUpdateManyOptionItemsArgs =
  | 'data'
  | 'where'
type MutationUpsertOptionItemArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteOptionItemArgs =
  | 'where'
type MutationDeleteManyOptionItemsArgs =
  | 'where'
type MutationCreateOptionArgs =
  | 'data'
type MutationUpdateOptionArgs =
  | 'data'
  | 'where'
type MutationUpdateManyOptionsArgs =
  | 'data'
  | 'where'
type MutationUpsertOptionArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteOptionArgs =
  | 'where'
type MutationDeleteManyOptionsArgs =
  | 'where'
type MutationCreateOrderItemOptionItemArgs =
  | 'data'
type MutationUpdateOrderItemOptionItemArgs =
  | 'data'
  | 'where'
type MutationUpdateManyOrderItemOptionItemsArgs =
  | 'data'
  | 'where'
type MutationUpsertOrderItemOptionItemArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteOrderItemOptionItemArgs =
  | 'where'
type MutationDeleteManyOrderItemOptionItemsArgs =
  | 'where'
type MutationCreateOrderItemOptionArgs =
  | 'data'
type MutationUpdateOrderItemOptionArgs =
  | 'data'
  | 'where'
type MutationUpdateManyOrderItemOptionsArgs =
  | 'data'
  | 'where'
type MutationUpsertOrderItemOptionArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteOrderItemOptionArgs =
  | 'where'
type MutationDeleteManyOrderItemOptionsArgs =
  | 'where'
type MutationCreateOrderItemArgs =
  | 'data'
type MutationUpdateOrderItemArgs =
  | 'data'
  | 'where'
type MutationUpdateManyOrderItemsArgs =
  | 'data'
  | 'where'
type MutationUpsertOrderItemArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteOrderItemArgs =
  | 'where'
type MutationDeleteManyOrderItemsArgs =
  | 'where'
type MutationCreateOrderArgs =
  | 'data'
type MutationUpdateOrderArgs =
  | 'data'
  | 'where'
type MutationUpdateManyOrdersArgs =
  | 'data'
  | 'where'
type MutationUpsertOrderArgs =
  | 'where'
  | 'create'
  | 'update'
type MutationDeleteOrderArgs =
  | 'where'
type MutationDeleteManyOrdersArgs =
  | 'where'
  

export interface MutationFieldDetails {
  createCustomer: {
    type: 'Customer'
    args: Record<MutationCreateCustomerArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: CustomerCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Customer> | prisma.Customer
  }
  updateCustomer: {
    type: 'Customer'
    args: Record<MutationUpdateCustomerArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: CustomerUpdateInput, where: CustomerWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Customer | null> | prisma.Customer | null
  }
  updateManyCustomers: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyCustomersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: CustomerUpdateManyMutationInput, where?: CustomerWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertCustomer: {
    type: 'Customer'
    args: Record<MutationUpsertCustomerArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: CustomerWhereUniqueInput, create: CustomerCreateInput, update: CustomerUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Customer> | prisma.Customer
  }
  deleteCustomer: {
    type: 'Customer'
    args: Record<MutationDeleteCustomerArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: CustomerWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Customer | null> | prisma.Customer | null
  }
  deleteManyCustomers: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyCustomersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: CustomerWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createPaymentMethod: {
    type: 'PaymentMethod'
    args: Record<MutationCreatePaymentMethodArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: PaymentMethodCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PaymentMethod> | prisma.PaymentMethod
  }
  updatePaymentMethod: {
    type: 'PaymentMethod'
    args: Record<MutationUpdatePaymentMethodArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: PaymentMethodUpdateInput, where: PaymentMethodWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PaymentMethod | null> | prisma.PaymentMethod | null
  }
  updateManyPaymentMethods: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyPaymentMethodsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: PaymentMethodUpdateManyMutationInput, where?: PaymentMethodWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertPaymentMethod: {
    type: 'PaymentMethod'
    args: Record<MutationUpsertPaymentMethodArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: PaymentMethodWhereUniqueInput, create: PaymentMethodCreateInput, update: PaymentMethodUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PaymentMethod> | prisma.PaymentMethod
  }
  deletePaymentMethod: {
    type: 'PaymentMethod'
    args: Record<MutationDeletePaymentMethodArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: PaymentMethodWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PaymentMethod | null> | prisma.PaymentMethod | null
  }
  deleteManyPaymentMethods: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyPaymentMethodsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: PaymentMethodWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createAddress: {
    type: 'Address'
    args: Record<MutationCreateAddressArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: AddressCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Address> | prisma.Address
  }
  updateAddress: {
    type: 'Address'
    args: Record<MutationUpdateAddressArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: AddressUpdateInput, where: AddressWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Address | null> | prisma.Address | null
  }
  updateManyAddresses: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyAddressesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: AddressUpdateManyMutationInput, where?: AddressWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertAddress: {
    type: 'Address'
    args: Record<MutationUpsertAddressArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: AddressWhereUniqueInput, create: AddressCreateInput, update: AddressUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Address> | prisma.Address
  }
  deleteAddress: {
    type: 'Address'
    args: Record<MutationDeleteAddressArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: AddressWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Address | null> | prisma.Address | null
  }
  deleteManyAddresses: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyAddressesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: AddressWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createRestaurant: {
    type: 'Restaurant'
    args: Record<MutationCreateRestaurantArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: RestaurantCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Restaurant> | prisma.Restaurant
  }
  updateRestaurant: {
    type: 'Restaurant'
    args: Record<MutationUpdateRestaurantArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: RestaurantUpdateInput, where: RestaurantWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Restaurant | null> | prisma.Restaurant | null
  }
  updateManyRestaurants: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyRestaurantsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: RestaurantUpdateManyMutationInput, where?: RestaurantWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertRestaurant: {
    type: 'Restaurant'
    args: Record<MutationUpsertRestaurantArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: RestaurantWhereUniqueInput, create: RestaurantCreateInput, update: RestaurantUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Restaurant> | prisma.Restaurant
  }
  deleteRestaurant: {
    type: 'Restaurant'
    args: Record<MutationDeleteRestaurantArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: RestaurantWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Restaurant | null> | prisma.Restaurant | null
  }
  deleteManyRestaurants: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyRestaurantsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: RestaurantWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createOpeningTime: {
    type: 'OpeningTime'
    args: Record<MutationCreateOpeningTimeArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OpeningTimeCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OpeningTime> | prisma.OpeningTime
  }
  updateOpeningTime: {
    type: 'OpeningTime'
    args: Record<MutationUpdateOpeningTimeArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OpeningTimeUpdateInput, where: OpeningTimeWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OpeningTime | null> | prisma.OpeningTime | null
  }
  updateManyOpeningTimes: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyOpeningTimesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OpeningTimeUpdateManyMutationInput, where?: OpeningTimeWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertOpeningTime: {
    type: 'OpeningTime'
    args: Record<MutationUpsertOpeningTimeArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: OpeningTimeWhereUniqueInput, create: OpeningTimeCreateInput, update: OpeningTimeUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OpeningTime> | prisma.OpeningTime
  }
  deleteOpeningTime: {
    type: 'OpeningTime'
    args: Record<MutationDeleteOpeningTimeArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: OpeningTimeWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OpeningTime | null> | prisma.OpeningTime | null
  }
  deleteManyOpeningTimes: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyOpeningTimesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: OpeningTimeWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createServiceTime: {
    type: 'ServiceTime'
    args: Record<MutationCreateServiceTimeArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ServiceTimeCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ServiceTime> | prisma.ServiceTime
  }
  updateServiceTime: {
    type: 'ServiceTime'
    args: Record<MutationUpdateServiceTimeArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ServiceTimeUpdateInput, where: ServiceTimeWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ServiceTime | null> | prisma.ServiceTime | null
  }
  updateManyServiceTimes: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyServiceTimesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: ServiceTimeUpdateManyMutationInput, where?: ServiceTimeWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertServiceTime: {
    type: 'ServiceTime'
    args: Record<MutationUpsertServiceTimeArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: ServiceTimeWhereUniqueInput, create: ServiceTimeCreateInput, update: ServiceTimeUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ServiceTime> | prisma.ServiceTime
  }
  deleteServiceTime: {
    type: 'ServiceTime'
    args: Record<MutationDeleteServiceTimeArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: ServiceTimeWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ServiceTime | null> | prisma.ServiceTime | null
  }
  deleteManyServiceTimes: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyServiceTimesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: ServiceTimeWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createMenu: {
    type: 'Menu'
    args: Record<MutationCreateMenuArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: MenuCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Menu> | prisma.Menu
  }
  updateMenu: {
    type: 'Menu'
    args: Record<MutationUpdateMenuArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: MenuUpdateInput, where: MenuWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Menu | null> | prisma.Menu | null
  }
  updateManyMenus: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyMenusArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: MenuUpdateManyMutationInput, where?: MenuWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertMenu: {
    type: 'Menu'
    args: Record<MutationUpsertMenuArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: MenuWhereUniqueInput, create: MenuCreateInput, update: MenuUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Menu> | prisma.Menu
  }
  deleteMenu: {
    type: 'Menu'
    args: Record<MutationDeleteMenuArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: MenuWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Menu | null> | prisma.Menu | null
  }
  deleteManyMenus: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyMenusArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: MenuWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createMenuCategory: {
    type: 'MenuCategory'
    args: Record<MutationCreateMenuCategoryArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: MenuCategoryCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuCategory> | prisma.MenuCategory
  }
  updateMenuCategory: {
    type: 'MenuCategory'
    args: Record<MutationUpdateMenuCategoryArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: MenuCategoryUpdateInput, where: MenuCategoryWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuCategory | null> | prisma.MenuCategory | null
  }
  updateManyMenuCategories: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyMenuCategoriesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: MenuCategoryUpdateManyMutationInput, where?: MenuCategoryWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertMenuCategory: {
    type: 'MenuCategory'
    args: Record<MutationUpsertMenuCategoryArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: MenuCategoryWhereUniqueInput, create: MenuCategoryCreateInput, update: MenuCategoryUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuCategory> | prisma.MenuCategory
  }
  deleteMenuCategory: {
    type: 'MenuCategory'
    args: Record<MutationDeleteMenuCategoryArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: MenuCategoryWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuCategory | null> | prisma.MenuCategory | null
  }
  deleteManyMenuCategories: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyMenuCategoriesArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: MenuCategoryWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createMenuItem: {
    type: 'MenuItem'
    args: Record<MutationCreateMenuItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: MenuItemCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuItem> | prisma.MenuItem
  }
  updateMenuItem: {
    type: 'MenuItem'
    args: Record<MutationUpdateMenuItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: MenuItemUpdateInput, where: MenuItemWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuItem | null> | prisma.MenuItem | null
  }
  updateManyMenuItems: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyMenuItemsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: MenuItemUpdateManyMutationInput, where?: MenuItemWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertMenuItem: {
    type: 'MenuItem'
    args: Record<MutationUpsertMenuItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: MenuItemWhereUniqueInput, create: MenuItemCreateInput, update: MenuItemUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuItem> | prisma.MenuItem
  }
  deleteMenuItem: {
    type: 'MenuItem'
    args: Record<MutationDeleteMenuItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: MenuItemWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuItem | null> | prisma.MenuItem | null
  }
  deleteManyMenuItems: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyMenuItemsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: MenuItemWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createOptionItem: {
    type: 'OptionItem'
    args: Record<MutationCreateOptionItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OptionItemCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OptionItem> | prisma.OptionItem
  }
  updateOptionItem: {
    type: 'OptionItem'
    args: Record<MutationUpdateOptionItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OptionItemUpdateInput, where: OptionItemWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OptionItem | null> | prisma.OptionItem | null
  }
  updateManyOptionItems: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyOptionItemsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OptionItemUpdateManyMutationInput, where?: OptionItemWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertOptionItem: {
    type: 'OptionItem'
    args: Record<MutationUpsertOptionItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: OptionItemWhereUniqueInput, create: OptionItemCreateInput, update: OptionItemUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OptionItem> | prisma.OptionItem
  }
  deleteOptionItem: {
    type: 'OptionItem'
    args: Record<MutationDeleteOptionItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: OptionItemWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OptionItem | null> | prisma.OptionItem | null
  }
  deleteManyOptionItems: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyOptionItemsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: OptionItemWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createOption: {
    type: 'Option'
    args: Record<MutationCreateOptionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OptionCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Option> | prisma.Option
  }
  updateOption: {
    type: 'Option'
    args: Record<MutationUpdateOptionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OptionUpdateInput, where: OptionWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Option | null> | prisma.Option | null
  }
  updateManyOptions: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyOptionsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OptionUpdateManyMutationInput, where?: OptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertOption: {
    type: 'Option'
    args: Record<MutationUpsertOptionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: OptionWhereUniqueInput, create: OptionCreateInput, update: OptionUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Option> | prisma.Option
  }
  deleteOption: {
    type: 'Option'
    args: Record<MutationDeleteOptionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: OptionWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Option | null> | prisma.Option | null
  }
  deleteManyOptions: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyOptionsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: OptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createOrderItemOptionItem: {
    type: 'OrderItemOptionItem'
    args: Record<MutationCreateOrderItemOptionItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OrderItemOptionItemCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItemOptionItem> | prisma.OrderItemOptionItem
  }
  updateOrderItemOptionItem: {
    type: 'OrderItemOptionItem'
    args: Record<MutationUpdateOrderItemOptionItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OrderItemOptionItemUpdateInput, where: OrderItemOptionItemWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItemOptionItem | null> | prisma.OrderItemOptionItem | null
  }
  updateManyOrderItemOptionItems: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyOrderItemOptionItemsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OrderItemOptionItemUpdateManyMutationInput, where?: OrderItemOptionItemWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertOrderItemOptionItem: {
    type: 'OrderItemOptionItem'
    args: Record<MutationUpsertOrderItemOptionItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: OrderItemOptionItemWhereUniqueInput, create: OrderItemOptionItemCreateInput, update: OrderItemOptionItemUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItemOptionItem> | prisma.OrderItemOptionItem
  }
  deleteOrderItemOptionItem: {
    type: 'OrderItemOptionItem'
    args: Record<MutationDeleteOrderItemOptionItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: OrderItemOptionItemWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItemOptionItem | null> | prisma.OrderItemOptionItem | null
  }
  deleteManyOrderItemOptionItems: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyOrderItemOptionItemsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: OrderItemOptionItemWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createOrderItemOption: {
    type: 'OrderItemOption'
    args: Record<MutationCreateOrderItemOptionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OrderItemOptionCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItemOption> | prisma.OrderItemOption
  }
  updateOrderItemOption: {
    type: 'OrderItemOption'
    args: Record<MutationUpdateOrderItemOptionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OrderItemOptionUpdateInput, where: OrderItemOptionWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItemOption | null> | prisma.OrderItemOption | null
  }
  updateManyOrderItemOptions: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyOrderItemOptionsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OrderItemOptionUpdateManyMutationInput, where?: OrderItemOptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertOrderItemOption: {
    type: 'OrderItemOption'
    args: Record<MutationUpsertOrderItemOptionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: OrderItemOptionWhereUniqueInput, create: OrderItemOptionCreateInput, update: OrderItemOptionUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItemOption> | prisma.OrderItemOption
  }
  deleteOrderItemOption: {
    type: 'OrderItemOption'
    args: Record<MutationDeleteOrderItemOptionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: OrderItemOptionWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItemOption | null> | prisma.OrderItemOption | null
  }
  deleteManyOrderItemOptions: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyOrderItemOptionsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: OrderItemOptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createOrderItem: {
    type: 'OrderItem'
    args: Record<MutationCreateOrderItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OrderItemCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItem> | prisma.OrderItem
  }
  updateOrderItem: {
    type: 'OrderItem'
    args: Record<MutationUpdateOrderItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OrderItemUpdateInput, where: OrderItemWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItem | null> | prisma.OrderItem | null
  }
  updateManyOrderItems: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyOrderItemsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OrderItemUpdateManyMutationInput, where?: OrderItemWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertOrderItem: {
    type: 'OrderItem'
    args: Record<MutationUpsertOrderItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: OrderItemWhereUniqueInput, create: OrderItemCreateInput, update: OrderItemUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItem> | prisma.OrderItem
  }
  deleteOrderItem: {
    type: 'OrderItem'
    args: Record<MutationDeleteOrderItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: OrderItemWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItem | null> | prisma.OrderItem | null
  }
  deleteManyOrderItems: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyOrderItemsArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: OrderItemWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  createOrder: {
    type: 'Order'
    args: Record<MutationCreateOrderArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OrderCreateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Order> | prisma.Order
  }
  updateOrder: {
    type: 'Order'
    args: Record<MutationUpdateOrderArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OrderUpdateInput, where: OrderWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Order | null> | prisma.Order | null
  }
  updateManyOrders: {
    type: 'BatchPayload'
    args: Record<MutationUpdateManyOrdersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { data: OrderUpdateManyMutationInput, where?: OrderWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
  upsertOrder: {
    type: 'Order'
    args: Record<MutationUpsertOrderArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: OrderWhereUniqueInput, create: OrderCreateInput, update: OrderUpdateInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Order> | prisma.Order
  }
  deleteOrder: {
    type: 'Order'
    args: Record<MutationDeleteOrderArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where: OrderWhereUniqueInput }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Order | null> | prisma.Order | null
  }
  deleteManyOrders: {
    type: 'BatchPayload'
    args: Record<MutationDeleteManyOrdersArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"Mutation">,
      args: { where?: OrderWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.BatchPayload> | prisma.BatchPayload
  }
}
  

// Types for BatchPayload

type BatchPayloadObject =
  | BatchPayloadFields
  | { name: 'count', args?: [] | false, alias?: string  } 

type BatchPayloadFields =
  | 'count'



  

export interface BatchPayloadFieldDetails {
  count: {
    type: 'Long'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for Subscription

type SubscriptionObject =
  | SubscriptionFields
  | { name: 'customer', args?: SubscriptionCustomerArgs[] | false, alias?: string  } 
  | { name: 'paymentMethod', args?: SubscriptionPaymentMethodArgs[] | false, alias?: string  } 
  | { name: 'address', args?: SubscriptionAddressArgs[] | false, alias?: string  } 
  | { name: 'restaurant', args?: SubscriptionRestaurantArgs[] | false, alias?: string  } 
  | { name: 'openingTime', args?: SubscriptionOpeningTimeArgs[] | false, alias?: string  } 
  | { name: 'serviceTime', args?: SubscriptionServiceTimeArgs[] | false, alias?: string  } 
  | { name: 'menu', args?: SubscriptionMenuArgs[] | false, alias?: string  } 
  | { name: 'menuCategory', args?: SubscriptionMenuCategoryArgs[] | false, alias?: string  } 
  | { name: 'menuItem', args?: SubscriptionMenuItemArgs[] | false, alias?: string  } 
  | { name: 'optionItem', args?: SubscriptionOptionItemArgs[] | false, alias?: string  } 
  | { name: 'option', args?: SubscriptionOptionArgs[] | false, alias?: string  } 
  | { name: 'orderItemOptionItem', args?: SubscriptionOrderItemOptionItemArgs[] | false, alias?: string  } 
  | { name: 'orderItemOption', args?: SubscriptionOrderItemOptionArgs[] | false, alias?: string  } 
  | { name: 'orderItem', args?: SubscriptionOrderItemArgs[] | false, alias?: string  } 
  | { name: 'order', args?: SubscriptionOrderArgs[] | false, alias?: string  } 

type SubscriptionFields =
  | 'customer'
  | 'paymentMethod'
  | 'address'
  | 'restaurant'
  | 'openingTime'
  | 'serviceTime'
  | 'menu'
  | 'menuCategory'
  | 'menuItem'
  | 'optionItem'
  | 'option'
  | 'orderItemOptionItem'
  | 'orderItemOption'
  | 'orderItem'
  | 'order'


type SubscriptionCustomerArgs =
  | 'where'
type SubscriptionPaymentMethodArgs =
  | 'where'
type SubscriptionAddressArgs =
  | 'where'
type SubscriptionRestaurantArgs =
  | 'where'
type SubscriptionOpeningTimeArgs =
  | 'where'
type SubscriptionServiceTimeArgs =
  | 'where'
type SubscriptionMenuArgs =
  | 'where'
type SubscriptionMenuCategoryArgs =
  | 'where'
type SubscriptionMenuItemArgs =
  | 'where'
type SubscriptionOptionItemArgs =
  | 'where'
type SubscriptionOptionArgs =
  | 'where'
type SubscriptionOrderItemOptionItemArgs =
  | 'where'
type SubscriptionOrderItemOptionArgs =
  | 'where'
type SubscriptionOrderItemArgs =
  | 'where'
type SubscriptionOrderArgs =
  | 'where'
  

export interface SubscriptionFieldDetails {
  customer: {
    type: 'CustomerSubscriptionPayload'
    args: Record<SubscriptionCustomerArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: CustomerSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CustomerSubscriptionPayload | null> | prisma.CustomerSubscriptionPayload | null
  }
  paymentMethod: {
    type: 'PaymentMethodSubscriptionPayload'
    args: Record<SubscriptionPaymentMethodArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: PaymentMethodSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PaymentMethodSubscriptionPayload | null> | prisma.PaymentMethodSubscriptionPayload | null
  }
  address: {
    type: 'AddressSubscriptionPayload'
    args: Record<SubscriptionAddressArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: AddressSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AddressSubscriptionPayload | null> | prisma.AddressSubscriptionPayload | null
  }
  restaurant: {
    type: 'RestaurantSubscriptionPayload'
    args: Record<SubscriptionRestaurantArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: RestaurantSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.RestaurantSubscriptionPayload | null> | prisma.RestaurantSubscriptionPayload | null
  }
  openingTime: {
    type: 'OpeningTimeSubscriptionPayload'
    args: Record<SubscriptionOpeningTimeArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: OpeningTimeSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OpeningTimeSubscriptionPayload | null> | prisma.OpeningTimeSubscriptionPayload | null
  }
  serviceTime: {
    type: 'ServiceTimeSubscriptionPayload'
    args: Record<SubscriptionServiceTimeArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: ServiceTimeSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ServiceTimeSubscriptionPayload | null> | prisma.ServiceTimeSubscriptionPayload | null
  }
  menu: {
    type: 'MenuSubscriptionPayload'
    args: Record<SubscriptionMenuArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: MenuSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuSubscriptionPayload | null> | prisma.MenuSubscriptionPayload | null
  }
  menuCategory: {
    type: 'MenuCategorySubscriptionPayload'
    args: Record<SubscriptionMenuCategoryArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: MenuCategorySubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuCategorySubscriptionPayload | null> | prisma.MenuCategorySubscriptionPayload | null
  }
  menuItem: {
    type: 'MenuItemSubscriptionPayload'
    args: Record<SubscriptionMenuItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: MenuItemSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuItemSubscriptionPayload | null> | prisma.MenuItemSubscriptionPayload | null
  }
  optionItem: {
    type: 'OptionItemSubscriptionPayload'
    args: Record<SubscriptionOptionItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: OptionItemSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OptionItemSubscriptionPayload | null> | prisma.OptionItemSubscriptionPayload | null
  }
  option: {
    type: 'OptionSubscriptionPayload'
    args: Record<SubscriptionOptionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: OptionSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OptionSubscriptionPayload | null> | prisma.OptionSubscriptionPayload | null
  }
  orderItemOptionItem: {
    type: 'OrderItemOptionItemSubscriptionPayload'
    args: Record<SubscriptionOrderItemOptionItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: OrderItemOptionItemSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItemOptionItemSubscriptionPayload | null> | prisma.OrderItemOptionItemSubscriptionPayload | null
  }
  orderItemOption: {
    type: 'OrderItemOptionSubscriptionPayload'
    args: Record<SubscriptionOrderItemOptionArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: OrderItemOptionSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItemOptionSubscriptionPayload | null> | prisma.OrderItemOptionSubscriptionPayload | null
  }
  orderItem: {
    type: 'OrderItemSubscriptionPayload'
    args: Record<SubscriptionOrderItemArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: OrderItemSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItemSubscriptionPayload | null> | prisma.OrderItemSubscriptionPayload | null
  }
  order: {
    type: 'OrderSubscriptionPayload'
    args: Record<SubscriptionOrderArgs, core.NexusArgDef<string>>
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"Subscription">,
      args: { where?: OrderSubscriptionWhereInput | null }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderSubscriptionPayload | null> | prisma.OrderSubscriptionPayload | null
  }
}
  

// Types for CustomerSubscriptionPayload

type CustomerSubscriptionPayloadObject =
  | CustomerSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type CustomerSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface CustomerSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"CustomerSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Customer'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"CustomerSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Customer | null> | prisma.Customer | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'CustomerPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"CustomerSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.CustomerPreviousValues | null> | prisma.CustomerPreviousValues | null
  }
}
  

// Types for CustomerPreviousValues

type CustomerPreviousValuesObject =
  | CustomerPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'password', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'tel', args?: [] | false, alias?: string  } 
  | { name: 'customerStripeId', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type CustomerPreviousValuesFields =
  | 'id'
  | 'email'
  | 'password'
  | 'name'
  | 'tel'
  | 'customerStripeId'
  | 'createdAt'
  | 'updatedAt'



  

export interface CustomerPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  password: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  tel: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  customerStripeId: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  

// Types for PaymentMethodSubscriptionPayload

type PaymentMethodSubscriptionPayloadObject =
  | PaymentMethodSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type PaymentMethodSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface PaymentMethodSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"PaymentMethodSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'PaymentMethod'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"PaymentMethodSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PaymentMethod | null> | prisma.PaymentMethod | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'PaymentMethodPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"PaymentMethodSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.PaymentMethodPreviousValues | null> | prisma.PaymentMethodPreviousValues | null
  }
}
  

// Types for PaymentMethodPreviousValues

type PaymentMethodPreviousValuesObject =
  | PaymentMethodPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'payment_method_id', args?: [] | false, alias?: string  } 
  | { name: 'brand', args?: [] | false, alias?: string  } 
  | { name: 'last4', args?: [] | false, alias?: string  } 

type PaymentMethodPreviousValuesFields =
  | 'id'
  | 'payment_method_id'
  | 'brand'
  | 'last4'



  

export interface PaymentMethodPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  payment_method_id: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  brand: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  last4: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for AddressSubscriptionPayload

type AddressSubscriptionPayloadObject =
  | AddressSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type AddressSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface AddressSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"AddressSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Address'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"AddressSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Address | null> | prisma.Address | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'AddressPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"AddressSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.AddressPreviousValues | null> | prisma.AddressPreviousValues | null
  }
}
  

// Types for AddressPreviousValues

type AddressPreviousValuesObject =
  | AddressPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'number', args?: [] | false, alias?: string  } 
  | { name: 'streetName', args?: [] | false, alias?: string  } 
  | { name: 'city', args?: [] | false, alias?: string  } 
  | { name: 'postalCode', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type AddressPreviousValuesFields =
  | 'id'
  | 'number'
  | 'streetName'
  | 'city'
  | 'postalCode'
  | 'createdAt'
  | 'updatedAt'



  

export interface AddressPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  number: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  streetName: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  city: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  postalCode: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for RestaurantSubscriptionPayload

type RestaurantSubscriptionPayloadObject =
  | RestaurantSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type RestaurantSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface RestaurantSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"RestaurantSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Restaurant'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"RestaurantSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Restaurant | null> | prisma.Restaurant | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'RestaurantPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"RestaurantSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.RestaurantPreviousValues | null> | prisma.RestaurantPreviousValues | null
  }
}
  

// Types for RestaurantPreviousValues

type RestaurantPreviousValuesObject =
  | RestaurantPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'email', args?: [] | false, alias?: string  } 
  | { name: 'password', args?: [] | false, alias?: string  } 
  | { name: 'tel', args?: [] | false, alias?: string  } 
  | { name: 'image', args?: [] | false, alias?: string  } 
  | { name: 'logo', args?: [] | false, alias?: string  } 
  | { name: 'description', args?: [] | false, alias?: string  } 
  | { name: 'status', args?: [] | false, alias?: string  } 
  | { name: 'tags', args?: [] | false, alias?: string  } 
  | { name: 'averageBusyPreparationTime', args?: [] | false, alias?: string  } 
  | { name: 'averagePreparationTime', args?: [] | false, alias?: string  } 
  | { name: 'isConnected', args?: [] | false, alias?: string  } 
  | { name: 'stripe_user_id', args?: [] | false, alias?: string  } 
  | { name: 'stripe_publishable_key', args?: [] | false, alias?: string  } 
  | { name: 'access_token', args?: [] | false, alias?: string  } 
  | { name: 'refresh_token', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type RestaurantPreviousValuesFields =
  | 'id'
  | 'name'
  | 'email'
  | 'password'
  | 'tel'
  | 'image'
  | 'logo'
  | 'description'
  | 'status'
  | 'tags'
  | 'averageBusyPreparationTime'
  | 'averagePreparationTime'
  | 'isConnected'
  | 'stripe_user_id'
  | 'stripe_publishable_key'
  | 'access_token'
  | 'refresh_token'
  | 'createdAt'
  | 'updatedAt'



  

export interface RestaurantPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  email: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  password: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  tel: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  image: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  logo: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  description: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  status: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  tags: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  averageBusyPreparationTime: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  averagePreparationTime: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  isConnected: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  stripe_user_id: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  stripe_publishable_key: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  access_token: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  refresh_token: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for OpeningTimeSubscriptionPayload

type OpeningTimeSubscriptionPayloadObject =
  | OpeningTimeSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type OpeningTimeSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface OpeningTimeSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OpeningTimeSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'OpeningTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"OpeningTimeSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OpeningTime | null> | prisma.OpeningTime | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'OpeningTimePreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"OpeningTimeSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OpeningTimePreviousValues | null> | prisma.OpeningTimePreviousValues | null
  }
}
  

// Types for OpeningTimePreviousValues

type OpeningTimePreviousValuesObject =
  | OpeningTimePreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'hours', args?: [] | false, alias?: string  } 
  | { name: 'days', args?: [] | false, alias?: string  } 

type OpeningTimePreviousValuesFields =
  | 'id'
  | 'hours'
  | 'days'



  

export interface OpeningTimePreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  hours: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  days: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
}
  

// Types for ServiceTimeSubscriptionPayload

type ServiceTimeSubscriptionPayloadObject =
  | ServiceTimeSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type ServiceTimeSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface ServiceTimeSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"ServiceTimeSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'ServiceTime'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"ServiceTimeSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ServiceTime | null> | prisma.ServiceTime | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'ServiceTimePreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"ServiceTimeSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.ServiceTimePreviousValues | null> | prisma.ServiceTimePreviousValues | null
  }
}
  

// Types for ServiceTimePreviousValues

type ServiceTimePreviousValuesObject =
  | ServiceTimePreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'hours', args?: [] | false, alias?: string  } 
  | { name: 'days', args?: [] | false, alias?: string  } 

type ServiceTimePreviousValuesFields =
  | 'id'
  | 'hours'
  | 'days'



  

export interface ServiceTimePreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  hours: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  days: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
}
  

// Types for MenuSubscriptionPayload

type MenuSubscriptionPayloadObject =
  | MenuSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type MenuSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface MenuSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"MenuSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Menu'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"MenuSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Menu | null> | prisma.Menu | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'MenuPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"MenuSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuPreviousValues | null> | prisma.MenuPreviousValues | null
  }
}
  

// Types for MenuPreviousValues

type MenuPreviousValuesObject =
  | MenuPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'description', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type MenuPreviousValuesFields =
  | 'id'
  | 'name'
  | 'description'
  | 'createdAt'
  | 'updatedAt'



  

export interface MenuPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  description: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for MenuCategorySubscriptionPayload

type MenuCategorySubscriptionPayloadObject =
  | MenuCategorySubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type MenuCategorySubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface MenuCategorySubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"MenuCategorySubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'MenuCategory'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"MenuCategorySubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuCategory | null> | prisma.MenuCategory | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'MenuCategoryPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"MenuCategorySubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuCategoryPreviousValues | null> | prisma.MenuCategoryPreviousValues | null
  }
}
  

// Types for MenuCategoryPreviousValues

type MenuCategoryPreviousValuesObject =
  | MenuCategoryPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'description', args?: [] | false, alias?: string  } 
  | { name: 'available', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type MenuCategoryPreviousValuesFields =
  | 'id'
  | 'name'
  | 'description'
  | 'available'
  | 'createdAt'
  | 'updatedAt'



  

export interface MenuCategoryPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  description: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  available: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for MenuItemSubscriptionPayload

type MenuItemSubscriptionPayloadObject =
  | MenuItemSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type MenuItemSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface MenuItemSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"MenuItemSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'MenuItem'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"MenuItemSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuItem | null> | prisma.MenuItem | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'MenuItemPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"MenuItemSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MenuItemPreviousValues | null> | prisma.MenuItemPreviousValues | null
  }
}
  

// Types for MenuItemPreviousValues

type MenuItemPreviousValuesObject =
  | MenuItemPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'description', args?: [] | false, alias?: string  } 
  | { name: 'price', args?: [] | false, alias?: string  } 
  | { name: 'image', args?: [] | false, alias?: string  } 
  | { name: 'available', args?: [] | false, alias?: string  } 
  | { name: 'dietary', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type MenuItemPreviousValuesFields =
  | 'id'
  | 'name'
  | 'description'
  | 'price'
  | 'image'
  | 'available'
  | 'dietary'
  | 'createdAt'
  | 'updatedAt'



  

export interface MenuItemPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  description: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  price: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  image: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  available: {
    type: 'Boolean'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  dietary: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for OptionItemSubscriptionPayload

type OptionItemSubscriptionPayloadObject =
  | OptionItemSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type OptionItemSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface OptionItemSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OptionItemSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'OptionItem'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"OptionItemSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OptionItem | null> | prisma.OptionItem | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'OptionItemPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"OptionItemSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OptionItemPreviousValues | null> | prisma.OptionItemPreviousValues | null
  }
}
  

// Types for OptionItemPreviousValues

type OptionItemPreviousValuesObject =
  | OptionItemPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'price', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type OptionItemPreviousValuesFields =
  | 'id'
  | 'name'
  | 'price'
  | 'createdAt'
  | 'updatedAt'



  

export interface OptionItemPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  price: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for OptionSubscriptionPayload

type OptionSubscriptionPayloadObject =
  | OptionSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type OptionSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface OptionSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OptionSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Option'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"OptionSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Option | null> | prisma.Option | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'OptionPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"OptionSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OptionPreviousValues | null> | prisma.OptionPreviousValues | null
  }
}
  

// Types for OptionPreviousValues

type OptionPreviousValuesObject =
  | OptionPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'min', args?: [] | false, alias?: string  } 
  | { name: 'max', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type OptionPreviousValuesFields =
  | 'id'
  | 'name'
  | 'min'
  | 'max'
  | 'createdAt'
  | 'updatedAt'



  

export interface OptionPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  min: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  max: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for OrderItemOptionItemSubscriptionPayload

type OrderItemOptionItemSubscriptionPayloadObject =
  | OrderItemOptionItemSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type OrderItemOptionItemSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface OrderItemOptionItemSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OrderItemOptionItemSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'OrderItemOptionItem'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"OrderItemOptionItemSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItemOptionItem | null> | prisma.OrderItemOptionItem | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'OrderItemOptionItemPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"OrderItemOptionItemSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItemOptionItemPreviousValues | null> | prisma.OrderItemOptionItemPreviousValues | null
  }
}
  

// Types for OrderItemOptionItemPreviousValues

type OrderItemOptionItemPreviousValuesObject =
  | OrderItemOptionItemPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'price', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type OrderItemOptionItemPreviousValuesFields =
  | 'id'
  | 'name'
  | 'price'
  | 'createdAt'
  | 'updatedAt'



  

export interface OrderItemOptionItemPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  price: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for OrderItemOptionSubscriptionPayload

type OrderItemOptionSubscriptionPayloadObject =
  | OrderItemOptionSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type OrderItemOptionSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface OrderItemOptionSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OrderItemOptionSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'OrderItemOption'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"OrderItemOptionSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItemOption | null> | prisma.OrderItemOption | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'OrderItemOptionPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"OrderItemOptionSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItemOptionPreviousValues | null> | prisma.OrderItemOptionPreviousValues | null
  }
}
  

// Types for OrderItemOptionPreviousValues

type OrderItemOptionPreviousValuesObject =
  | OrderItemOptionPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type OrderItemOptionPreviousValuesFields =
  | 'id'
  | 'name'
  | 'createdAt'
  | 'updatedAt'



  

export interface OrderItemOptionPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for OrderItemSubscriptionPayload

type OrderItemSubscriptionPayloadObject =
  | OrderItemSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type OrderItemSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface OrderItemSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OrderItemSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'OrderItem'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"OrderItemSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItem | null> | prisma.OrderItem | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'OrderItemPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"OrderItemSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderItemPreviousValues | null> | prisma.OrderItemPreviousValues | null
  }
}
  

// Types for OrderItemPreviousValues

type OrderItemPreviousValuesObject =
  | OrderItemPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'name', args?: [] | false, alias?: string  } 
  | { name: 'price', args?: [] | false, alias?: string  } 
  | { name: 'image', args?: [] | false, alias?: string  } 
  | { name: 'quantity', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 

type OrderItemPreviousValuesFields =
  | 'id'
  | 'name'
  | 'price'
  | 'image'
  | 'quantity'
  | 'createdAt'
  | 'updatedAt'



  

export interface OrderItemPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  name: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  price: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  image: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  quantity: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
}
  

// Types for OrderSubscriptionPayload

type OrderSubscriptionPayloadObject =
  | OrderSubscriptionPayloadFields
  | { name: 'mutation', args?: [] | false, alias?: string  } 
  | { name: 'node', args?: [] | false, alias?: string  } 
  | { name: 'updatedFields', args?: [] | false, alias?: string  } 
  | { name: 'previousValues', args?: [] | false, alias?: string  } 

type OrderSubscriptionPayloadFields =
  | 'mutation'
  | 'node'
  | 'updatedFields'
  | 'previousValues'



  

export interface OrderSubscriptionPayloadFieldDetails {
  mutation: {
    type: 'MutationType'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: (
      root: core.RootValue<"OrderSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.MutationType> | prisma.MutationType
  }
  node: {
    type: 'Order'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"OrderSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.Order | null> | prisma.Order | null
  }
  updatedFields: {
    type: 'String'
    args: {}
    description: string
    list: true
    nullable: false
    resolve: undefined
  }
  previousValues: {
    type: 'OrderPreviousValues'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: (
      root: core.RootValue<"OrderSubscriptionPayload">,
      args: {  }  ,
      context: core.GetGen<"context">,
      info?: GraphQLResolveInfo
    ) => Promise<prisma.OrderPreviousValues | null> | prisma.OrderPreviousValues | null
  }
}
  

// Types for OrderPreviousValues

type OrderPreviousValuesObject =
  | OrderPreviousValuesFields
  | { name: 'id', args?: [] | false, alias?: string  } 
  | { name: 'orderNo', args?: [] | false, alias?: string  } 
  | { name: 'paymentIntentId', args?: [] | false, alias?: string  } 
  | { name: 'status', args?: [] | false, alias?: string  } 
  | { name: 'createdAt', args?: [] | false, alias?: string  } 
  | { name: 'updatedAt', args?: [] | false, alias?: string  } 
  | { name: 'dueAt', args?: [] | false, alias?: string  } 
  | { name: 'delayedBy', args?: [] | false, alias?: string  } 
  | { name: 'total', args?: [] | false, alias?: string  } 
  | { name: 'priceAdjustment', args?: [] | false, alias?: string  } 
  | { name: 'cancelReason', args?: [] | false, alias?: string  } 
  | { name: 'priceAdjustmentReason', args?: [] | false, alias?: string  } 

type OrderPreviousValuesFields =
  | 'id'
  | 'orderNo'
  | 'paymentIntentId'
  | 'status'
  | 'createdAt'
  | 'updatedAt'
  | 'dueAt'
  | 'delayedBy'
  | 'total'
  | 'priceAdjustment'
  | 'cancelReason'
  | 'priceAdjustmentReason'



  

export interface OrderPreviousValuesFieldDetails {
  id: {
    type: 'ID'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  orderNo: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  paymentIntentId: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  status: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  createdAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  updatedAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  dueAt: {
    type: 'DateTime'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  delayedBy: {
    type: 'Int'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  total: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: false
    resolve: undefined
  }
  priceAdjustment: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  cancelReason: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
  priceAdjustmentReason: {
    type: 'String'
    args: {}
    description: string
    list: undefined
    nullable: true
    resolve: undefined
  }
}
  


export interface CustomerWhereUniqueInput {
  id?: string | null
  email?: string | null
}
export type CustomerWhereUniqueInputInputObject =
  | Extract<keyof CustomerWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'email', alias?: string  } 
  
export interface OrderWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  orderNo?: number | null
  orderNo_not?: number | null
  orderNo_in?: number[]
  orderNo_not_in?: number[]
  orderNo_lt?: number | null
  orderNo_lte?: number | null
  orderNo_gt?: number | null
  orderNo_gte?: number | null
  paymentIntentId?: string | null
  paymentIntentId_not?: string | null
  paymentIntentId_in?: string[]
  paymentIntentId_not_in?: string[]
  paymentIntentId_lt?: string | null
  paymentIntentId_lte?: string | null
  paymentIntentId_gt?: string | null
  paymentIntentId_gte?: string | null
  paymentIntentId_contains?: string | null
  paymentIntentId_not_contains?: string | null
  paymentIntentId_starts_with?: string | null
  paymentIntentId_not_starts_with?: string | null
  paymentIntentId_ends_with?: string | null
  paymentIntentId_not_ends_with?: string | null
  status?: string | null
  status_not?: string | null
  status_in?: string[]
  status_not_in?: string[]
  status_lt?: string | null
  status_lte?: string | null
  status_gt?: string | null
  status_gte?: string | null
  status_contains?: string | null
  status_not_contains?: string | null
  status_starts_with?: string | null
  status_not_starts_with?: string | null
  status_ends_with?: string | null
  status_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  dueAt?: string | null
  dueAt_not?: string | null
  dueAt_in?: string[]
  dueAt_not_in?: string[]
  dueAt_lt?: string | null
  dueAt_lte?: string | null
  dueAt_gt?: string | null
  dueAt_gte?: string | null
  delayedBy?: number | null
  delayedBy_not?: number | null
  delayedBy_in?: number[]
  delayedBy_not_in?: number[]
  delayedBy_lt?: number | null
  delayedBy_lte?: number | null
  delayedBy_gt?: number | null
  delayedBy_gte?: number | null
  restaurant?: RestaurantWhereInput | null
  customer?: CustomerWhereInput | null
  items_every?: OrderItemWhereInput | null
  items_some?: OrderItemWhereInput | null
  items_none?: OrderItemWhereInput | null
  total?: string | null
  total_not?: string | null
  total_in?: string[]
  total_not_in?: string[]
  total_lt?: string | null
  total_lte?: string | null
  total_gt?: string | null
  total_gte?: string | null
  total_contains?: string | null
  total_not_contains?: string | null
  total_starts_with?: string | null
  total_not_starts_with?: string | null
  total_ends_with?: string | null
  total_not_ends_with?: string | null
  priceAdjustment?: string | null
  priceAdjustment_not?: string | null
  priceAdjustment_in?: string[]
  priceAdjustment_not_in?: string[]
  priceAdjustment_lt?: string | null
  priceAdjustment_lte?: string | null
  priceAdjustment_gt?: string | null
  priceAdjustment_gte?: string | null
  priceAdjustment_contains?: string | null
  priceAdjustment_not_contains?: string | null
  priceAdjustment_starts_with?: string | null
  priceAdjustment_not_starts_with?: string | null
  priceAdjustment_ends_with?: string | null
  priceAdjustment_not_ends_with?: string | null
  cancelReason?: string | null
  cancelReason_not?: string | null
  cancelReason_in?: string[]
  cancelReason_not_in?: string[]
  cancelReason_lt?: string | null
  cancelReason_lte?: string | null
  cancelReason_gt?: string | null
  cancelReason_gte?: string | null
  cancelReason_contains?: string | null
  cancelReason_not_contains?: string | null
  cancelReason_starts_with?: string | null
  cancelReason_not_starts_with?: string | null
  cancelReason_ends_with?: string | null
  cancelReason_not_ends_with?: string | null
  priceAdjustmentReason?: string | null
  priceAdjustmentReason_not?: string | null
  priceAdjustmentReason_in?: string[]
  priceAdjustmentReason_not_in?: string[]
  priceAdjustmentReason_lt?: string | null
  priceAdjustmentReason_lte?: string | null
  priceAdjustmentReason_gt?: string | null
  priceAdjustmentReason_gte?: string | null
  priceAdjustmentReason_contains?: string | null
  priceAdjustmentReason_not_contains?: string | null
  priceAdjustmentReason_starts_with?: string | null
  priceAdjustmentReason_not_starts_with?: string | null
  priceAdjustmentReason_ends_with?: string | null
  priceAdjustmentReason_not_ends_with?: string | null
  AND?: OrderWhereInput[]
  OR?: OrderWhereInput[]
  NOT?: OrderWhereInput[]
}
export type OrderWhereInputInputObject =
  | Extract<keyof OrderWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'orderNo', alias?: string  } 
  | { name: 'orderNo_not', alias?: string  } 
  | { name: 'orderNo_in', alias?: string  } 
  | { name: 'orderNo_not_in', alias?: string  } 
  | { name: 'orderNo_lt', alias?: string  } 
  | { name: 'orderNo_lte', alias?: string  } 
  | { name: 'orderNo_gt', alias?: string  } 
  | { name: 'orderNo_gte', alias?: string  } 
  | { name: 'paymentIntentId', alias?: string  } 
  | { name: 'paymentIntentId_not', alias?: string  } 
  | { name: 'paymentIntentId_in', alias?: string  } 
  | { name: 'paymentIntentId_not_in', alias?: string  } 
  | { name: 'paymentIntentId_lt', alias?: string  } 
  | { name: 'paymentIntentId_lte', alias?: string  } 
  | { name: 'paymentIntentId_gt', alias?: string  } 
  | { name: 'paymentIntentId_gte', alias?: string  } 
  | { name: 'paymentIntentId_contains', alias?: string  } 
  | { name: 'paymentIntentId_not_contains', alias?: string  } 
  | { name: 'paymentIntentId_starts_with', alias?: string  } 
  | { name: 'paymentIntentId_not_starts_with', alias?: string  } 
  | { name: 'paymentIntentId_ends_with', alias?: string  } 
  | { name: 'paymentIntentId_not_ends_with', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'status_not', alias?: string  } 
  | { name: 'status_in', alias?: string  } 
  | { name: 'status_not_in', alias?: string  } 
  | { name: 'status_lt', alias?: string  } 
  | { name: 'status_lte', alias?: string  } 
  | { name: 'status_gt', alias?: string  } 
  | { name: 'status_gte', alias?: string  } 
  | { name: 'status_contains', alias?: string  } 
  | { name: 'status_not_contains', alias?: string  } 
  | { name: 'status_starts_with', alias?: string  } 
  | { name: 'status_not_starts_with', alias?: string  } 
  | { name: 'status_ends_with', alias?: string  } 
  | { name: 'status_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'dueAt', alias?: string  } 
  | { name: 'dueAt_not', alias?: string  } 
  | { name: 'dueAt_in', alias?: string  } 
  | { name: 'dueAt_not_in', alias?: string  } 
  | { name: 'dueAt_lt', alias?: string  } 
  | { name: 'dueAt_lte', alias?: string  } 
  | { name: 'dueAt_gt', alias?: string  } 
  | { name: 'dueAt_gte', alias?: string  } 
  | { name: 'delayedBy', alias?: string  } 
  | { name: 'delayedBy_not', alias?: string  } 
  | { name: 'delayedBy_in', alias?: string  } 
  | { name: 'delayedBy_not_in', alias?: string  } 
  | { name: 'delayedBy_lt', alias?: string  } 
  | { name: 'delayedBy_lte', alias?: string  } 
  | { name: 'delayedBy_gt', alias?: string  } 
  | { name: 'delayedBy_gte', alias?: string  } 
  | { name: 'restaurant', alias?: string  } 
  | { name: 'customer', alias?: string  } 
  | { name: 'items_every', alias?: string  } 
  | { name: 'items_some', alias?: string  } 
  | { name: 'items_none', alias?: string  } 
  | { name: 'total', alias?: string  } 
  | { name: 'total_not', alias?: string  } 
  | { name: 'total_in', alias?: string  } 
  | { name: 'total_not_in', alias?: string  } 
  | { name: 'total_lt', alias?: string  } 
  | { name: 'total_lte', alias?: string  } 
  | { name: 'total_gt', alias?: string  } 
  | { name: 'total_gte', alias?: string  } 
  | { name: 'total_contains', alias?: string  } 
  | { name: 'total_not_contains', alias?: string  } 
  | { name: 'total_starts_with', alias?: string  } 
  | { name: 'total_not_starts_with', alias?: string  } 
  | { name: 'total_ends_with', alias?: string  } 
  | { name: 'total_not_ends_with', alias?: string  } 
  | { name: 'priceAdjustment', alias?: string  } 
  | { name: 'priceAdjustment_not', alias?: string  } 
  | { name: 'priceAdjustment_in', alias?: string  } 
  | { name: 'priceAdjustment_not_in', alias?: string  } 
  | { name: 'priceAdjustment_lt', alias?: string  } 
  | { name: 'priceAdjustment_lte', alias?: string  } 
  | { name: 'priceAdjustment_gt', alias?: string  } 
  | { name: 'priceAdjustment_gte', alias?: string  } 
  | { name: 'priceAdjustment_contains', alias?: string  } 
  | { name: 'priceAdjustment_not_contains', alias?: string  } 
  | { name: 'priceAdjustment_starts_with', alias?: string  } 
  | { name: 'priceAdjustment_not_starts_with', alias?: string  } 
  | { name: 'priceAdjustment_ends_with', alias?: string  } 
  | { name: 'priceAdjustment_not_ends_with', alias?: string  } 
  | { name: 'cancelReason', alias?: string  } 
  | { name: 'cancelReason_not', alias?: string  } 
  | { name: 'cancelReason_in', alias?: string  } 
  | { name: 'cancelReason_not_in', alias?: string  } 
  | { name: 'cancelReason_lt', alias?: string  } 
  | { name: 'cancelReason_lte', alias?: string  } 
  | { name: 'cancelReason_gt', alias?: string  } 
  | { name: 'cancelReason_gte', alias?: string  } 
  | { name: 'cancelReason_contains', alias?: string  } 
  | { name: 'cancelReason_not_contains', alias?: string  } 
  | { name: 'cancelReason_starts_with', alias?: string  } 
  | { name: 'cancelReason_not_starts_with', alias?: string  } 
  | { name: 'cancelReason_ends_with', alias?: string  } 
  | { name: 'cancelReason_not_ends_with', alias?: string  } 
  | { name: 'priceAdjustmentReason', alias?: string  } 
  | { name: 'priceAdjustmentReason_not', alias?: string  } 
  | { name: 'priceAdjustmentReason_in', alias?: string  } 
  | { name: 'priceAdjustmentReason_not_in', alias?: string  } 
  | { name: 'priceAdjustmentReason_lt', alias?: string  } 
  | { name: 'priceAdjustmentReason_lte', alias?: string  } 
  | { name: 'priceAdjustmentReason_gt', alias?: string  } 
  | { name: 'priceAdjustmentReason_gte', alias?: string  } 
  | { name: 'priceAdjustmentReason_contains', alias?: string  } 
  | { name: 'priceAdjustmentReason_not_contains', alias?: string  } 
  | { name: 'priceAdjustmentReason_starts_with', alias?: string  } 
  | { name: 'priceAdjustmentReason_not_starts_with', alias?: string  } 
  | { name: 'priceAdjustmentReason_ends_with', alias?: string  } 
  | { name: 'priceAdjustmentReason_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface RestaurantWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  email?: string | null
  email_not?: string | null
  email_in?: string[]
  email_not_in?: string[]
  email_lt?: string | null
  email_lte?: string | null
  email_gt?: string | null
  email_gte?: string | null
  email_contains?: string | null
  email_not_contains?: string | null
  email_starts_with?: string | null
  email_not_starts_with?: string | null
  email_ends_with?: string | null
  email_not_ends_with?: string | null
  password?: string | null
  password_not?: string | null
  password_in?: string[]
  password_not_in?: string[]
  password_lt?: string | null
  password_lte?: string | null
  password_gt?: string | null
  password_gte?: string | null
  password_contains?: string | null
  password_not_contains?: string | null
  password_starts_with?: string | null
  password_not_starts_with?: string | null
  password_ends_with?: string | null
  password_not_ends_with?: string | null
  address?: AddressWhereInput | null
  tel?: string | null
  tel_not?: string | null
  tel_in?: string[]
  tel_not_in?: string[]
  tel_lt?: string | null
  tel_lte?: string | null
  tel_gt?: string | null
  tel_gte?: string | null
  tel_contains?: string | null
  tel_not_contains?: string | null
  tel_starts_with?: string | null
  tel_not_starts_with?: string | null
  tel_ends_with?: string | null
  tel_not_ends_with?: string | null
  image?: string | null
  image_not?: string | null
  image_in?: string[]
  image_not_in?: string[]
  image_lt?: string | null
  image_lte?: string | null
  image_gt?: string | null
  image_gte?: string | null
  image_contains?: string | null
  image_not_contains?: string | null
  image_starts_with?: string | null
  image_not_starts_with?: string | null
  image_ends_with?: string | null
  image_not_ends_with?: string | null
  logo?: string | null
  logo_not?: string | null
  logo_in?: string[]
  logo_not_in?: string[]
  logo_lt?: string | null
  logo_lte?: string | null
  logo_gt?: string | null
  logo_gte?: string | null
  logo_contains?: string | null
  logo_not_contains?: string | null
  logo_starts_with?: string | null
  logo_not_starts_with?: string | null
  logo_ends_with?: string | null
  logo_not_ends_with?: string | null
  description?: string | null
  description_not?: string | null
  description_in?: string[]
  description_not_in?: string[]
  description_lt?: string | null
  description_lte?: string | null
  description_gt?: string | null
  description_gte?: string | null
  description_contains?: string | null
  description_not_contains?: string | null
  description_starts_with?: string | null
  description_not_starts_with?: string | null
  description_ends_with?: string | null
  description_not_ends_with?: string | null
  status?: string | null
  status_not?: string | null
  status_in?: string[]
  status_not_in?: string[]
  status_lt?: string | null
  status_lte?: string | null
  status_gt?: string | null
  status_gte?: string | null
  status_contains?: string | null
  status_not_contains?: string | null
  status_starts_with?: string | null
  status_not_starts_with?: string | null
  status_ends_with?: string | null
  status_not_ends_with?: string | null
  openingTimes_every?: OpeningTimeWhereInput | null
  openingTimes_some?: OpeningTimeWhereInput | null
  openingTimes_none?: OpeningTimeWhereInput | null
  averageBusyPreparationTime?: string | null
  averageBusyPreparationTime_not?: string | null
  averageBusyPreparationTime_in?: string[]
  averageBusyPreparationTime_not_in?: string[]
  averageBusyPreparationTime_lt?: string | null
  averageBusyPreparationTime_lte?: string | null
  averageBusyPreparationTime_gt?: string | null
  averageBusyPreparationTime_gte?: string | null
  averageBusyPreparationTime_contains?: string | null
  averageBusyPreparationTime_not_contains?: string | null
  averageBusyPreparationTime_starts_with?: string | null
  averageBusyPreparationTime_not_starts_with?: string | null
  averageBusyPreparationTime_ends_with?: string | null
  averageBusyPreparationTime_not_ends_with?: string | null
  averagePreparationTime?: string | null
  averagePreparationTime_not?: string | null
  averagePreparationTime_in?: string[]
  averagePreparationTime_not_in?: string[]
  averagePreparationTime_lt?: string | null
  averagePreparationTime_lte?: string | null
  averagePreparationTime_gt?: string | null
  averagePreparationTime_gte?: string | null
  averagePreparationTime_contains?: string | null
  averagePreparationTime_not_contains?: string | null
  averagePreparationTime_starts_with?: string | null
  averagePreparationTime_not_starts_with?: string | null
  averagePreparationTime_ends_with?: string | null
  averagePreparationTime_not_ends_with?: string | null
  menus_every?: MenuWhereInput | null
  menus_some?: MenuWhereInput | null
  menus_none?: MenuWhereInput | null
  isConnected?: boolean | null
  isConnected_not?: boolean | null
  stripe_user_id?: string | null
  stripe_user_id_not?: string | null
  stripe_user_id_in?: string[]
  stripe_user_id_not_in?: string[]
  stripe_user_id_lt?: string | null
  stripe_user_id_lte?: string | null
  stripe_user_id_gt?: string | null
  stripe_user_id_gte?: string | null
  stripe_user_id_contains?: string | null
  stripe_user_id_not_contains?: string | null
  stripe_user_id_starts_with?: string | null
  stripe_user_id_not_starts_with?: string | null
  stripe_user_id_ends_with?: string | null
  stripe_user_id_not_ends_with?: string | null
  stripe_publishable_key?: string | null
  stripe_publishable_key_not?: string | null
  stripe_publishable_key_in?: string[]
  stripe_publishable_key_not_in?: string[]
  stripe_publishable_key_lt?: string | null
  stripe_publishable_key_lte?: string | null
  stripe_publishable_key_gt?: string | null
  stripe_publishable_key_gte?: string | null
  stripe_publishable_key_contains?: string | null
  stripe_publishable_key_not_contains?: string | null
  stripe_publishable_key_starts_with?: string | null
  stripe_publishable_key_not_starts_with?: string | null
  stripe_publishable_key_ends_with?: string | null
  stripe_publishable_key_not_ends_with?: string | null
  access_token?: string | null
  access_token_not?: string | null
  access_token_in?: string[]
  access_token_not_in?: string[]
  access_token_lt?: string | null
  access_token_lte?: string | null
  access_token_gt?: string | null
  access_token_gte?: string | null
  access_token_contains?: string | null
  access_token_not_contains?: string | null
  access_token_starts_with?: string | null
  access_token_not_starts_with?: string | null
  access_token_ends_with?: string | null
  access_token_not_ends_with?: string | null
  refresh_token?: string | null
  refresh_token_not?: string | null
  refresh_token_in?: string[]
  refresh_token_not_in?: string[]
  refresh_token_lt?: string | null
  refresh_token_lte?: string | null
  refresh_token_gt?: string | null
  refresh_token_gte?: string | null
  refresh_token_contains?: string | null
  refresh_token_not_contains?: string | null
  refresh_token_starts_with?: string | null
  refresh_token_not_starts_with?: string | null
  refresh_token_ends_with?: string | null
  refresh_token_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: RestaurantWhereInput[]
  OR?: RestaurantWhereInput[]
  NOT?: RestaurantWhereInput[]
}
export type RestaurantWhereInputInputObject =
  | Extract<keyof RestaurantWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'email_not', alias?: string  } 
  | { name: 'email_in', alias?: string  } 
  | { name: 'email_not_in', alias?: string  } 
  | { name: 'email_lt', alias?: string  } 
  | { name: 'email_lte', alias?: string  } 
  | { name: 'email_gt', alias?: string  } 
  | { name: 'email_gte', alias?: string  } 
  | { name: 'email_contains', alias?: string  } 
  | { name: 'email_not_contains', alias?: string  } 
  | { name: 'email_starts_with', alias?: string  } 
  | { name: 'email_not_starts_with', alias?: string  } 
  | { name: 'email_ends_with', alias?: string  } 
  | { name: 'email_not_ends_with', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'password_not', alias?: string  } 
  | { name: 'password_in', alias?: string  } 
  | { name: 'password_not_in', alias?: string  } 
  | { name: 'password_lt', alias?: string  } 
  | { name: 'password_lte', alias?: string  } 
  | { name: 'password_gt', alias?: string  } 
  | { name: 'password_gte', alias?: string  } 
  | { name: 'password_contains', alias?: string  } 
  | { name: 'password_not_contains', alias?: string  } 
  | { name: 'password_starts_with', alias?: string  } 
  | { name: 'password_not_starts_with', alias?: string  } 
  | { name: 'password_ends_with', alias?: string  } 
  | { name: 'password_not_ends_with', alias?: string  } 
  | { name: 'address', alias?: string  } 
  | { name: 'tel', alias?: string  } 
  | { name: 'tel_not', alias?: string  } 
  | { name: 'tel_in', alias?: string  } 
  | { name: 'tel_not_in', alias?: string  } 
  | { name: 'tel_lt', alias?: string  } 
  | { name: 'tel_lte', alias?: string  } 
  | { name: 'tel_gt', alias?: string  } 
  | { name: 'tel_gte', alias?: string  } 
  | { name: 'tel_contains', alias?: string  } 
  | { name: 'tel_not_contains', alias?: string  } 
  | { name: 'tel_starts_with', alias?: string  } 
  | { name: 'tel_not_starts_with', alias?: string  } 
  | { name: 'tel_ends_with', alias?: string  } 
  | { name: 'tel_not_ends_with', alias?: string  } 
  | { name: 'image', alias?: string  } 
  | { name: 'image_not', alias?: string  } 
  | { name: 'image_in', alias?: string  } 
  | { name: 'image_not_in', alias?: string  } 
  | { name: 'image_lt', alias?: string  } 
  | { name: 'image_lte', alias?: string  } 
  | { name: 'image_gt', alias?: string  } 
  | { name: 'image_gte', alias?: string  } 
  | { name: 'image_contains', alias?: string  } 
  | { name: 'image_not_contains', alias?: string  } 
  | { name: 'image_starts_with', alias?: string  } 
  | { name: 'image_not_starts_with', alias?: string  } 
  | { name: 'image_ends_with', alias?: string  } 
  | { name: 'image_not_ends_with', alias?: string  } 
  | { name: 'logo', alias?: string  } 
  | { name: 'logo_not', alias?: string  } 
  | { name: 'logo_in', alias?: string  } 
  | { name: 'logo_not_in', alias?: string  } 
  | { name: 'logo_lt', alias?: string  } 
  | { name: 'logo_lte', alias?: string  } 
  | { name: 'logo_gt', alias?: string  } 
  | { name: 'logo_gte', alias?: string  } 
  | { name: 'logo_contains', alias?: string  } 
  | { name: 'logo_not_contains', alias?: string  } 
  | { name: 'logo_starts_with', alias?: string  } 
  | { name: 'logo_not_starts_with', alias?: string  } 
  | { name: 'logo_ends_with', alias?: string  } 
  | { name: 'logo_not_ends_with', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'description_not', alias?: string  } 
  | { name: 'description_in', alias?: string  } 
  | { name: 'description_not_in', alias?: string  } 
  | { name: 'description_lt', alias?: string  } 
  | { name: 'description_lte', alias?: string  } 
  | { name: 'description_gt', alias?: string  } 
  | { name: 'description_gte', alias?: string  } 
  | { name: 'description_contains', alias?: string  } 
  | { name: 'description_not_contains', alias?: string  } 
  | { name: 'description_starts_with', alias?: string  } 
  | { name: 'description_not_starts_with', alias?: string  } 
  | { name: 'description_ends_with', alias?: string  } 
  | { name: 'description_not_ends_with', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'status_not', alias?: string  } 
  | { name: 'status_in', alias?: string  } 
  | { name: 'status_not_in', alias?: string  } 
  | { name: 'status_lt', alias?: string  } 
  | { name: 'status_lte', alias?: string  } 
  | { name: 'status_gt', alias?: string  } 
  | { name: 'status_gte', alias?: string  } 
  | { name: 'status_contains', alias?: string  } 
  | { name: 'status_not_contains', alias?: string  } 
  | { name: 'status_starts_with', alias?: string  } 
  | { name: 'status_not_starts_with', alias?: string  } 
  | { name: 'status_ends_with', alias?: string  } 
  | { name: 'status_not_ends_with', alias?: string  } 
  | { name: 'openingTimes_every', alias?: string  } 
  | { name: 'openingTimes_some', alias?: string  } 
  | { name: 'openingTimes_none', alias?: string  } 
  | { name: 'averageBusyPreparationTime', alias?: string  } 
  | { name: 'averageBusyPreparationTime_not', alias?: string  } 
  | { name: 'averageBusyPreparationTime_in', alias?: string  } 
  | { name: 'averageBusyPreparationTime_not_in', alias?: string  } 
  | { name: 'averageBusyPreparationTime_lt', alias?: string  } 
  | { name: 'averageBusyPreparationTime_lte', alias?: string  } 
  | { name: 'averageBusyPreparationTime_gt', alias?: string  } 
  | { name: 'averageBusyPreparationTime_gte', alias?: string  } 
  | { name: 'averageBusyPreparationTime_contains', alias?: string  } 
  | { name: 'averageBusyPreparationTime_not_contains', alias?: string  } 
  | { name: 'averageBusyPreparationTime_starts_with', alias?: string  } 
  | { name: 'averageBusyPreparationTime_not_starts_with', alias?: string  } 
  | { name: 'averageBusyPreparationTime_ends_with', alias?: string  } 
  | { name: 'averageBusyPreparationTime_not_ends_with', alias?: string  } 
  | { name: 'averagePreparationTime', alias?: string  } 
  | { name: 'averagePreparationTime_not', alias?: string  } 
  | { name: 'averagePreparationTime_in', alias?: string  } 
  | { name: 'averagePreparationTime_not_in', alias?: string  } 
  | { name: 'averagePreparationTime_lt', alias?: string  } 
  | { name: 'averagePreparationTime_lte', alias?: string  } 
  | { name: 'averagePreparationTime_gt', alias?: string  } 
  | { name: 'averagePreparationTime_gte', alias?: string  } 
  | { name: 'averagePreparationTime_contains', alias?: string  } 
  | { name: 'averagePreparationTime_not_contains', alias?: string  } 
  | { name: 'averagePreparationTime_starts_with', alias?: string  } 
  | { name: 'averagePreparationTime_not_starts_with', alias?: string  } 
  | { name: 'averagePreparationTime_ends_with', alias?: string  } 
  | { name: 'averagePreparationTime_not_ends_with', alias?: string  } 
  | { name: 'menus_every', alias?: string  } 
  | { name: 'menus_some', alias?: string  } 
  | { name: 'menus_none', alias?: string  } 
  | { name: 'isConnected', alias?: string  } 
  | { name: 'isConnected_not', alias?: string  } 
  | { name: 'stripe_user_id', alias?: string  } 
  | { name: 'stripe_user_id_not', alias?: string  } 
  | { name: 'stripe_user_id_in', alias?: string  } 
  | { name: 'stripe_user_id_not_in', alias?: string  } 
  | { name: 'stripe_user_id_lt', alias?: string  } 
  | { name: 'stripe_user_id_lte', alias?: string  } 
  | { name: 'stripe_user_id_gt', alias?: string  } 
  | { name: 'stripe_user_id_gte', alias?: string  } 
  | { name: 'stripe_user_id_contains', alias?: string  } 
  | { name: 'stripe_user_id_not_contains', alias?: string  } 
  | { name: 'stripe_user_id_starts_with', alias?: string  } 
  | { name: 'stripe_user_id_not_starts_with', alias?: string  } 
  | { name: 'stripe_user_id_ends_with', alias?: string  } 
  | { name: 'stripe_user_id_not_ends_with', alias?: string  } 
  | { name: 'stripe_publishable_key', alias?: string  } 
  | { name: 'stripe_publishable_key_not', alias?: string  } 
  | { name: 'stripe_publishable_key_in', alias?: string  } 
  | { name: 'stripe_publishable_key_not_in', alias?: string  } 
  | { name: 'stripe_publishable_key_lt', alias?: string  } 
  | { name: 'stripe_publishable_key_lte', alias?: string  } 
  | { name: 'stripe_publishable_key_gt', alias?: string  } 
  | { name: 'stripe_publishable_key_gte', alias?: string  } 
  | { name: 'stripe_publishable_key_contains', alias?: string  } 
  | { name: 'stripe_publishable_key_not_contains', alias?: string  } 
  | { name: 'stripe_publishable_key_starts_with', alias?: string  } 
  | { name: 'stripe_publishable_key_not_starts_with', alias?: string  } 
  | { name: 'stripe_publishable_key_ends_with', alias?: string  } 
  | { name: 'stripe_publishable_key_not_ends_with', alias?: string  } 
  | { name: 'access_token', alias?: string  } 
  | { name: 'access_token_not', alias?: string  } 
  | { name: 'access_token_in', alias?: string  } 
  | { name: 'access_token_not_in', alias?: string  } 
  | { name: 'access_token_lt', alias?: string  } 
  | { name: 'access_token_lte', alias?: string  } 
  | { name: 'access_token_gt', alias?: string  } 
  | { name: 'access_token_gte', alias?: string  } 
  | { name: 'access_token_contains', alias?: string  } 
  | { name: 'access_token_not_contains', alias?: string  } 
  | { name: 'access_token_starts_with', alias?: string  } 
  | { name: 'access_token_not_starts_with', alias?: string  } 
  | { name: 'access_token_ends_with', alias?: string  } 
  | { name: 'access_token_not_ends_with', alias?: string  } 
  | { name: 'refresh_token', alias?: string  } 
  | { name: 'refresh_token_not', alias?: string  } 
  | { name: 'refresh_token_in', alias?: string  } 
  | { name: 'refresh_token_not_in', alias?: string  } 
  | { name: 'refresh_token_lt', alias?: string  } 
  | { name: 'refresh_token_lte', alias?: string  } 
  | { name: 'refresh_token_gt', alias?: string  } 
  | { name: 'refresh_token_gte', alias?: string  } 
  | { name: 'refresh_token_contains', alias?: string  } 
  | { name: 'refresh_token_not_contains', alias?: string  } 
  | { name: 'refresh_token_starts_with', alias?: string  } 
  | { name: 'refresh_token_not_starts_with', alias?: string  } 
  | { name: 'refresh_token_ends_with', alias?: string  } 
  | { name: 'refresh_token_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface AddressWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  number?: string | null
  number_not?: string | null
  number_in?: string[]
  number_not_in?: string[]
  number_lt?: string | null
  number_lte?: string | null
  number_gt?: string | null
  number_gte?: string | null
  number_contains?: string | null
  number_not_contains?: string | null
  number_starts_with?: string | null
  number_not_starts_with?: string | null
  number_ends_with?: string | null
  number_not_ends_with?: string | null
  streetName?: string | null
  streetName_not?: string | null
  streetName_in?: string[]
  streetName_not_in?: string[]
  streetName_lt?: string | null
  streetName_lte?: string | null
  streetName_gt?: string | null
  streetName_gte?: string | null
  streetName_contains?: string | null
  streetName_not_contains?: string | null
  streetName_starts_with?: string | null
  streetName_not_starts_with?: string | null
  streetName_ends_with?: string | null
  streetName_not_ends_with?: string | null
  city?: string | null
  city_not?: string | null
  city_in?: string[]
  city_not_in?: string[]
  city_lt?: string | null
  city_lte?: string | null
  city_gt?: string | null
  city_gte?: string | null
  city_contains?: string | null
  city_not_contains?: string | null
  city_starts_with?: string | null
  city_not_starts_with?: string | null
  city_ends_with?: string | null
  city_not_ends_with?: string | null
  postalCode?: string | null
  postalCode_not?: string | null
  postalCode_in?: string[]
  postalCode_not_in?: string[]
  postalCode_lt?: string | null
  postalCode_lte?: string | null
  postalCode_gt?: string | null
  postalCode_gte?: string | null
  postalCode_contains?: string | null
  postalCode_not_contains?: string | null
  postalCode_starts_with?: string | null
  postalCode_not_starts_with?: string | null
  postalCode_ends_with?: string | null
  postalCode_not_ends_with?: string | null
  restaurant?: RestaurantWhereInput | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: AddressWhereInput[]
  OR?: AddressWhereInput[]
  NOT?: AddressWhereInput[]
}
export type AddressWhereInputInputObject =
  | Extract<keyof AddressWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'number', alias?: string  } 
  | { name: 'number_not', alias?: string  } 
  | { name: 'number_in', alias?: string  } 
  | { name: 'number_not_in', alias?: string  } 
  | { name: 'number_lt', alias?: string  } 
  | { name: 'number_lte', alias?: string  } 
  | { name: 'number_gt', alias?: string  } 
  | { name: 'number_gte', alias?: string  } 
  | { name: 'number_contains', alias?: string  } 
  | { name: 'number_not_contains', alias?: string  } 
  | { name: 'number_starts_with', alias?: string  } 
  | { name: 'number_not_starts_with', alias?: string  } 
  | { name: 'number_ends_with', alias?: string  } 
  | { name: 'number_not_ends_with', alias?: string  } 
  | { name: 'streetName', alias?: string  } 
  | { name: 'streetName_not', alias?: string  } 
  | { name: 'streetName_in', alias?: string  } 
  | { name: 'streetName_not_in', alias?: string  } 
  | { name: 'streetName_lt', alias?: string  } 
  | { name: 'streetName_lte', alias?: string  } 
  | { name: 'streetName_gt', alias?: string  } 
  | { name: 'streetName_gte', alias?: string  } 
  | { name: 'streetName_contains', alias?: string  } 
  | { name: 'streetName_not_contains', alias?: string  } 
  | { name: 'streetName_starts_with', alias?: string  } 
  | { name: 'streetName_not_starts_with', alias?: string  } 
  | { name: 'streetName_ends_with', alias?: string  } 
  | { name: 'streetName_not_ends_with', alias?: string  } 
  | { name: 'city', alias?: string  } 
  | { name: 'city_not', alias?: string  } 
  | { name: 'city_in', alias?: string  } 
  | { name: 'city_not_in', alias?: string  } 
  | { name: 'city_lt', alias?: string  } 
  | { name: 'city_lte', alias?: string  } 
  | { name: 'city_gt', alias?: string  } 
  | { name: 'city_gte', alias?: string  } 
  | { name: 'city_contains', alias?: string  } 
  | { name: 'city_not_contains', alias?: string  } 
  | { name: 'city_starts_with', alias?: string  } 
  | { name: 'city_not_starts_with', alias?: string  } 
  | { name: 'city_ends_with', alias?: string  } 
  | { name: 'city_not_ends_with', alias?: string  } 
  | { name: 'postalCode', alias?: string  } 
  | { name: 'postalCode_not', alias?: string  } 
  | { name: 'postalCode_in', alias?: string  } 
  | { name: 'postalCode_not_in', alias?: string  } 
  | { name: 'postalCode_lt', alias?: string  } 
  | { name: 'postalCode_lte', alias?: string  } 
  | { name: 'postalCode_gt', alias?: string  } 
  | { name: 'postalCode_gte', alias?: string  } 
  | { name: 'postalCode_contains', alias?: string  } 
  | { name: 'postalCode_not_contains', alias?: string  } 
  | { name: 'postalCode_starts_with', alias?: string  } 
  | { name: 'postalCode_not_starts_with', alias?: string  } 
  | { name: 'postalCode_ends_with', alias?: string  } 
  | { name: 'postalCode_not_ends_with', alias?: string  } 
  | { name: 'restaurant', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface OpeningTimeWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  restaurant?: RestaurantWhereInput | null
  AND?: OpeningTimeWhereInput[]
  OR?: OpeningTimeWhereInput[]
  NOT?: OpeningTimeWhereInput[]
}
export type OpeningTimeWhereInputInputObject =
  | Extract<keyof OpeningTimeWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'restaurant', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface MenuWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  description?: string | null
  description_not?: string | null
  description_in?: string[]
  description_not_in?: string[]
  description_lt?: string | null
  description_lte?: string | null
  description_gt?: string | null
  description_gte?: string | null
  description_contains?: string | null
  description_not_contains?: string | null
  description_starts_with?: string | null
  description_not_starts_with?: string | null
  description_ends_with?: string | null
  description_not_ends_with?: string | null
  restaurant?: RestaurantWhereInput | null
  serviceTimes_every?: ServiceTimeWhereInput | null
  serviceTimes_some?: ServiceTimeWhereInput | null
  serviceTimes_none?: ServiceTimeWhereInput | null
  categories_every?: MenuCategoryWhereInput | null
  categories_some?: MenuCategoryWhereInput | null
  categories_none?: MenuCategoryWhereInput | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: MenuWhereInput[]
  OR?: MenuWhereInput[]
  NOT?: MenuWhereInput[]
}
export type MenuWhereInputInputObject =
  | Extract<keyof MenuWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'description_not', alias?: string  } 
  | { name: 'description_in', alias?: string  } 
  | { name: 'description_not_in', alias?: string  } 
  | { name: 'description_lt', alias?: string  } 
  | { name: 'description_lte', alias?: string  } 
  | { name: 'description_gt', alias?: string  } 
  | { name: 'description_gte', alias?: string  } 
  | { name: 'description_contains', alias?: string  } 
  | { name: 'description_not_contains', alias?: string  } 
  | { name: 'description_starts_with', alias?: string  } 
  | { name: 'description_not_starts_with', alias?: string  } 
  | { name: 'description_ends_with', alias?: string  } 
  | { name: 'description_not_ends_with', alias?: string  } 
  | { name: 'restaurant', alias?: string  } 
  | { name: 'serviceTimes_every', alias?: string  } 
  | { name: 'serviceTimes_some', alias?: string  } 
  | { name: 'serviceTimes_none', alias?: string  } 
  | { name: 'categories_every', alias?: string  } 
  | { name: 'categories_some', alias?: string  } 
  | { name: 'categories_none', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface ServiceTimeWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  menu?: MenuWhereInput | null
  AND?: ServiceTimeWhereInput[]
  OR?: ServiceTimeWhereInput[]
  NOT?: ServiceTimeWhereInput[]
}
export type ServiceTimeWhereInputInputObject =
  | Extract<keyof ServiceTimeWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'menu', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface MenuCategoryWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  menu?: MenuWhereInput | null
  description?: string | null
  description_not?: string | null
  description_in?: string[]
  description_not_in?: string[]
  description_lt?: string | null
  description_lte?: string | null
  description_gt?: string | null
  description_gte?: string | null
  description_contains?: string | null
  description_not_contains?: string | null
  description_starts_with?: string | null
  description_not_starts_with?: string | null
  description_ends_with?: string | null
  description_not_ends_with?: string | null
  available?: boolean | null
  available_not?: boolean | null
  items_every?: MenuItemWhereInput | null
  items_some?: MenuItemWhereInput | null
  items_none?: MenuItemWhereInput | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: MenuCategoryWhereInput[]
  OR?: MenuCategoryWhereInput[]
  NOT?: MenuCategoryWhereInput[]
}
export type MenuCategoryWhereInputInputObject =
  | Extract<keyof MenuCategoryWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'menu', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'description_not', alias?: string  } 
  | { name: 'description_in', alias?: string  } 
  | { name: 'description_not_in', alias?: string  } 
  | { name: 'description_lt', alias?: string  } 
  | { name: 'description_lte', alias?: string  } 
  | { name: 'description_gt', alias?: string  } 
  | { name: 'description_gte', alias?: string  } 
  | { name: 'description_contains', alias?: string  } 
  | { name: 'description_not_contains', alias?: string  } 
  | { name: 'description_starts_with', alias?: string  } 
  | { name: 'description_not_starts_with', alias?: string  } 
  | { name: 'description_ends_with', alias?: string  } 
  | { name: 'description_not_ends_with', alias?: string  } 
  | { name: 'available', alias?: string  } 
  | { name: 'available_not', alias?: string  } 
  | { name: 'items_every', alias?: string  } 
  | { name: 'items_some', alias?: string  } 
  | { name: 'items_none', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface MenuItemWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  description?: string | null
  description_not?: string | null
  description_in?: string[]
  description_not_in?: string[]
  description_lt?: string | null
  description_lte?: string | null
  description_gt?: string | null
  description_gte?: string | null
  description_contains?: string | null
  description_not_contains?: string | null
  description_starts_with?: string | null
  description_not_starts_with?: string | null
  description_ends_with?: string | null
  description_not_ends_with?: string | null
  price?: string | null
  price_not?: string | null
  price_in?: string[]
  price_not_in?: string[]
  price_lt?: string | null
  price_lte?: string | null
  price_gt?: string | null
  price_gte?: string | null
  price_contains?: string | null
  price_not_contains?: string | null
  price_starts_with?: string | null
  price_not_starts_with?: string | null
  price_ends_with?: string | null
  price_not_ends_with?: string | null
  image?: string | null
  image_not?: string | null
  image_in?: string[]
  image_not_in?: string[]
  image_lt?: string | null
  image_lte?: string | null
  image_gt?: string | null
  image_gte?: string | null
  image_contains?: string | null
  image_not_contains?: string | null
  image_starts_with?: string | null
  image_not_starts_with?: string | null
  image_ends_with?: string | null
  image_not_ends_with?: string | null
  available?: boolean | null
  available_not?: boolean | null
  category?: MenuCategoryWhereInput | null
  options_every?: OptionWhereInput | null
  options_some?: OptionWhereInput | null
  options_none?: OptionWhereInput | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: MenuItemWhereInput[]
  OR?: MenuItemWhereInput[]
  NOT?: MenuItemWhereInput[]
}
export type MenuItemWhereInputInputObject =
  | Extract<keyof MenuItemWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'description_not', alias?: string  } 
  | { name: 'description_in', alias?: string  } 
  | { name: 'description_not_in', alias?: string  } 
  | { name: 'description_lt', alias?: string  } 
  | { name: 'description_lte', alias?: string  } 
  | { name: 'description_gt', alias?: string  } 
  | { name: 'description_gte', alias?: string  } 
  | { name: 'description_contains', alias?: string  } 
  | { name: 'description_not_contains', alias?: string  } 
  | { name: 'description_starts_with', alias?: string  } 
  | { name: 'description_not_starts_with', alias?: string  } 
  | { name: 'description_ends_with', alias?: string  } 
  | { name: 'description_not_ends_with', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'price_not', alias?: string  } 
  | { name: 'price_in', alias?: string  } 
  | { name: 'price_not_in', alias?: string  } 
  | { name: 'price_lt', alias?: string  } 
  | { name: 'price_lte', alias?: string  } 
  | { name: 'price_gt', alias?: string  } 
  | { name: 'price_gte', alias?: string  } 
  | { name: 'price_contains', alias?: string  } 
  | { name: 'price_not_contains', alias?: string  } 
  | { name: 'price_starts_with', alias?: string  } 
  | { name: 'price_not_starts_with', alias?: string  } 
  | { name: 'price_ends_with', alias?: string  } 
  | { name: 'price_not_ends_with', alias?: string  } 
  | { name: 'image', alias?: string  } 
  | { name: 'image_not', alias?: string  } 
  | { name: 'image_in', alias?: string  } 
  | { name: 'image_not_in', alias?: string  } 
  | { name: 'image_lt', alias?: string  } 
  | { name: 'image_lte', alias?: string  } 
  | { name: 'image_gt', alias?: string  } 
  | { name: 'image_gte', alias?: string  } 
  | { name: 'image_contains', alias?: string  } 
  | { name: 'image_not_contains', alias?: string  } 
  | { name: 'image_starts_with', alias?: string  } 
  | { name: 'image_not_starts_with', alias?: string  } 
  | { name: 'image_ends_with', alias?: string  } 
  | { name: 'image_not_ends_with', alias?: string  } 
  | { name: 'available', alias?: string  } 
  | { name: 'available_not', alias?: string  } 
  | { name: 'category', alias?: string  } 
  | { name: 'options_every', alias?: string  } 
  | { name: 'options_some', alias?: string  } 
  | { name: 'options_none', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface OptionWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  min?: string | null
  min_not?: string | null
  min_in?: string[]
  min_not_in?: string[]
  min_lt?: string | null
  min_lte?: string | null
  min_gt?: string | null
  min_gte?: string | null
  min_contains?: string | null
  min_not_contains?: string | null
  min_starts_with?: string | null
  min_not_starts_with?: string | null
  min_ends_with?: string | null
  min_not_ends_with?: string | null
  max?: string | null
  max_not?: string | null
  max_in?: string[]
  max_not_in?: string[]
  max_lt?: string | null
  max_lte?: string | null
  max_gt?: string | null
  max_gte?: string | null
  max_contains?: string | null
  max_not_contains?: string | null
  max_starts_with?: string | null
  max_not_starts_with?: string | null
  max_ends_with?: string | null
  max_not_ends_with?: string | null
  items_every?: OptionItemWhereInput | null
  items_some?: OptionItemWhereInput | null
  items_none?: OptionItemWhereInput | null
  menuItems_every?: MenuItemWhereInput | null
  menuItems_some?: MenuItemWhereInput | null
  menuItems_none?: MenuItemWhereInput | null
  restaurant?: RestaurantWhereInput | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: OptionWhereInput[]
  OR?: OptionWhereInput[]
  NOT?: OptionWhereInput[]
}
export type OptionWhereInputInputObject =
  | Extract<keyof OptionWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'min', alias?: string  } 
  | { name: 'min_not', alias?: string  } 
  | { name: 'min_in', alias?: string  } 
  | { name: 'min_not_in', alias?: string  } 
  | { name: 'min_lt', alias?: string  } 
  | { name: 'min_lte', alias?: string  } 
  | { name: 'min_gt', alias?: string  } 
  | { name: 'min_gte', alias?: string  } 
  | { name: 'min_contains', alias?: string  } 
  | { name: 'min_not_contains', alias?: string  } 
  | { name: 'min_starts_with', alias?: string  } 
  | { name: 'min_not_starts_with', alias?: string  } 
  | { name: 'min_ends_with', alias?: string  } 
  | { name: 'min_not_ends_with', alias?: string  } 
  | { name: 'max', alias?: string  } 
  | { name: 'max_not', alias?: string  } 
  | { name: 'max_in', alias?: string  } 
  | { name: 'max_not_in', alias?: string  } 
  | { name: 'max_lt', alias?: string  } 
  | { name: 'max_lte', alias?: string  } 
  | { name: 'max_gt', alias?: string  } 
  | { name: 'max_gte', alias?: string  } 
  | { name: 'max_contains', alias?: string  } 
  | { name: 'max_not_contains', alias?: string  } 
  | { name: 'max_starts_with', alias?: string  } 
  | { name: 'max_not_starts_with', alias?: string  } 
  | { name: 'max_ends_with', alias?: string  } 
  | { name: 'max_not_ends_with', alias?: string  } 
  | { name: 'items_every', alias?: string  } 
  | { name: 'items_some', alias?: string  } 
  | { name: 'items_none', alias?: string  } 
  | { name: 'menuItems_every', alias?: string  } 
  | { name: 'menuItems_some', alias?: string  } 
  | { name: 'menuItems_none', alias?: string  } 
  | { name: 'restaurant', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface OptionItemWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  price?: string | null
  price_not?: string | null
  price_in?: string[]
  price_not_in?: string[]
  price_lt?: string | null
  price_lte?: string | null
  price_gt?: string | null
  price_gte?: string | null
  price_contains?: string | null
  price_not_contains?: string | null
  price_starts_with?: string | null
  price_not_starts_with?: string | null
  price_ends_with?: string | null
  price_not_ends_with?: string | null
  option?: OptionWhereInput | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: OptionItemWhereInput[]
  OR?: OptionItemWhereInput[]
  NOT?: OptionItemWhereInput[]
}
export type OptionItemWhereInputInputObject =
  | Extract<keyof OptionItemWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'price_not', alias?: string  } 
  | { name: 'price_in', alias?: string  } 
  | { name: 'price_not_in', alias?: string  } 
  | { name: 'price_lt', alias?: string  } 
  | { name: 'price_lte', alias?: string  } 
  | { name: 'price_gt', alias?: string  } 
  | { name: 'price_gte', alias?: string  } 
  | { name: 'price_contains', alias?: string  } 
  | { name: 'price_not_contains', alias?: string  } 
  | { name: 'price_starts_with', alias?: string  } 
  | { name: 'price_not_starts_with', alias?: string  } 
  | { name: 'price_ends_with', alias?: string  } 
  | { name: 'price_not_ends_with', alias?: string  } 
  | { name: 'option', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface CustomerWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  email?: string | null
  email_not?: string | null
  email_in?: string[]
  email_not_in?: string[]
  email_lt?: string | null
  email_lte?: string | null
  email_gt?: string | null
  email_gte?: string | null
  email_contains?: string | null
  email_not_contains?: string | null
  email_starts_with?: string | null
  email_not_starts_with?: string | null
  email_ends_with?: string | null
  email_not_ends_with?: string | null
  password?: string | null
  password_not?: string | null
  password_in?: string[]
  password_not_in?: string[]
  password_lt?: string | null
  password_lte?: string | null
  password_gt?: string | null
  password_gte?: string | null
  password_contains?: string | null
  password_not_contains?: string | null
  password_starts_with?: string | null
  password_not_starts_with?: string | null
  password_ends_with?: string | null
  password_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  tel?: string | null
  tel_not?: string | null
  tel_in?: string[]
  tel_not_in?: string[]
  tel_lt?: string | null
  tel_lte?: string | null
  tel_gt?: string | null
  tel_gte?: string | null
  tel_contains?: string | null
  tel_not_contains?: string | null
  tel_starts_with?: string | null
  tel_not_starts_with?: string | null
  tel_ends_with?: string | null
  tel_not_ends_with?: string | null
  customerStripeId?: string | null
  customerStripeId_not?: string | null
  customerStripeId_in?: string[]
  customerStripeId_not_in?: string[]
  customerStripeId_lt?: string | null
  customerStripeId_lte?: string | null
  customerStripeId_gt?: string | null
  customerStripeId_gte?: string | null
  customerStripeId_contains?: string | null
  customerStripeId_not_contains?: string | null
  customerStripeId_starts_with?: string | null
  customerStripeId_not_starts_with?: string | null
  customerStripeId_ends_with?: string | null
  customerStripeId_not_ends_with?: string | null
  orders_every?: OrderWhereInput | null
  orders_some?: OrderWhereInput | null
  orders_none?: OrderWhereInput | null
  paymentMethod?: PaymentMethodWhereInput | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: CustomerWhereInput[]
  OR?: CustomerWhereInput[]
  NOT?: CustomerWhereInput[]
}
export type CustomerWhereInputInputObject =
  | Extract<keyof CustomerWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'email_not', alias?: string  } 
  | { name: 'email_in', alias?: string  } 
  | { name: 'email_not_in', alias?: string  } 
  | { name: 'email_lt', alias?: string  } 
  | { name: 'email_lte', alias?: string  } 
  | { name: 'email_gt', alias?: string  } 
  | { name: 'email_gte', alias?: string  } 
  | { name: 'email_contains', alias?: string  } 
  | { name: 'email_not_contains', alias?: string  } 
  | { name: 'email_starts_with', alias?: string  } 
  | { name: 'email_not_starts_with', alias?: string  } 
  | { name: 'email_ends_with', alias?: string  } 
  | { name: 'email_not_ends_with', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'password_not', alias?: string  } 
  | { name: 'password_in', alias?: string  } 
  | { name: 'password_not_in', alias?: string  } 
  | { name: 'password_lt', alias?: string  } 
  | { name: 'password_lte', alias?: string  } 
  | { name: 'password_gt', alias?: string  } 
  | { name: 'password_gte', alias?: string  } 
  | { name: 'password_contains', alias?: string  } 
  | { name: 'password_not_contains', alias?: string  } 
  | { name: 'password_starts_with', alias?: string  } 
  | { name: 'password_not_starts_with', alias?: string  } 
  | { name: 'password_ends_with', alias?: string  } 
  | { name: 'password_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'tel', alias?: string  } 
  | { name: 'tel_not', alias?: string  } 
  | { name: 'tel_in', alias?: string  } 
  | { name: 'tel_not_in', alias?: string  } 
  | { name: 'tel_lt', alias?: string  } 
  | { name: 'tel_lte', alias?: string  } 
  | { name: 'tel_gt', alias?: string  } 
  | { name: 'tel_gte', alias?: string  } 
  | { name: 'tel_contains', alias?: string  } 
  | { name: 'tel_not_contains', alias?: string  } 
  | { name: 'tel_starts_with', alias?: string  } 
  | { name: 'tel_not_starts_with', alias?: string  } 
  | { name: 'tel_ends_with', alias?: string  } 
  | { name: 'tel_not_ends_with', alias?: string  } 
  | { name: 'customerStripeId', alias?: string  } 
  | { name: 'customerStripeId_not', alias?: string  } 
  | { name: 'customerStripeId_in', alias?: string  } 
  | { name: 'customerStripeId_not_in', alias?: string  } 
  | { name: 'customerStripeId_lt', alias?: string  } 
  | { name: 'customerStripeId_lte', alias?: string  } 
  | { name: 'customerStripeId_gt', alias?: string  } 
  | { name: 'customerStripeId_gte', alias?: string  } 
  | { name: 'customerStripeId_contains', alias?: string  } 
  | { name: 'customerStripeId_not_contains', alias?: string  } 
  | { name: 'customerStripeId_starts_with', alias?: string  } 
  | { name: 'customerStripeId_not_starts_with', alias?: string  } 
  | { name: 'customerStripeId_ends_with', alias?: string  } 
  | { name: 'customerStripeId_not_ends_with', alias?: string  } 
  | { name: 'orders_every', alias?: string  } 
  | { name: 'orders_some', alias?: string  } 
  | { name: 'orders_none', alias?: string  } 
  | { name: 'paymentMethod', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface PaymentMethodWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  payment_method_id?: string | null
  payment_method_id_not?: string | null
  payment_method_id_in?: string[]
  payment_method_id_not_in?: string[]
  payment_method_id_lt?: string | null
  payment_method_id_lte?: string | null
  payment_method_id_gt?: string | null
  payment_method_id_gte?: string | null
  payment_method_id_contains?: string | null
  payment_method_id_not_contains?: string | null
  payment_method_id_starts_with?: string | null
  payment_method_id_not_starts_with?: string | null
  payment_method_id_ends_with?: string | null
  payment_method_id_not_ends_with?: string | null
  brand?: string | null
  brand_not?: string | null
  brand_in?: string[]
  brand_not_in?: string[]
  brand_lt?: string | null
  brand_lte?: string | null
  brand_gt?: string | null
  brand_gte?: string | null
  brand_contains?: string | null
  brand_not_contains?: string | null
  brand_starts_with?: string | null
  brand_not_starts_with?: string | null
  brand_ends_with?: string | null
  brand_not_ends_with?: string | null
  last4?: string | null
  last4_not?: string | null
  last4_in?: string[]
  last4_not_in?: string[]
  last4_lt?: string | null
  last4_lte?: string | null
  last4_gt?: string | null
  last4_gte?: string | null
  last4_contains?: string | null
  last4_not_contains?: string | null
  last4_starts_with?: string | null
  last4_not_starts_with?: string | null
  last4_ends_with?: string | null
  last4_not_ends_with?: string | null
  customer?: CustomerWhereInput | null
  AND?: PaymentMethodWhereInput[]
  OR?: PaymentMethodWhereInput[]
  NOT?: PaymentMethodWhereInput[]
}
export type PaymentMethodWhereInputInputObject =
  | Extract<keyof PaymentMethodWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'payment_method_id', alias?: string  } 
  | { name: 'payment_method_id_not', alias?: string  } 
  | { name: 'payment_method_id_in', alias?: string  } 
  | { name: 'payment_method_id_not_in', alias?: string  } 
  | { name: 'payment_method_id_lt', alias?: string  } 
  | { name: 'payment_method_id_lte', alias?: string  } 
  | { name: 'payment_method_id_gt', alias?: string  } 
  | { name: 'payment_method_id_gte', alias?: string  } 
  | { name: 'payment_method_id_contains', alias?: string  } 
  | { name: 'payment_method_id_not_contains', alias?: string  } 
  | { name: 'payment_method_id_starts_with', alias?: string  } 
  | { name: 'payment_method_id_not_starts_with', alias?: string  } 
  | { name: 'payment_method_id_ends_with', alias?: string  } 
  | { name: 'payment_method_id_not_ends_with', alias?: string  } 
  | { name: 'brand', alias?: string  } 
  | { name: 'brand_not', alias?: string  } 
  | { name: 'brand_in', alias?: string  } 
  | { name: 'brand_not_in', alias?: string  } 
  | { name: 'brand_lt', alias?: string  } 
  | { name: 'brand_lte', alias?: string  } 
  | { name: 'brand_gt', alias?: string  } 
  | { name: 'brand_gte', alias?: string  } 
  | { name: 'brand_contains', alias?: string  } 
  | { name: 'brand_not_contains', alias?: string  } 
  | { name: 'brand_starts_with', alias?: string  } 
  | { name: 'brand_not_starts_with', alias?: string  } 
  | { name: 'brand_ends_with', alias?: string  } 
  | { name: 'brand_not_ends_with', alias?: string  } 
  | { name: 'last4', alias?: string  } 
  | { name: 'last4_not', alias?: string  } 
  | { name: 'last4_in', alias?: string  } 
  | { name: 'last4_not_in', alias?: string  } 
  | { name: 'last4_lt', alias?: string  } 
  | { name: 'last4_lte', alias?: string  } 
  | { name: 'last4_gt', alias?: string  } 
  | { name: 'last4_gte', alias?: string  } 
  | { name: 'last4_contains', alias?: string  } 
  | { name: 'last4_not_contains', alias?: string  } 
  | { name: 'last4_starts_with', alias?: string  } 
  | { name: 'last4_not_starts_with', alias?: string  } 
  | { name: 'last4_ends_with', alias?: string  } 
  | { name: 'last4_not_ends_with', alias?: string  } 
  | { name: 'customer', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface OrderItemWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  price?: string | null
  price_not?: string | null
  price_in?: string[]
  price_not_in?: string[]
  price_lt?: string | null
  price_lte?: string | null
  price_gt?: string | null
  price_gte?: string | null
  price_contains?: string | null
  price_not_contains?: string | null
  price_starts_with?: string | null
  price_not_starts_with?: string | null
  price_ends_with?: string | null
  price_not_ends_with?: string | null
  image?: string | null
  image_not?: string | null
  image_in?: string[]
  image_not_in?: string[]
  image_lt?: string | null
  image_lte?: string | null
  image_gt?: string | null
  image_gte?: string | null
  image_contains?: string | null
  image_not_contains?: string | null
  image_starts_with?: string | null
  image_not_starts_with?: string | null
  image_ends_with?: string | null
  image_not_ends_with?: string | null
  quantity?: number | null
  quantity_not?: number | null
  quantity_in?: number[]
  quantity_not_in?: number[]
  quantity_lt?: number | null
  quantity_lte?: number | null
  quantity_gt?: number | null
  quantity_gte?: number | null
  options_every?: OrderItemOptionWhereInput | null
  options_some?: OrderItemOptionWhereInput | null
  options_none?: OrderItemOptionWhereInput | null
  order?: OrderWhereInput | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: OrderItemWhereInput[]
  OR?: OrderItemWhereInput[]
  NOT?: OrderItemWhereInput[]
}
export type OrderItemWhereInputInputObject =
  | Extract<keyof OrderItemWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'price_not', alias?: string  } 
  | { name: 'price_in', alias?: string  } 
  | { name: 'price_not_in', alias?: string  } 
  | { name: 'price_lt', alias?: string  } 
  | { name: 'price_lte', alias?: string  } 
  | { name: 'price_gt', alias?: string  } 
  | { name: 'price_gte', alias?: string  } 
  | { name: 'price_contains', alias?: string  } 
  | { name: 'price_not_contains', alias?: string  } 
  | { name: 'price_starts_with', alias?: string  } 
  | { name: 'price_not_starts_with', alias?: string  } 
  | { name: 'price_ends_with', alias?: string  } 
  | { name: 'price_not_ends_with', alias?: string  } 
  | { name: 'image', alias?: string  } 
  | { name: 'image_not', alias?: string  } 
  | { name: 'image_in', alias?: string  } 
  | { name: 'image_not_in', alias?: string  } 
  | { name: 'image_lt', alias?: string  } 
  | { name: 'image_lte', alias?: string  } 
  | { name: 'image_gt', alias?: string  } 
  | { name: 'image_gte', alias?: string  } 
  | { name: 'image_contains', alias?: string  } 
  | { name: 'image_not_contains', alias?: string  } 
  | { name: 'image_starts_with', alias?: string  } 
  | { name: 'image_not_starts_with', alias?: string  } 
  | { name: 'image_ends_with', alias?: string  } 
  | { name: 'image_not_ends_with', alias?: string  } 
  | { name: 'quantity', alias?: string  } 
  | { name: 'quantity_not', alias?: string  } 
  | { name: 'quantity_in', alias?: string  } 
  | { name: 'quantity_not_in', alias?: string  } 
  | { name: 'quantity_lt', alias?: string  } 
  | { name: 'quantity_lte', alias?: string  } 
  | { name: 'quantity_gt', alias?: string  } 
  | { name: 'quantity_gte', alias?: string  } 
  | { name: 'options_every', alias?: string  } 
  | { name: 'options_some', alias?: string  } 
  | { name: 'options_none', alias?: string  } 
  | { name: 'order', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface OrderItemOptionWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  items_every?: OrderItemOptionItemWhereInput | null
  items_some?: OrderItemOptionItemWhereInput | null
  items_none?: OrderItemOptionItemWhereInput | null
  orderItem?: OrderItemWhereInput | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: OrderItemOptionWhereInput[]
  OR?: OrderItemOptionWhereInput[]
  NOT?: OrderItemOptionWhereInput[]
}
export type OrderItemOptionWhereInputInputObject =
  | Extract<keyof OrderItemOptionWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'items_every', alias?: string  } 
  | { name: 'items_some', alias?: string  } 
  | { name: 'items_none', alias?: string  } 
  | { name: 'orderItem', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface OrderItemOptionItemWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  price?: string | null
  price_not?: string | null
  price_in?: string[]
  price_not_in?: string[]
  price_lt?: string | null
  price_lte?: string | null
  price_gt?: string | null
  price_gte?: string | null
  price_contains?: string | null
  price_not_contains?: string | null
  price_starts_with?: string | null
  price_not_starts_with?: string | null
  price_ends_with?: string | null
  price_not_ends_with?: string | null
  option?: OrderItemOptionWhereInput | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: OrderItemOptionItemWhereInput[]
  OR?: OrderItemOptionItemWhereInput[]
  NOT?: OrderItemOptionItemWhereInput[]
}
export type OrderItemOptionItemWhereInputInputObject =
  | Extract<keyof OrderItemOptionItemWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'price_not', alias?: string  } 
  | { name: 'price_in', alias?: string  } 
  | { name: 'price_not_in', alias?: string  } 
  | { name: 'price_lt', alias?: string  } 
  | { name: 'price_lte', alias?: string  } 
  | { name: 'price_gt', alias?: string  } 
  | { name: 'price_gte', alias?: string  } 
  | { name: 'price_contains', alias?: string  } 
  | { name: 'price_not_contains', alias?: string  } 
  | { name: 'price_starts_with', alias?: string  } 
  | { name: 'price_not_starts_with', alias?: string  } 
  | { name: 'price_ends_with', alias?: string  } 
  | { name: 'price_not_ends_with', alias?: string  } 
  | { name: 'option', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface PaymentMethodWhereUniqueInput {
  id?: string | null
  payment_method_id?: string | null
}
export type PaymentMethodWhereUniqueInputInputObject =
  | Extract<keyof PaymentMethodWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'payment_method_id', alias?: string  } 
  
export interface AddressWhereUniqueInput {
  id?: string | null
}
export type AddressWhereUniqueInputInputObject =
  | Extract<keyof AddressWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface RestaurantWhereUniqueInput {
  id?: string | null
  email?: string | null
}
export type RestaurantWhereUniqueInputInputObject =
  | Extract<keyof RestaurantWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'email', alias?: string  } 
  
export interface OpeningTimeWhereUniqueInput {
  id?: string | null
}
export type OpeningTimeWhereUniqueInputInputObject =
  | Extract<keyof OpeningTimeWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface ServiceTimeWhereUniqueInput {
  id?: string | null
}
export type ServiceTimeWhereUniqueInputInputObject =
  | Extract<keyof ServiceTimeWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface MenuWhereUniqueInput {
  id?: string | null
}
export type MenuWhereUniqueInputInputObject =
  | Extract<keyof MenuWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface MenuCategoryWhereUniqueInput {
  id?: string | null
}
export type MenuCategoryWhereUniqueInputInputObject =
  | Extract<keyof MenuCategoryWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface MenuItemWhereUniqueInput {
  id?: string | null
}
export type MenuItemWhereUniqueInputInputObject =
  | Extract<keyof MenuItemWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface OptionItemWhereUniqueInput {
  id?: string | null
}
export type OptionItemWhereUniqueInputInputObject =
  | Extract<keyof OptionItemWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface OptionWhereUniqueInput {
  id?: string | null
}
export type OptionWhereUniqueInputInputObject =
  | Extract<keyof OptionWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface OrderItemOptionItemWhereUniqueInput {
  id?: string | null
}
export type OrderItemOptionItemWhereUniqueInputInputObject =
  | Extract<keyof OrderItemOptionItemWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface OrderItemOptionWhereUniqueInput {
  id?: string | null
}
export type OrderItemOptionWhereUniqueInputInputObject =
  | Extract<keyof OrderItemOptionWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface OrderItemWhereUniqueInput {
  id?: string | null
}
export type OrderItemWhereUniqueInputInputObject =
  | Extract<keyof OrderItemWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface OrderWhereUniqueInput {
  id?: string | null
}
export type OrderWhereUniqueInputInputObject =
  | Extract<keyof OrderWhereUniqueInput, string>
  | { name: 'id', alias?: string  } 
  
export interface CustomerCreateInput {
  id?: string | null
  email?: string
  password?: string
  name?: string
  tel?: string
  customerStripeId?: string | null
  orders?: OrderCreateManyWithoutCustomerInput | null
  paymentMethod?: PaymentMethodCreateOneWithoutCustomerInput | null
}
export type CustomerCreateInputInputObject =
  | Extract<keyof CustomerCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'tel', alias?: string  } 
  | { name: 'customerStripeId', alias?: string  } 
  | { name: 'orders', alias?: string  } 
  | { name: 'paymentMethod', alias?: string  } 
  
export interface OrderCreateManyWithoutCustomerInput {
  create?: OrderCreateWithoutCustomerInput[]
  connect?: OrderWhereUniqueInput[]
}
export type OrderCreateManyWithoutCustomerInputInputObject =
  | Extract<keyof OrderCreateManyWithoutCustomerInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface OrderCreateWithoutCustomerInput {
  id?: string | null
  orderNo?: number
  paymentIntentId?: string | null
  status?: string | null
  dueAt?: string
  delayedBy?: number | null
  restaurant?: RestaurantCreateOneInput
  items?: OrderItemCreateManyWithoutOrderInput | null
  total?: string
  priceAdjustment?: string | null
  cancelReason?: string | null
  priceAdjustmentReason?: string | null
}
export type OrderCreateWithoutCustomerInputInputObject =
  | Extract<keyof OrderCreateWithoutCustomerInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'orderNo', alias?: string  } 
  | { name: 'paymentIntentId', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'dueAt', alias?: string  } 
  | { name: 'delayedBy', alias?: string  } 
  | { name: 'restaurant', alias?: string  } 
  | { name: 'items', alias?: string  } 
  | { name: 'total', alias?: string  } 
  | { name: 'priceAdjustment', alias?: string  } 
  | { name: 'cancelReason', alias?: string  } 
  | { name: 'priceAdjustmentReason', alias?: string  } 
  
export interface RestaurantCreateOneInput {
  create?: RestaurantCreateInput | null
  connect?: RestaurantWhereUniqueInput | null
}
export type RestaurantCreateOneInputInputObject =
  | Extract<keyof RestaurantCreateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface RestaurantCreateInput {
  id?: string | null
  name?: string
  email?: string
  password?: string
  address?: AddressCreateOneWithoutRestaurantInput
  tel?: string
  image?: string | null
  logo?: string | null
  description?: string | null
  status?: string | null
  tags?: RestaurantCreatetagsInput | null
  openingTimes?: OpeningTimeCreateManyWithoutRestaurantInput | null
  averageBusyPreparationTime?: string | null
  averagePreparationTime?: string | null
  menus?: MenuCreateManyWithoutRestaurantInput | null
  isConnected?: boolean | null
  stripe_user_id?: string | null
  stripe_publishable_key?: string | null
  access_token?: string | null
  refresh_token?: string | null
}
export type RestaurantCreateInputInputObject =
  | Extract<keyof RestaurantCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'address', alias?: string  } 
  | { name: 'tel', alias?: string  } 
  | { name: 'image', alias?: string  } 
  | { name: 'logo', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'tags', alias?: string  } 
  | { name: 'openingTimes', alias?: string  } 
  | { name: 'averageBusyPreparationTime', alias?: string  } 
  | { name: 'averagePreparationTime', alias?: string  } 
  | { name: 'menus', alias?: string  } 
  | { name: 'isConnected', alias?: string  } 
  | { name: 'stripe_user_id', alias?: string  } 
  | { name: 'stripe_publishable_key', alias?: string  } 
  | { name: 'access_token', alias?: string  } 
  | { name: 'refresh_token', alias?: string  } 
  
export interface AddressCreateOneWithoutRestaurantInput {
  create?: AddressCreateWithoutRestaurantInput | null
  connect?: AddressWhereUniqueInput | null
}
export type AddressCreateOneWithoutRestaurantInputInputObject =
  | Extract<keyof AddressCreateOneWithoutRestaurantInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface AddressCreateWithoutRestaurantInput {
  id?: string | null
  number?: string
  streetName?: string
  city?: string
  postalCode?: string
}
export type AddressCreateWithoutRestaurantInputInputObject =
  | Extract<keyof AddressCreateWithoutRestaurantInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'number', alias?: string  } 
  | { name: 'streetName', alias?: string  } 
  | { name: 'city', alias?: string  } 
  | { name: 'postalCode', alias?: string  } 
  
export interface RestaurantCreatetagsInput {
  set?: string[]
}
export type RestaurantCreatetagsInputInputObject =
  | Extract<keyof RestaurantCreatetagsInput, string>
  | { name: 'set', alias?: string  } 
  
export interface OpeningTimeCreateManyWithoutRestaurantInput {
  create?: OpeningTimeCreateWithoutRestaurantInput[]
  connect?: OpeningTimeWhereUniqueInput[]
}
export type OpeningTimeCreateManyWithoutRestaurantInputInputObject =
  | Extract<keyof OpeningTimeCreateManyWithoutRestaurantInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface OpeningTimeCreateWithoutRestaurantInput {
  id?: string | null
  hours?: OpeningTimeCreatehoursInput | null
  days?: OpeningTimeCreatedaysInput | null
}
export type OpeningTimeCreateWithoutRestaurantInputInputObject =
  | Extract<keyof OpeningTimeCreateWithoutRestaurantInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'hours', alias?: string  } 
  | { name: 'days', alias?: string  } 
  
export interface OpeningTimeCreatehoursInput {
  set?: string[]
}
export type OpeningTimeCreatehoursInputInputObject =
  | Extract<keyof OpeningTimeCreatehoursInput, string>
  | { name: 'set', alias?: string  } 
  
export interface OpeningTimeCreatedaysInput {
  set?: string[]
}
export type OpeningTimeCreatedaysInputInputObject =
  | Extract<keyof OpeningTimeCreatedaysInput, string>
  | { name: 'set', alias?: string  } 
  
export interface MenuCreateManyWithoutRestaurantInput {
  create?: MenuCreateWithoutRestaurantInput[]
  connect?: MenuWhereUniqueInput[]
}
export type MenuCreateManyWithoutRestaurantInputInputObject =
  | Extract<keyof MenuCreateManyWithoutRestaurantInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface MenuCreateWithoutRestaurantInput {
  id?: string | null
  name?: string
  description?: string | null
  serviceTimes?: ServiceTimeCreateManyWithoutMenuInput | null
  categories?: MenuCategoryCreateManyWithoutMenuInput | null
}
export type MenuCreateWithoutRestaurantInputInputObject =
  | Extract<keyof MenuCreateWithoutRestaurantInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'serviceTimes', alias?: string  } 
  | { name: 'categories', alias?: string  } 
  
export interface ServiceTimeCreateManyWithoutMenuInput {
  create?: ServiceTimeCreateWithoutMenuInput[]
  connect?: ServiceTimeWhereUniqueInput[]
}
export type ServiceTimeCreateManyWithoutMenuInputInputObject =
  | Extract<keyof ServiceTimeCreateManyWithoutMenuInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface ServiceTimeCreateWithoutMenuInput {
  id?: string | null
  hours?: ServiceTimeCreatehoursInput | null
  days?: ServiceTimeCreatedaysInput | null
}
export type ServiceTimeCreateWithoutMenuInputInputObject =
  | Extract<keyof ServiceTimeCreateWithoutMenuInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'hours', alias?: string  } 
  | { name: 'days', alias?: string  } 
  
export interface ServiceTimeCreatehoursInput {
  set?: string[]
}
export type ServiceTimeCreatehoursInputInputObject =
  | Extract<keyof ServiceTimeCreatehoursInput, string>
  | { name: 'set', alias?: string  } 
  
export interface ServiceTimeCreatedaysInput {
  set?: string[]
}
export type ServiceTimeCreatedaysInputInputObject =
  | Extract<keyof ServiceTimeCreatedaysInput, string>
  | { name: 'set', alias?: string  } 
  
export interface MenuCategoryCreateManyWithoutMenuInput {
  create?: MenuCategoryCreateWithoutMenuInput[]
  connect?: MenuCategoryWhereUniqueInput[]
}
export type MenuCategoryCreateManyWithoutMenuInputInputObject =
  | Extract<keyof MenuCategoryCreateManyWithoutMenuInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface MenuCategoryCreateWithoutMenuInput {
  id?: string | null
  name?: string
  description?: string | null
  available?: boolean | null
  items?: MenuItemCreateManyWithoutCategoryInput | null
}
export type MenuCategoryCreateWithoutMenuInputInputObject =
  | Extract<keyof MenuCategoryCreateWithoutMenuInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'available', alias?: string  } 
  | { name: 'items', alias?: string  } 
  
export interface MenuItemCreateManyWithoutCategoryInput {
  create?: MenuItemCreateWithoutCategoryInput[]
  connect?: MenuItemWhereUniqueInput[]
}
export type MenuItemCreateManyWithoutCategoryInputInputObject =
  | Extract<keyof MenuItemCreateManyWithoutCategoryInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface MenuItemCreateWithoutCategoryInput {
  id?: string | null
  name?: string | null
  description?: string | null
  price?: string | null
  image?: string | null
  available?: boolean | null
  dietary?: MenuItemCreatedietaryInput | null
  options?: OptionCreateManyWithoutMenuItemsInput | null
}
export type MenuItemCreateWithoutCategoryInputInputObject =
  | Extract<keyof MenuItemCreateWithoutCategoryInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'image', alias?: string  } 
  | { name: 'available', alias?: string  } 
  | { name: 'dietary', alias?: string  } 
  | { name: 'options', alias?: string  } 
  
export interface MenuItemCreatedietaryInput {
  set?: string[]
}
export type MenuItemCreatedietaryInputInputObject =
  | Extract<keyof MenuItemCreatedietaryInput, string>
  | { name: 'set', alias?: string  } 
  
export interface OptionCreateManyWithoutMenuItemsInput {
  create?: OptionCreateWithoutMenuItemsInput[]
  connect?: OptionWhereUniqueInput[]
}
export type OptionCreateManyWithoutMenuItemsInputInputObject =
  | Extract<keyof OptionCreateManyWithoutMenuItemsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface OptionCreateWithoutMenuItemsInput {
  id?: string | null
  name?: string
  min?: string
  max?: string
  items?: OptionItemCreateManyWithoutOptionInput | null
  restaurant?: RestaurantCreateOneInput | null
}
export type OptionCreateWithoutMenuItemsInputInputObject =
  | Extract<keyof OptionCreateWithoutMenuItemsInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'min', alias?: string  } 
  | { name: 'max', alias?: string  } 
  | { name: 'items', alias?: string  } 
  | { name: 'restaurant', alias?: string  } 
  
export interface OptionItemCreateManyWithoutOptionInput {
  create?: OptionItemCreateWithoutOptionInput[]
  connect?: OptionItemWhereUniqueInput[]
}
export type OptionItemCreateManyWithoutOptionInputInputObject =
  | Extract<keyof OptionItemCreateManyWithoutOptionInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface OptionItemCreateWithoutOptionInput {
  id?: string | null
  name?: string
  price?: string
}
export type OptionItemCreateWithoutOptionInputInputObject =
  | Extract<keyof OptionItemCreateWithoutOptionInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'price', alias?: string  } 
  
export interface OrderItemCreateManyWithoutOrderInput {
  create?: OrderItemCreateWithoutOrderInput[]
  connect?: OrderItemWhereUniqueInput[]
}
export type OrderItemCreateManyWithoutOrderInputInputObject =
  | Extract<keyof OrderItemCreateManyWithoutOrderInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface OrderItemCreateWithoutOrderInput {
  id?: string | null
  name?: string
  price?: string | null
  image?: string | null
  quantity?: number | null
  options?: OrderItemOptionCreateManyWithoutOrderItemInput | null
}
export type OrderItemCreateWithoutOrderInputInputObject =
  | Extract<keyof OrderItemCreateWithoutOrderInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'image', alias?: string  } 
  | { name: 'quantity', alias?: string  } 
  | { name: 'options', alias?: string  } 
  
export interface OrderItemOptionCreateManyWithoutOrderItemInput {
  create?: OrderItemOptionCreateWithoutOrderItemInput[]
  connect?: OrderItemOptionWhereUniqueInput[]
}
export type OrderItemOptionCreateManyWithoutOrderItemInputInputObject =
  | Extract<keyof OrderItemOptionCreateManyWithoutOrderItemInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface OrderItemOptionCreateWithoutOrderItemInput {
  id?: string | null
  name?: string
  items?: OrderItemOptionItemCreateManyWithoutOptionInput | null
}
export type OrderItemOptionCreateWithoutOrderItemInputInputObject =
  | Extract<keyof OrderItemOptionCreateWithoutOrderItemInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'items', alias?: string  } 
  
export interface OrderItemOptionItemCreateManyWithoutOptionInput {
  create?: OrderItemOptionItemCreateWithoutOptionInput[]
  connect?: OrderItemOptionItemWhereUniqueInput[]
}
export type OrderItemOptionItemCreateManyWithoutOptionInputInputObject =
  | Extract<keyof OrderItemOptionItemCreateManyWithoutOptionInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface OrderItemOptionItemCreateWithoutOptionInput {
  id?: string | null
  name?: string
  price?: string
}
export type OrderItemOptionItemCreateWithoutOptionInputInputObject =
  | Extract<keyof OrderItemOptionItemCreateWithoutOptionInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'price', alias?: string  } 
  
export interface PaymentMethodCreateOneWithoutCustomerInput {
  create?: PaymentMethodCreateWithoutCustomerInput | null
  connect?: PaymentMethodWhereUniqueInput | null
}
export type PaymentMethodCreateOneWithoutCustomerInputInputObject =
  | Extract<keyof PaymentMethodCreateOneWithoutCustomerInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface PaymentMethodCreateWithoutCustomerInput {
  id?: string | null
  payment_method_id?: string
  brand?: string
  last4?: string
}
export type PaymentMethodCreateWithoutCustomerInputInputObject =
  | Extract<keyof PaymentMethodCreateWithoutCustomerInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'payment_method_id', alias?: string  } 
  | { name: 'brand', alias?: string  } 
  | { name: 'last4', alias?: string  } 
  
export interface CustomerUpdateInput {
  email?: string | null
  password?: string | null
  name?: string | null
  tel?: string | null
  customerStripeId?: string | null
  orders?: OrderUpdateManyWithoutCustomerInput | null
  paymentMethod?: PaymentMethodUpdateOneWithoutCustomerInput | null
}
export type CustomerUpdateInputInputObject =
  | Extract<keyof CustomerUpdateInput, string>
  | { name: 'email', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'tel', alias?: string  } 
  | { name: 'customerStripeId', alias?: string  } 
  | { name: 'orders', alias?: string  } 
  | { name: 'paymentMethod', alias?: string  } 
  
export interface OrderUpdateManyWithoutCustomerInput {
  create?: OrderCreateWithoutCustomerInput[]
  delete?: OrderWhereUniqueInput[]
  connect?: OrderWhereUniqueInput[]
  set?: OrderWhereUniqueInput[]
  disconnect?: OrderWhereUniqueInput[]
  update?: OrderUpdateWithWhereUniqueWithoutCustomerInput[]
  upsert?: OrderUpsertWithWhereUniqueWithoutCustomerInput[]
  deleteMany?: OrderScalarWhereInput[]
  updateMany?: OrderUpdateManyWithWhereNestedInput[]
}
export type OrderUpdateManyWithoutCustomerInputInputObject =
  | Extract<keyof OrderUpdateManyWithoutCustomerInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface OrderUpdateWithWhereUniqueWithoutCustomerInput {
  where?: OrderWhereUniqueInput
  data?: OrderUpdateWithoutCustomerDataInput
}
export type OrderUpdateWithWhereUniqueWithoutCustomerInputInputObject =
  | Extract<keyof OrderUpdateWithWhereUniqueWithoutCustomerInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface OrderUpdateWithoutCustomerDataInput {
  orderNo?: number | null
  paymentIntentId?: string | null
  status?: string | null
  dueAt?: string | null
  delayedBy?: number | null
  restaurant?: RestaurantUpdateOneRequiredInput | null
  items?: OrderItemUpdateManyWithoutOrderInput | null
  total?: string | null
  priceAdjustment?: string | null
  cancelReason?: string | null
  priceAdjustmentReason?: string | null
}
export type OrderUpdateWithoutCustomerDataInputInputObject =
  | Extract<keyof OrderUpdateWithoutCustomerDataInput, string>
  | { name: 'orderNo', alias?: string  } 
  | { name: 'paymentIntentId', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'dueAt', alias?: string  } 
  | { name: 'delayedBy', alias?: string  } 
  | { name: 'restaurant', alias?: string  } 
  | { name: 'items', alias?: string  } 
  | { name: 'total', alias?: string  } 
  | { name: 'priceAdjustment', alias?: string  } 
  | { name: 'cancelReason', alias?: string  } 
  | { name: 'priceAdjustmentReason', alias?: string  } 
  
export interface RestaurantUpdateOneRequiredInput {
  create?: RestaurantCreateInput | null
  update?: RestaurantUpdateDataInput | null
  upsert?: RestaurantUpsertNestedInput | null
  connect?: RestaurantWhereUniqueInput | null
}
export type RestaurantUpdateOneRequiredInputInputObject =
  | Extract<keyof RestaurantUpdateOneRequiredInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface RestaurantUpdateDataInput {
  name?: string | null
  email?: string | null
  password?: string | null
  address?: AddressUpdateOneRequiredWithoutRestaurantInput | null
  tel?: string | null
  image?: string | null
  logo?: string | null
  description?: string | null
  status?: string | null
  tags?: RestaurantUpdatetagsInput | null
  openingTimes?: OpeningTimeUpdateManyWithoutRestaurantInput | null
  averageBusyPreparationTime?: string | null
  averagePreparationTime?: string | null
  menus?: MenuUpdateManyWithoutRestaurantInput | null
  isConnected?: boolean | null
  stripe_user_id?: string | null
  stripe_publishable_key?: string | null
  access_token?: string | null
  refresh_token?: string | null
}
export type RestaurantUpdateDataInputInputObject =
  | Extract<keyof RestaurantUpdateDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'address', alias?: string  } 
  | { name: 'tel', alias?: string  } 
  | { name: 'image', alias?: string  } 
  | { name: 'logo', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'tags', alias?: string  } 
  | { name: 'openingTimes', alias?: string  } 
  | { name: 'averageBusyPreparationTime', alias?: string  } 
  | { name: 'averagePreparationTime', alias?: string  } 
  | { name: 'menus', alias?: string  } 
  | { name: 'isConnected', alias?: string  } 
  | { name: 'stripe_user_id', alias?: string  } 
  | { name: 'stripe_publishable_key', alias?: string  } 
  | { name: 'access_token', alias?: string  } 
  | { name: 'refresh_token', alias?: string  } 
  
export interface AddressUpdateOneRequiredWithoutRestaurantInput {
  create?: AddressCreateWithoutRestaurantInput | null
  update?: AddressUpdateWithoutRestaurantDataInput | null
  upsert?: AddressUpsertWithoutRestaurantInput | null
  connect?: AddressWhereUniqueInput | null
}
export type AddressUpdateOneRequiredWithoutRestaurantInputInputObject =
  | Extract<keyof AddressUpdateOneRequiredWithoutRestaurantInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface AddressUpdateWithoutRestaurantDataInput {
  number?: string | null
  streetName?: string | null
  city?: string | null
  postalCode?: string | null
}
export type AddressUpdateWithoutRestaurantDataInputInputObject =
  | Extract<keyof AddressUpdateWithoutRestaurantDataInput, string>
  | { name: 'number', alias?: string  } 
  | { name: 'streetName', alias?: string  } 
  | { name: 'city', alias?: string  } 
  | { name: 'postalCode', alias?: string  } 
  
export interface AddressUpsertWithoutRestaurantInput {
  update?: AddressUpdateWithoutRestaurantDataInput
  create?: AddressCreateWithoutRestaurantInput
}
export type AddressUpsertWithoutRestaurantInputInputObject =
  | Extract<keyof AddressUpsertWithoutRestaurantInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface RestaurantUpdatetagsInput {
  set?: string[]
}
export type RestaurantUpdatetagsInputInputObject =
  | Extract<keyof RestaurantUpdatetagsInput, string>
  | { name: 'set', alias?: string  } 
  
export interface OpeningTimeUpdateManyWithoutRestaurantInput {
  create?: OpeningTimeCreateWithoutRestaurantInput[]
  delete?: OpeningTimeWhereUniqueInput[]
  connect?: OpeningTimeWhereUniqueInput[]
  set?: OpeningTimeWhereUniqueInput[]
  disconnect?: OpeningTimeWhereUniqueInput[]
  update?: OpeningTimeUpdateWithWhereUniqueWithoutRestaurantInput[]
  upsert?: OpeningTimeUpsertWithWhereUniqueWithoutRestaurantInput[]
  deleteMany?: OpeningTimeScalarWhereInput[]
  updateMany?: OpeningTimeUpdateManyWithWhereNestedInput[]
}
export type OpeningTimeUpdateManyWithoutRestaurantInputInputObject =
  | Extract<keyof OpeningTimeUpdateManyWithoutRestaurantInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface OpeningTimeUpdateWithWhereUniqueWithoutRestaurantInput {
  where?: OpeningTimeWhereUniqueInput
  data?: OpeningTimeUpdateWithoutRestaurantDataInput
}
export type OpeningTimeUpdateWithWhereUniqueWithoutRestaurantInputInputObject =
  | Extract<keyof OpeningTimeUpdateWithWhereUniqueWithoutRestaurantInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface OpeningTimeUpdateWithoutRestaurantDataInput {
  hours?: OpeningTimeUpdatehoursInput | null
  days?: OpeningTimeUpdatedaysInput | null
}
export type OpeningTimeUpdateWithoutRestaurantDataInputInputObject =
  | Extract<keyof OpeningTimeUpdateWithoutRestaurantDataInput, string>
  | { name: 'hours', alias?: string  } 
  | { name: 'days', alias?: string  } 
  
export interface OpeningTimeUpdatehoursInput {
  set?: string[]
}
export type OpeningTimeUpdatehoursInputInputObject =
  | Extract<keyof OpeningTimeUpdatehoursInput, string>
  | { name: 'set', alias?: string  } 
  
export interface OpeningTimeUpdatedaysInput {
  set?: string[]
}
export type OpeningTimeUpdatedaysInputInputObject =
  | Extract<keyof OpeningTimeUpdatedaysInput, string>
  | { name: 'set', alias?: string  } 
  
export interface OpeningTimeUpsertWithWhereUniqueWithoutRestaurantInput {
  where?: OpeningTimeWhereUniqueInput
  update?: OpeningTimeUpdateWithoutRestaurantDataInput
  create?: OpeningTimeCreateWithoutRestaurantInput
}
export type OpeningTimeUpsertWithWhereUniqueWithoutRestaurantInputInputObject =
  | Extract<keyof OpeningTimeUpsertWithWhereUniqueWithoutRestaurantInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface OpeningTimeScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  AND?: OpeningTimeScalarWhereInput[]
  OR?: OpeningTimeScalarWhereInput[]
  NOT?: OpeningTimeScalarWhereInput[]
}
export type OpeningTimeScalarWhereInputInputObject =
  | Extract<keyof OpeningTimeScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface OpeningTimeUpdateManyWithWhereNestedInput {
  where?: OpeningTimeScalarWhereInput
  data?: OpeningTimeUpdateManyDataInput
}
export type OpeningTimeUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof OpeningTimeUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface OpeningTimeUpdateManyDataInput {
  hours?: OpeningTimeUpdatehoursInput | null
  days?: OpeningTimeUpdatedaysInput | null
}
export type OpeningTimeUpdateManyDataInputInputObject =
  | Extract<keyof OpeningTimeUpdateManyDataInput, string>
  | { name: 'hours', alias?: string  } 
  | { name: 'days', alias?: string  } 
  
export interface MenuUpdateManyWithoutRestaurantInput {
  create?: MenuCreateWithoutRestaurantInput[]
  delete?: MenuWhereUniqueInput[]
  connect?: MenuWhereUniqueInput[]
  set?: MenuWhereUniqueInput[]
  disconnect?: MenuWhereUniqueInput[]
  update?: MenuUpdateWithWhereUniqueWithoutRestaurantInput[]
  upsert?: MenuUpsertWithWhereUniqueWithoutRestaurantInput[]
  deleteMany?: MenuScalarWhereInput[]
  updateMany?: MenuUpdateManyWithWhereNestedInput[]
}
export type MenuUpdateManyWithoutRestaurantInputInputObject =
  | Extract<keyof MenuUpdateManyWithoutRestaurantInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface MenuUpdateWithWhereUniqueWithoutRestaurantInput {
  where?: MenuWhereUniqueInput
  data?: MenuUpdateWithoutRestaurantDataInput
}
export type MenuUpdateWithWhereUniqueWithoutRestaurantInputInputObject =
  | Extract<keyof MenuUpdateWithWhereUniqueWithoutRestaurantInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface MenuUpdateWithoutRestaurantDataInput {
  name?: string | null
  description?: string | null
  serviceTimes?: ServiceTimeUpdateManyWithoutMenuInput | null
  categories?: MenuCategoryUpdateManyWithoutMenuInput | null
}
export type MenuUpdateWithoutRestaurantDataInputInputObject =
  | Extract<keyof MenuUpdateWithoutRestaurantDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'serviceTimes', alias?: string  } 
  | { name: 'categories', alias?: string  } 
  
export interface ServiceTimeUpdateManyWithoutMenuInput {
  create?: ServiceTimeCreateWithoutMenuInput[]
  delete?: ServiceTimeWhereUniqueInput[]
  connect?: ServiceTimeWhereUniqueInput[]
  set?: ServiceTimeWhereUniqueInput[]
  disconnect?: ServiceTimeWhereUniqueInput[]
  update?: ServiceTimeUpdateWithWhereUniqueWithoutMenuInput[]
  upsert?: ServiceTimeUpsertWithWhereUniqueWithoutMenuInput[]
  deleteMany?: ServiceTimeScalarWhereInput[]
  updateMany?: ServiceTimeUpdateManyWithWhereNestedInput[]
}
export type ServiceTimeUpdateManyWithoutMenuInputInputObject =
  | Extract<keyof ServiceTimeUpdateManyWithoutMenuInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface ServiceTimeUpdateWithWhereUniqueWithoutMenuInput {
  where?: ServiceTimeWhereUniqueInput
  data?: ServiceTimeUpdateWithoutMenuDataInput
}
export type ServiceTimeUpdateWithWhereUniqueWithoutMenuInputInputObject =
  | Extract<keyof ServiceTimeUpdateWithWhereUniqueWithoutMenuInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface ServiceTimeUpdateWithoutMenuDataInput {
  hours?: ServiceTimeUpdatehoursInput | null
  days?: ServiceTimeUpdatedaysInput | null
}
export type ServiceTimeUpdateWithoutMenuDataInputInputObject =
  | Extract<keyof ServiceTimeUpdateWithoutMenuDataInput, string>
  | { name: 'hours', alias?: string  } 
  | { name: 'days', alias?: string  } 
  
export interface ServiceTimeUpdatehoursInput {
  set?: string[]
}
export type ServiceTimeUpdatehoursInputInputObject =
  | Extract<keyof ServiceTimeUpdatehoursInput, string>
  | { name: 'set', alias?: string  } 
  
export interface ServiceTimeUpdatedaysInput {
  set?: string[]
}
export type ServiceTimeUpdatedaysInputInputObject =
  | Extract<keyof ServiceTimeUpdatedaysInput, string>
  | { name: 'set', alias?: string  } 
  
export interface ServiceTimeUpsertWithWhereUniqueWithoutMenuInput {
  where?: ServiceTimeWhereUniqueInput
  update?: ServiceTimeUpdateWithoutMenuDataInput
  create?: ServiceTimeCreateWithoutMenuInput
}
export type ServiceTimeUpsertWithWhereUniqueWithoutMenuInputInputObject =
  | Extract<keyof ServiceTimeUpsertWithWhereUniqueWithoutMenuInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface ServiceTimeScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  AND?: ServiceTimeScalarWhereInput[]
  OR?: ServiceTimeScalarWhereInput[]
  NOT?: ServiceTimeScalarWhereInput[]
}
export type ServiceTimeScalarWhereInputInputObject =
  | Extract<keyof ServiceTimeScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface ServiceTimeUpdateManyWithWhereNestedInput {
  where?: ServiceTimeScalarWhereInput
  data?: ServiceTimeUpdateManyDataInput
}
export type ServiceTimeUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof ServiceTimeUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface ServiceTimeUpdateManyDataInput {
  hours?: ServiceTimeUpdatehoursInput | null
  days?: ServiceTimeUpdatedaysInput | null
}
export type ServiceTimeUpdateManyDataInputInputObject =
  | Extract<keyof ServiceTimeUpdateManyDataInput, string>
  | { name: 'hours', alias?: string  } 
  | { name: 'days', alias?: string  } 
  
export interface MenuCategoryUpdateManyWithoutMenuInput {
  create?: MenuCategoryCreateWithoutMenuInput[]
  delete?: MenuCategoryWhereUniqueInput[]
  connect?: MenuCategoryWhereUniqueInput[]
  set?: MenuCategoryWhereUniqueInput[]
  disconnect?: MenuCategoryWhereUniqueInput[]
  update?: MenuCategoryUpdateWithWhereUniqueWithoutMenuInput[]
  upsert?: MenuCategoryUpsertWithWhereUniqueWithoutMenuInput[]
  deleteMany?: MenuCategoryScalarWhereInput[]
  updateMany?: MenuCategoryUpdateManyWithWhereNestedInput[]
}
export type MenuCategoryUpdateManyWithoutMenuInputInputObject =
  | Extract<keyof MenuCategoryUpdateManyWithoutMenuInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface MenuCategoryUpdateWithWhereUniqueWithoutMenuInput {
  where?: MenuCategoryWhereUniqueInput
  data?: MenuCategoryUpdateWithoutMenuDataInput
}
export type MenuCategoryUpdateWithWhereUniqueWithoutMenuInputInputObject =
  | Extract<keyof MenuCategoryUpdateWithWhereUniqueWithoutMenuInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface MenuCategoryUpdateWithoutMenuDataInput {
  name?: string | null
  description?: string | null
  available?: boolean | null
  items?: MenuItemUpdateManyWithoutCategoryInput | null
}
export type MenuCategoryUpdateWithoutMenuDataInputInputObject =
  | Extract<keyof MenuCategoryUpdateWithoutMenuDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'available', alias?: string  } 
  | { name: 'items', alias?: string  } 
  
export interface MenuItemUpdateManyWithoutCategoryInput {
  create?: MenuItemCreateWithoutCategoryInput[]
  delete?: MenuItemWhereUniqueInput[]
  connect?: MenuItemWhereUniqueInput[]
  set?: MenuItemWhereUniqueInput[]
  disconnect?: MenuItemWhereUniqueInput[]
  update?: MenuItemUpdateWithWhereUniqueWithoutCategoryInput[]
  upsert?: MenuItemUpsertWithWhereUniqueWithoutCategoryInput[]
  deleteMany?: MenuItemScalarWhereInput[]
  updateMany?: MenuItemUpdateManyWithWhereNestedInput[]
}
export type MenuItemUpdateManyWithoutCategoryInputInputObject =
  | Extract<keyof MenuItemUpdateManyWithoutCategoryInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface MenuItemUpdateWithWhereUniqueWithoutCategoryInput {
  where?: MenuItemWhereUniqueInput
  data?: MenuItemUpdateWithoutCategoryDataInput
}
export type MenuItemUpdateWithWhereUniqueWithoutCategoryInputInputObject =
  | Extract<keyof MenuItemUpdateWithWhereUniqueWithoutCategoryInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface MenuItemUpdateWithoutCategoryDataInput {
  name?: string | null
  description?: string | null
  price?: string | null
  image?: string | null
  available?: boolean | null
  dietary?: MenuItemUpdatedietaryInput | null
  options?: OptionUpdateManyWithoutMenuItemsInput | null
}
export type MenuItemUpdateWithoutCategoryDataInputInputObject =
  | Extract<keyof MenuItemUpdateWithoutCategoryDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'image', alias?: string  } 
  | { name: 'available', alias?: string  } 
  | { name: 'dietary', alias?: string  } 
  | { name: 'options', alias?: string  } 
  
export interface MenuItemUpdatedietaryInput {
  set?: string[]
}
export type MenuItemUpdatedietaryInputInputObject =
  | Extract<keyof MenuItemUpdatedietaryInput, string>
  | { name: 'set', alias?: string  } 
  
export interface OptionUpdateManyWithoutMenuItemsInput {
  create?: OptionCreateWithoutMenuItemsInput[]
  delete?: OptionWhereUniqueInput[]
  connect?: OptionWhereUniqueInput[]
  set?: OptionWhereUniqueInput[]
  disconnect?: OptionWhereUniqueInput[]
  update?: OptionUpdateWithWhereUniqueWithoutMenuItemsInput[]
  upsert?: OptionUpsertWithWhereUniqueWithoutMenuItemsInput[]
  deleteMany?: OptionScalarWhereInput[]
  updateMany?: OptionUpdateManyWithWhereNestedInput[]
}
export type OptionUpdateManyWithoutMenuItemsInputInputObject =
  | Extract<keyof OptionUpdateManyWithoutMenuItemsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface OptionUpdateWithWhereUniqueWithoutMenuItemsInput {
  where?: OptionWhereUniqueInput
  data?: OptionUpdateWithoutMenuItemsDataInput
}
export type OptionUpdateWithWhereUniqueWithoutMenuItemsInputInputObject =
  | Extract<keyof OptionUpdateWithWhereUniqueWithoutMenuItemsInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface OptionUpdateWithoutMenuItemsDataInput {
  name?: string | null
  min?: string | null
  max?: string | null
  items?: OptionItemUpdateManyWithoutOptionInput | null
  restaurant?: RestaurantUpdateOneInput | null
}
export type OptionUpdateWithoutMenuItemsDataInputInputObject =
  | Extract<keyof OptionUpdateWithoutMenuItemsDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'min', alias?: string  } 
  | { name: 'max', alias?: string  } 
  | { name: 'items', alias?: string  } 
  | { name: 'restaurant', alias?: string  } 
  
export interface OptionItemUpdateManyWithoutOptionInput {
  create?: OptionItemCreateWithoutOptionInput[]
  delete?: OptionItemWhereUniqueInput[]
  connect?: OptionItemWhereUniqueInput[]
  set?: OptionItemWhereUniqueInput[]
  disconnect?: OptionItemWhereUniqueInput[]
  update?: OptionItemUpdateWithWhereUniqueWithoutOptionInput[]
  upsert?: OptionItemUpsertWithWhereUniqueWithoutOptionInput[]
  deleteMany?: OptionItemScalarWhereInput[]
  updateMany?: OptionItemUpdateManyWithWhereNestedInput[]
}
export type OptionItemUpdateManyWithoutOptionInputInputObject =
  | Extract<keyof OptionItemUpdateManyWithoutOptionInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface OptionItemUpdateWithWhereUniqueWithoutOptionInput {
  where?: OptionItemWhereUniqueInput
  data?: OptionItemUpdateWithoutOptionDataInput
}
export type OptionItemUpdateWithWhereUniqueWithoutOptionInputInputObject =
  | Extract<keyof OptionItemUpdateWithWhereUniqueWithoutOptionInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface OptionItemUpdateWithoutOptionDataInput {
  name?: string | null
  price?: string | null
}
export type OptionItemUpdateWithoutOptionDataInputInputObject =
  | Extract<keyof OptionItemUpdateWithoutOptionDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'price', alias?: string  } 
  
export interface OptionItemUpsertWithWhereUniqueWithoutOptionInput {
  where?: OptionItemWhereUniqueInput
  update?: OptionItemUpdateWithoutOptionDataInput
  create?: OptionItemCreateWithoutOptionInput
}
export type OptionItemUpsertWithWhereUniqueWithoutOptionInputInputObject =
  | Extract<keyof OptionItemUpsertWithWhereUniqueWithoutOptionInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface OptionItemScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  price?: string | null
  price_not?: string | null
  price_in?: string[]
  price_not_in?: string[]
  price_lt?: string | null
  price_lte?: string | null
  price_gt?: string | null
  price_gte?: string | null
  price_contains?: string | null
  price_not_contains?: string | null
  price_starts_with?: string | null
  price_not_starts_with?: string | null
  price_ends_with?: string | null
  price_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: OptionItemScalarWhereInput[]
  OR?: OptionItemScalarWhereInput[]
  NOT?: OptionItemScalarWhereInput[]
}
export type OptionItemScalarWhereInputInputObject =
  | Extract<keyof OptionItemScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'price_not', alias?: string  } 
  | { name: 'price_in', alias?: string  } 
  | { name: 'price_not_in', alias?: string  } 
  | { name: 'price_lt', alias?: string  } 
  | { name: 'price_lte', alias?: string  } 
  | { name: 'price_gt', alias?: string  } 
  | { name: 'price_gte', alias?: string  } 
  | { name: 'price_contains', alias?: string  } 
  | { name: 'price_not_contains', alias?: string  } 
  | { name: 'price_starts_with', alias?: string  } 
  | { name: 'price_not_starts_with', alias?: string  } 
  | { name: 'price_ends_with', alias?: string  } 
  | { name: 'price_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface OptionItemUpdateManyWithWhereNestedInput {
  where?: OptionItemScalarWhereInput
  data?: OptionItemUpdateManyDataInput
}
export type OptionItemUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof OptionItemUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface OptionItemUpdateManyDataInput {
  name?: string | null
  price?: string | null
}
export type OptionItemUpdateManyDataInputInputObject =
  | Extract<keyof OptionItemUpdateManyDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'price', alias?: string  } 
  
export interface RestaurantUpdateOneInput {
  create?: RestaurantCreateInput | null
  update?: RestaurantUpdateDataInput | null
  upsert?: RestaurantUpsertNestedInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: RestaurantWhereUniqueInput | null
}
export type RestaurantUpdateOneInputInputObject =
  | Extract<keyof RestaurantUpdateOneInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface RestaurantUpsertNestedInput {
  update?: RestaurantUpdateDataInput
  create?: RestaurantCreateInput
}
export type RestaurantUpsertNestedInputInputObject =
  | Extract<keyof RestaurantUpsertNestedInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface OptionUpsertWithWhereUniqueWithoutMenuItemsInput {
  where?: OptionWhereUniqueInput
  update?: OptionUpdateWithoutMenuItemsDataInput
  create?: OptionCreateWithoutMenuItemsInput
}
export type OptionUpsertWithWhereUniqueWithoutMenuItemsInputInputObject =
  | Extract<keyof OptionUpsertWithWhereUniqueWithoutMenuItemsInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface OptionScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  min?: string | null
  min_not?: string | null
  min_in?: string[]
  min_not_in?: string[]
  min_lt?: string | null
  min_lte?: string | null
  min_gt?: string | null
  min_gte?: string | null
  min_contains?: string | null
  min_not_contains?: string | null
  min_starts_with?: string | null
  min_not_starts_with?: string | null
  min_ends_with?: string | null
  min_not_ends_with?: string | null
  max?: string | null
  max_not?: string | null
  max_in?: string[]
  max_not_in?: string[]
  max_lt?: string | null
  max_lte?: string | null
  max_gt?: string | null
  max_gte?: string | null
  max_contains?: string | null
  max_not_contains?: string | null
  max_starts_with?: string | null
  max_not_starts_with?: string | null
  max_ends_with?: string | null
  max_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: OptionScalarWhereInput[]
  OR?: OptionScalarWhereInput[]
  NOT?: OptionScalarWhereInput[]
}
export type OptionScalarWhereInputInputObject =
  | Extract<keyof OptionScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'min', alias?: string  } 
  | { name: 'min_not', alias?: string  } 
  | { name: 'min_in', alias?: string  } 
  | { name: 'min_not_in', alias?: string  } 
  | { name: 'min_lt', alias?: string  } 
  | { name: 'min_lte', alias?: string  } 
  | { name: 'min_gt', alias?: string  } 
  | { name: 'min_gte', alias?: string  } 
  | { name: 'min_contains', alias?: string  } 
  | { name: 'min_not_contains', alias?: string  } 
  | { name: 'min_starts_with', alias?: string  } 
  | { name: 'min_not_starts_with', alias?: string  } 
  | { name: 'min_ends_with', alias?: string  } 
  | { name: 'min_not_ends_with', alias?: string  } 
  | { name: 'max', alias?: string  } 
  | { name: 'max_not', alias?: string  } 
  | { name: 'max_in', alias?: string  } 
  | { name: 'max_not_in', alias?: string  } 
  | { name: 'max_lt', alias?: string  } 
  | { name: 'max_lte', alias?: string  } 
  | { name: 'max_gt', alias?: string  } 
  | { name: 'max_gte', alias?: string  } 
  | { name: 'max_contains', alias?: string  } 
  | { name: 'max_not_contains', alias?: string  } 
  | { name: 'max_starts_with', alias?: string  } 
  | { name: 'max_not_starts_with', alias?: string  } 
  | { name: 'max_ends_with', alias?: string  } 
  | { name: 'max_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface OptionUpdateManyWithWhereNestedInput {
  where?: OptionScalarWhereInput
  data?: OptionUpdateManyDataInput
}
export type OptionUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof OptionUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface OptionUpdateManyDataInput {
  name?: string | null
  min?: string | null
  max?: string | null
}
export type OptionUpdateManyDataInputInputObject =
  | Extract<keyof OptionUpdateManyDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'min', alias?: string  } 
  | { name: 'max', alias?: string  } 
  
export interface MenuItemUpsertWithWhereUniqueWithoutCategoryInput {
  where?: MenuItemWhereUniqueInput
  update?: MenuItemUpdateWithoutCategoryDataInput
  create?: MenuItemCreateWithoutCategoryInput
}
export type MenuItemUpsertWithWhereUniqueWithoutCategoryInputInputObject =
  | Extract<keyof MenuItemUpsertWithWhereUniqueWithoutCategoryInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface MenuItemScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  description?: string | null
  description_not?: string | null
  description_in?: string[]
  description_not_in?: string[]
  description_lt?: string | null
  description_lte?: string | null
  description_gt?: string | null
  description_gte?: string | null
  description_contains?: string | null
  description_not_contains?: string | null
  description_starts_with?: string | null
  description_not_starts_with?: string | null
  description_ends_with?: string | null
  description_not_ends_with?: string | null
  price?: string | null
  price_not?: string | null
  price_in?: string[]
  price_not_in?: string[]
  price_lt?: string | null
  price_lte?: string | null
  price_gt?: string | null
  price_gte?: string | null
  price_contains?: string | null
  price_not_contains?: string | null
  price_starts_with?: string | null
  price_not_starts_with?: string | null
  price_ends_with?: string | null
  price_not_ends_with?: string | null
  image?: string | null
  image_not?: string | null
  image_in?: string[]
  image_not_in?: string[]
  image_lt?: string | null
  image_lte?: string | null
  image_gt?: string | null
  image_gte?: string | null
  image_contains?: string | null
  image_not_contains?: string | null
  image_starts_with?: string | null
  image_not_starts_with?: string | null
  image_ends_with?: string | null
  image_not_ends_with?: string | null
  available?: boolean | null
  available_not?: boolean | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: MenuItemScalarWhereInput[]
  OR?: MenuItemScalarWhereInput[]
  NOT?: MenuItemScalarWhereInput[]
}
export type MenuItemScalarWhereInputInputObject =
  | Extract<keyof MenuItemScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'description_not', alias?: string  } 
  | { name: 'description_in', alias?: string  } 
  | { name: 'description_not_in', alias?: string  } 
  | { name: 'description_lt', alias?: string  } 
  | { name: 'description_lte', alias?: string  } 
  | { name: 'description_gt', alias?: string  } 
  | { name: 'description_gte', alias?: string  } 
  | { name: 'description_contains', alias?: string  } 
  | { name: 'description_not_contains', alias?: string  } 
  | { name: 'description_starts_with', alias?: string  } 
  | { name: 'description_not_starts_with', alias?: string  } 
  | { name: 'description_ends_with', alias?: string  } 
  | { name: 'description_not_ends_with', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'price_not', alias?: string  } 
  | { name: 'price_in', alias?: string  } 
  | { name: 'price_not_in', alias?: string  } 
  | { name: 'price_lt', alias?: string  } 
  | { name: 'price_lte', alias?: string  } 
  | { name: 'price_gt', alias?: string  } 
  | { name: 'price_gte', alias?: string  } 
  | { name: 'price_contains', alias?: string  } 
  | { name: 'price_not_contains', alias?: string  } 
  | { name: 'price_starts_with', alias?: string  } 
  | { name: 'price_not_starts_with', alias?: string  } 
  | { name: 'price_ends_with', alias?: string  } 
  | { name: 'price_not_ends_with', alias?: string  } 
  | { name: 'image', alias?: string  } 
  | { name: 'image_not', alias?: string  } 
  | { name: 'image_in', alias?: string  } 
  | { name: 'image_not_in', alias?: string  } 
  | { name: 'image_lt', alias?: string  } 
  | { name: 'image_lte', alias?: string  } 
  | { name: 'image_gt', alias?: string  } 
  | { name: 'image_gte', alias?: string  } 
  | { name: 'image_contains', alias?: string  } 
  | { name: 'image_not_contains', alias?: string  } 
  | { name: 'image_starts_with', alias?: string  } 
  | { name: 'image_not_starts_with', alias?: string  } 
  | { name: 'image_ends_with', alias?: string  } 
  | { name: 'image_not_ends_with', alias?: string  } 
  | { name: 'available', alias?: string  } 
  | { name: 'available_not', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface MenuItemUpdateManyWithWhereNestedInput {
  where?: MenuItemScalarWhereInput
  data?: MenuItemUpdateManyDataInput
}
export type MenuItemUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof MenuItemUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface MenuItemUpdateManyDataInput {
  name?: string | null
  description?: string | null
  price?: string | null
  image?: string | null
  available?: boolean | null
  dietary?: MenuItemUpdatedietaryInput | null
}
export type MenuItemUpdateManyDataInputInputObject =
  | Extract<keyof MenuItemUpdateManyDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'image', alias?: string  } 
  | { name: 'available', alias?: string  } 
  | { name: 'dietary', alias?: string  } 
  
export interface MenuCategoryUpsertWithWhereUniqueWithoutMenuInput {
  where?: MenuCategoryWhereUniqueInput
  update?: MenuCategoryUpdateWithoutMenuDataInput
  create?: MenuCategoryCreateWithoutMenuInput
}
export type MenuCategoryUpsertWithWhereUniqueWithoutMenuInputInputObject =
  | Extract<keyof MenuCategoryUpsertWithWhereUniqueWithoutMenuInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface MenuCategoryScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  description?: string | null
  description_not?: string | null
  description_in?: string[]
  description_not_in?: string[]
  description_lt?: string | null
  description_lte?: string | null
  description_gt?: string | null
  description_gte?: string | null
  description_contains?: string | null
  description_not_contains?: string | null
  description_starts_with?: string | null
  description_not_starts_with?: string | null
  description_ends_with?: string | null
  description_not_ends_with?: string | null
  available?: boolean | null
  available_not?: boolean | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: MenuCategoryScalarWhereInput[]
  OR?: MenuCategoryScalarWhereInput[]
  NOT?: MenuCategoryScalarWhereInput[]
}
export type MenuCategoryScalarWhereInputInputObject =
  | Extract<keyof MenuCategoryScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'description_not', alias?: string  } 
  | { name: 'description_in', alias?: string  } 
  | { name: 'description_not_in', alias?: string  } 
  | { name: 'description_lt', alias?: string  } 
  | { name: 'description_lte', alias?: string  } 
  | { name: 'description_gt', alias?: string  } 
  | { name: 'description_gte', alias?: string  } 
  | { name: 'description_contains', alias?: string  } 
  | { name: 'description_not_contains', alias?: string  } 
  | { name: 'description_starts_with', alias?: string  } 
  | { name: 'description_not_starts_with', alias?: string  } 
  | { name: 'description_ends_with', alias?: string  } 
  | { name: 'description_not_ends_with', alias?: string  } 
  | { name: 'available', alias?: string  } 
  | { name: 'available_not', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface MenuCategoryUpdateManyWithWhereNestedInput {
  where?: MenuCategoryScalarWhereInput
  data?: MenuCategoryUpdateManyDataInput
}
export type MenuCategoryUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof MenuCategoryUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface MenuCategoryUpdateManyDataInput {
  name?: string | null
  description?: string | null
  available?: boolean | null
}
export type MenuCategoryUpdateManyDataInputInputObject =
  | Extract<keyof MenuCategoryUpdateManyDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'available', alias?: string  } 
  
export interface MenuUpsertWithWhereUniqueWithoutRestaurantInput {
  where?: MenuWhereUniqueInput
  update?: MenuUpdateWithoutRestaurantDataInput
  create?: MenuCreateWithoutRestaurantInput
}
export type MenuUpsertWithWhereUniqueWithoutRestaurantInputInputObject =
  | Extract<keyof MenuUpsertWithWhereUniqueWithoutRestaurantInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface MenuScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  description?: string | null
  description_not?: string | null
  description_in?: string[]
  description_not_in?: string[]
  description_lt?: string | null
  description_lte?: string | null
  description_gt?: string | null
  description_gte?: string | null
  description_contains?: string | null
  description_not_contains?: string | null
  description_starts_with?: string | null
  description_not_starts_with?: string | null
  description_ends_with?: string | null
  description_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: MenuScalarWhereInput[]
  OR?: MenuScalarWhereInput[]
  NOT?: MenuScalarWhereInput[]
}
export type MenuScalarWhereInputInputObject =
  | Extract<keyof MenuScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'description_not', alias?: string  } 
  | { name: 'description_in', alias?: string  } 
  | { name: 'description_not_in', alias?: string  } 
  | { name: 'description_lt', alias?: string  } 
  | { name: 'description_lte', alias?: string  } 
  | { name: 'description_gt', alias?: string  } 
  | { name: 'description_gte', alias?: string  } 
  | { name: 'description_contains', alias?: string  } 
  | { name: 'description_not_contains', alias?: string  } 
  | { name: 'description_starts_with', alias?: string  } 
  | { name: 'description_not_starts_with', alias?: string  } 
  | { name: 'description_ends_with', alias?: string  } 
  | { name: 'description_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface MenuUpdateManyWithWhereNestedInput {
  where?: MenuScalarWhereInput
  data?: MenuUpdateManyDataInput
}
export type MenuUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof MenuUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface MenuUpdateManyDataInput {
  name?: string | null
  description?: string | null
}
export type MenuUpdateManyDataInputInputObject =
  | Extract<keyof MenuUpdateManyDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  
export interface OrderItemUpdateManyWithoutOrderInput {
  create?: OrderItemCreateWithoutOrderInput[]
  delete?: OrderItemWhereUniqueInput[]
  connect?: OrderItemWhereUniqueInput[]
  set?: OrderItemWhereUniqueInput[]
  disconnect?: OrderItemWhereUniqueInput[]
  update?: OrderItemUpdateWithWhereUniqueWithoutOrderInput[]
  upsert?: OrderItemUpsertWithWhereUniqueWithoutOrderInput[]
  deleteMany?: OrderItemScalarWhereInput[]
  updateMany?: OrderItemUpdateManyWithWhereNestedInput[]
}
export type OrderItemUpdateManyWithoutOrderInputInputObject =
  | Extract<keyof OrderItemUpdateManyWithoutOrderInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface OrderItemUpdateWithWhereUniqueWithoutOrderInput {
  where?: OrderItemWhereUniqueInput
  data?: OrderItemUpdateWithoutOrderDataInput
}
export type OrderItemUpdateWithWhereUniqueWithoutOrderInputInputObject =
  | Extract<keyof OrderItemUpdateWithWhereUniqueWithoutOrderInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface OrderItemUpdateWithoutOrderDataInput {
  name?: string | null
  price?: string | null
  image?: string | null
  quantity?: number | null
  options?: OrderItemOptionUpdateManyWithoutOrderItemInput | null
}
export type OrderItemUpdateWithoutOrderDataInputInputObject =
  | Extract<keyof OrderItemUpdateWithoutOrderDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'image', alias?: string  } 
  | { name: 'quantity', alias?: string  } 
  | { name: 'options', alias?: string  } 
  
export interface OrderItemOptionUpdateManyWithoutOrderItemInput {
  create?: OrderItemOptionCreateWithoutOrderItemInput[]
  delete?: OrderItemOptionWhereUniqueInput[]
  connect?: OrderItemOptionWhereUniqueInput[]
  set?: OrderItemOptionWhereUniqueInput[]
  disconnect?: OrderItemOptionWhereUniqueInput[]
  update?: OrderItemOptionUpdateWithWhereUniqueWithoutOrderItemInput[]
  upsert?: OrderItemOptionUpsertWithWhereUniqueWithoutOrderItemInput[]
  deleteMany?: OrderItemOptionScalarWhereInput[]
  updateMany?: OrderItemOptionUpdateManyWithWhereNestedInput[]
}
export type OrderItemOptionUpdateManyWithoutOrderItemInputInputObject =
  | Extract<keyof OrderItemOptionUpdateManyWithoutOrderItemInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface OrderItemOptionUpdateWithWhereUniqueWithoutOrderItemInput {
  where?: OrderItemOptionWhereUniqueInput
  data?: OrderItemOptionUpdateWithoutOrderItemDataInput
}
export type OrderItemOptionUpdateWithWhereUniqueWithoutOrderItemInputInputObject =
  | Extract<keyof OrderItemOptionUpdateWithWhereUniqueWithoutOrderItemInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface OrderItemOptionUpdateWithoutOrderItemDataInput {
  name?: string | null
  items?: OrderItemOptionItemUpdateManyWithoutOptionInput | null
}
export type OrderItemOptionUpdateWithoutOrderItemDataInputInputObject =
  | Extract<keyof OrderItemOptionUpdateWithoutOrderItemDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'items', alias?: string  } 
  
export interface OrderItemOptionItemUpdateManyWithoutOptionInput {
  create?: OrderItemOptionItemCreateWithoutOptionInput[]
  delete?: OrderItemOptionItemWhereUniqueInput[]
  connect?: OrderItemOptionItemWhereUniqueInput[]
  set?: OrderItemOptionItemWhereUniqueInput[]
  disconnect?: OrderItemOptionItemWhereUniqueInput[]
  update?: OrderItemOptionItemUpdateWithWhereUniqueWithoutOptionInput[]
  upsert?: OrderItemOptionItemUpsertWithWhereUniqueWithoutOptionInput[]
  deleteMany?: OrderItemOptionItemScalarWhereInput[]
  updateMany?: OrderItemOptionItemUpdateManyWithWhereNestedInput[]
}
export type OrderItemOptionItemUpdateManyWithoutOptionInputInputObject =
  | Extract<keyof OrderItemOptionItemUpdateManyWithoutOptionInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface OrderItemOptionItemUpdateWithWhereUniqueWithoutOptionInput {
  where?: OrderItemOptionItemWhereUniqueInput
  data?: OrderItemOptionItemUpdateWithoutOptionDataInput
}
export type OrderItemOptionItemUpdateWithWhereUniqueWithoutOptionInputInputObject =
  | Extract<keyof OrderItemOptionItemUpdateWithWhereUniqueWithoutOptionInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface OrderItemOptionItemUpdateWithoutOptionDataInput {
  name?: string | null
  price?: string | null
}
export type OrderItemOptionItemUpdateWithoutOptionDataInputInputObject =
  | Extract<keyof OrderItemOptionItemUpdateWithoutOptionDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'price', alias?: string  } 
  
export interface OrderItemOptionItemUpsertWithWhereUniqueWithoutOptionInput {
  where?: OrderItemOptionItemWhereUniqueInput
  update?: OrderItemOptionItemUpdateWithoutOptionDataInput
  create?: OrderItemOptionItemCreateWithoutOptionInput
}
export type OrderItemOptionItemUpsertWithWhereUniqueWithoutOptionInputInputObject =
  | Extract<keyof OrderItemOptionItemUpsertWithWhereUniqueWithoutOptionInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface OrderItemOptionItemScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  price?: string | null
  price_not?: string | null
  price_in?: string[]
  price_not_in?: string[]
  price_lt?: string | null
  price_lte?: string | null
  price_gt?: string | null
  price_gte?: string | null
  price_contains?: string | null
  price_not_contains?: string | null
  price_starts_with?: string | null
  price_not_starts_with?: string | null
  price_ends_with?: string | null
  price_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: OrderItemOptionItemScalarWhereInput[]
  OR?: OrderItemOptionItemScalarWhereInput[]
  NOT?: OrderItemOptionItemScalarWhereInput[]
}
export type OrderItemOptionItemScalarWhereInputInputObject =
  | Extract<keyof OrderItemOptionItemScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'price_not', alias?: string  } 
  | { name: 'price_in', alias?: string  } 
  | { name: 'price_not_in', alias?: string  } 
  | { name: 'price_lt', alias?: string  } 
  | { name: 'price_lte', alias?: string  } 
  | { name: 'price_gt', alias?: string  } 
  | { name: 'price_gte', alias?: string  } 
  | { name: 'price_contains', alias?: string  } 
  | { name: 'price_not_contains', alias?: string  } 
  | { name: 'price_starts_with', alias?: string  } 
  | { name: 'price_not_starts_with', alias?: string  } 
  | { name: 'price_ends_with', alias?: string  } 
  | { name: 'price_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface OrderItemOptionItemUpdateManyWithWhereNestedInput {
  where?: OrderItemOptionItemScalarWhereInput
  data?: OrderItemOptionItemUpdateManyDataInput
}
export type OrderItemOptionItemUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof OrderItemOptionItemUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface OrderItemOptionItemUpdateManyDataInput {
  name?: string | null
  price?: string | null
}
export type OrderItemOptionItemUpdateManyDataInputInputObject =
  | Extract<keyof OrderItemOptionItemUpdateManyDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'price', alias?: string  } 
  
export interface OrderItemOptionUpsertWithWhereUniqueWithoutOrderItemInput {
  where?: OrderItemOptionWhereUniqueInput
  update?: OrderItemOptionUpdateWithoutOrderItemDataInput
  create?: OrderItemOptionCreateWithoutOrderItemInput
}
export type OrderItemOptionUpsertWithWhereUniqueWithoutOrderItemInputInputObject =
  | Extract<keyof OrderItemOptionUpsertWithWhereUniqueWithoutOrderItemInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface OrderItemOptionScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: OrderItemOptionScalarWhereInput[]
  OR?: OrderItemOptionScalarWhereInput[]
  NOT?: OrderItemOptionScalarWhereInput[]
}
export type OrderItemOptionScalarWhereInputInputObject =
  | Extract<keyof OrderItemOptionScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface OrderItemOptionUpdateManyWithWhereNestedInput {
  where?: OrderItemOptionScalarWhereInput
  data?: OrderItemOptionUpdateManyDataInput
}
export type OrderItemOptionUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof OrderItemOptionUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface OrderItemOptionUpdateManyDataInput {
  name?: string | null
}
export type OrderItemOptionUpdateManyDataInputInputObject =
  | Extract<keyof OrderItemOptionUpdateManyDataInput, string>
  | { name: 'name', alias?: string  } 
  
export interface OrderItemUpsertWithWhereUniqueWithoutOrderInput {
  where?: OrderItemWhereUniqueInput
  update?: OrderItemUpdateWithoutOrderDataInput
  create?: OrderItemCreateWithoutOrderInput
}
export type OrderItemUpsertWithWhereUniqueWithoutOrderInputInputObject =
  | Extract<keyof OrderItemUpsertWithWhereUniqueWithoutOrderInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface OrderItemScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  name?: string | null
  name_not?: string | null
  name_in?: string[]
  name_not_in?: string[]
  name_lt?: string | null
  name_lte?: string | null
  name_gt?: string | null
  name_gte?: string | null
  name_contains?: string | null
  name_not_contains?: string | null
  name_starts_with?: string | null
  name_not_starts_with?: string | null
  name_ends_with?: string | null
  name_not_ends_with?: string | null
  price?: string | null
  price_not?: string | null
  price_in?: string[]
  price_not_in?: string[]
  price_lt?: string | null
  price_lte?: string | null
  price_gt?: string | null
  price_gte?: string | null
  price_contains?: string | null
  price_not_contains?: string | null
  price_starts_with?: string | null
  price_not_starts_with?: string | null
  price_ends_with?: string | null
  price_not_ends_with?: string | null
  image?: string | null
  image_not?: string | null
  image_in?: string[]
  image_not_in?: string[]
  image_lt?: string | null
  image_lte?: string | null
  image_gt?: string | null
  image_gte?: string | null
  image_contains?: string | null
  image_not_contains?: string | null
  image_starts_with?: string | null
  image_not_starts_with?: string | null
  image_ends_with?: string | null
  image_not_ends_with?: string | null
  quantity?: number | null
  quantity_not?: number | null
  quantity_in?: number[]
  quantity_not_in?: number[]
  quantity_lt?: number | null
  quantity_lte?: number | null
  quantity_gt?: number | null
  quantity_gte?: number | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  AND?: OrderItemScalarWhereInput[]
  OR?: OrderItemScalarWhereInput[]
  NOT?: OrderItemScalarWhereInput[]
}
export type OrderItemScalarWhereInputInputObject =
  | Extract<keyof OrderItemScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'name_not', alias?: string  } 
  | { name: 'name_in', alias?: string  } 
  | { name: 'name_not_in', alias?: string  } 
  | { name: 'name_lt', alias?: string  } 
  | { name: 'name_lte', alias?: string  } 
  | { name: 'name_gt', alias?: string  } 
  | { name: 'name_gte', alias?: string  } 
  | { name: 'name_contains', alias?: string  } 
  | { name: 'name_not_contains', alias?: string  } 
  | { name: 'name_starts_with', alias?: string  } 
  | { name: 'name_not_starts_with', alias?: string  } 
  | { name: 'name_ends_with', alias?: string  } 
  | { name: 'name_not_ends_with', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'price_not', alias?: string  } 
  | { name: 'price_in', alias?: string  } 
  | { name: 'price_not_in', alias?: string  } 
  | { name: 'price_lt', alias?: string  } 
  | { name: 'price_lte', alias?: string  } 
  | { name: 'price_gt', alias?: string  } 
  | { name: 'price_gte', alias?: string  } 
  | { name: 'price_contains', alias?: string  } 
  | { name: 'price_not_contains', alias?: string  } 
  | { name: 'price_starts_with', alias?: string  } 
  | { name: 'price_not_starts_with', alias?: string  } 
  | { name: 'price_ends_with', alias?: string  } 
  | { name: 'price_not_ends_with', alias?: string  } 
  | { name: 'image', alias?: string  } 
  | { name: 'image_not', alias?: string  } 
  | { name: 'image_in', alias?: string  } 
  | { name: 'image_not_in', alias?: string  } 
  | { name: 'image_lt', alias?: string  } 
  | { name: 'image_lte', alias?: string  } 
  | { name: 'image_gt', alias?: string  } 
  | { name: 'image_gte', alias?: string  } 
  | { name: 'image_contains', alias?: string  } 
  | { name: 'image_not_contains', alias?: string  } 
  | { name: 'image_starts_with', alias?: string  } 
  | { name: 'image_not_starts_with', alias?: string  } 
  | { name: 'image_ends_with', alias?: string  } 
  | { name: 'image_not_ends_with', alias?: string  } 
  | { name: 'quantity', alias?: string  } 
  | { name: 'quantity_not', alias?: string  } 
  | { name: 'quantity_in', alias?: string  } 
  | { name: 'quantity_not_in', alias?: string  } 
  | { name: 'quantity_lt', alias?: string  } 
  | { name: 'quantity_lte', alias?: string  } 
  | { name: 'quantity_gt', alias?: string  } 
  | { name: 'quantity_gte', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface OrderItemUpdateManyWithWhereNestedInput {
  where?: OrderItemScalarWhereInput
  data?: OrderItemUpdateManyDataInput
}
export type OrderItemUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof OrderItemUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface OrderItemUpdateManyDataInput {
  name?: string | null
  price?: string | null
  image?: string | null
  quantity?: number | null
}
export type OrderItemUpdateManyDataInputInputObject =
  | Extract<keyof OrderItemUpdateManyDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'image', alias?: string  } 
  | { name: 'quantity', alias?: string  } 
  
export interface OrderUpsertWithWhereUniqueWithoutCustomerInput {
  where?: OrderWhereUniqueInput
  update?: OrderUpdateWithoutCustomerDataInput
  create?: OrderCreateWithoutCustomerInput
}
export type OrderUpsertWithWhereUniqueWithoutCustomerInputInputObject =
  | Extract<keyof OrderUpsertWithWhereUniqueWithoutCustomerInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface OrderScalarWhereInput {
  id?: string | null
  id_not?: string | null
  id_in?: string[]
  id_not_in?: string[]
  id_lt?: string | null
  id_lte?: string | null
  id_gt?: string | null
  id_gte?: string | null
  id_contains?: string | null
  id_not_contains?: string | null
  id_starts_with?: string | null
  id_not_starts_with?: string | null
  id_ends_with?: string | null
  id_not_ends_with?: string | null
  orderNo?: number | null
  orderNo_not?: number | null
  orderNo_in?: number[]
  orderNo_not_in?: number[]
  orderNo_lt?: number | null
  orderNo_lte?: number | null
  orderNo_gt?: number | null
  orderNo_gte?: number | null
  paymentIntentId?: string | null
  paymentIntentId_not?: string | null
  paymentIntentId_in?: string[]
  paymentIntentId_not_in?: string[]
  paymentIntentId_lt?: string | null
  paymentIntentId_lte?: string | null
  paymentIntentId_gt?: string | null
  paymentIntentId_gte?: string | null
  paymentIntentId_contains?: string | null
  paymentIntentId_not_contains?: string | null
  paymentIntentId_starts_with?: string | null
  paymentIntentId_not_starts_with?: string | null
  paymentIntentId_ends_with?: string | null
  paymentIntentId_not_ends_with?: string | null
  status?: string | null
  status_not?: string | null
  status_in?: string[]
  status_not_in?: string[]
  status_lt?: string | null
  status_lte?: string | null
  status_gt?: string | null
  status_gte?: string | null
  status_contains?: string | null
  status_not_contains?: string | null
  status_starts_with?: string | null
  status_not_starts_with?: string | null
  status_ends_with?: string | null
  status_not_ends_with?: string | null
  createdAt?: string | null
  createdAt_not?: string | null
  createdAt_in?: string[]
  createdAt_not_in?: string[]
  createdAt_lt?: string | null
  createdAt_lte?: string | null
  createdAt_gt?: string | null
  createdAt_gte?: string | null
  updatedAt?: string | null
  updatedAt_not?: string | null
  updatedAt_in?: string[]
  updatedAt_not_in?: string[]
  updatedAt_lt?: string | null
  updatedAt_lte?: string | null
  updatedAt_gt?: string | null
  updatedAt_gte?: string | null
  dueAt?: string | null
  dueAt_not?: string | null
  dueAt_in?: string[]
  dueAt_not_in?: string[]
  dueAt_lt?: string | null
  dueAt_lte?: string | null
  dueAt_gt?: string | null
  dueAt_gte?: string | null
  delayedBy?: number | null
  delayedBy_not?: number | null
  delayedBy_in?: number[]
  delayedBy_not_in?: number[]
  delayedBy_lt?: number | null
  delayedBy_lte?: number | null
  delayedBy_gt?: number | null
  delayedBy_gte?: number | null
  total?: string | null
  total_not?: string | null
  total_in?: string[]
  total_not_in?: string[]
  total_lt?: string | null
  total_lte?: string | null
  total_gt?: string | null
  total_gte?: string | null
  total_contains?: string | null
  total_not_contains?: string | null
  total_starts_with?: string | null
  total_not_starts_with?: string | null
  total_ends_with?: string | null
  total_not_ends_with?: string | null
  priceAdjustment?: string | null
  priceAdjustment_not?: string | null
  priceAdjustment_in?: string[]
  priceAdjustment_not_in?: string[]
  priceAdjustment_lt?: string | null
  priceAdjustment_lte?: string | null
  priceAdjustment_gt?: string | null
  priceAdjustment_gte?: string | null
  priceAdjustment_contains?: string | null
  priceAdjustment_not_contains?: string | null
  priceAdjustment_starts_with?: string | null
  priceAdjustment_not_starts_with?: string | null
  priceAdjustment_ends_with?: string | null
  priceAdjustment_not_ends_with?: string | null
  cancelReason?: string | null
  cancelReason_not?: string | null
  cancelReason_in?: string[]
  cancelReason_not_in?: string[]
  cancelReason_lt?: string | null
  cancelReason_lte?: string | null
  cancelReason_gt?: string | null
  cancelReason_gte?: string | null
  cancelReason_contains?: string | null
  cancelReason_not_contains?: string | null
  cancelReason_starts_with?: string | null
  cancelReason_not_starts_with?: string | null
  cancelReason_ends_with?: string | null
  cancelReason_not_ends_with?: string | null
  priceAdjustmentReason?: string | null
  priceAdjustmentReason_not?: string | null
  priceAdjustmentReason_in?: string[]
  priceAdjustmentReason_not_in?: string[]
  priceAdjustmentReason_lt?: string | null
  priceAdjustmentReason_lte?: string | null
  priceAdjustmentReason_gt?: string | null
  priceAdjustmentReason_gte?: string | null
  priceAdjustmentReason_contains?: string | null
  priceAdjustmentReason_not_contains?: string | null
  priceAdjustmentReason_starts_with?: string | null
  priceAdjustmentReason_not_starts_with?: string | null
  priceAdjustmentReason_ends_with?: string | null
  priceAdjustmentReason_not_ends_with?: string | null
  AND?: OrderScalarWhereInput[]
  OR?: OrderScalarWhereInput[]
  NOT?: OrderScalarWhereInput[]
}
export type OrderScalarWhereInputInputObject =
  | Extract<keyof OrderScalarWhereInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'id_not', alias?: string  } 
  | { name: 'id_in', alias?: string  } 
  | { name: 'id_not_in', alias?: string  } 
  | { name: 'id_lt', alias?: string  } 
  | { name: 'id_lte', alias?: string  } 
  | { name: 'id_gt', alias?: string  } 
  | { name: 'id_gte', alias?: string  } 
  | { name: 'id_contains', alias?: string  } 
  | { name: 'id_not_contains', alias?: string  } 
  | { name: 'id_starts_with', alias?: string  } 
  | { name: 'id_not_starts_with', alias?: string  } 
  | { name: 'id_ends_with', alias?: string  } 
  | { name: 'id_not_ends_with', alias?: string  } 
  | { name: 'orderNo', alias?: string  } 
  | { name: 'orderNo_not', alias?: string  } 
  | { name: 'orderNo_in', alias?: string  } 
  | { name: 'orderNo_not_in', alias?: string  } 
  | { name: 'orderNo_lt', alias?: string  } 
  | { name: 'orderNo_lte', alias?: string  } 
  | { name: 'orderNo_gt', alias?: string  } 
  | { name: 'orderNo_gte', alias?: string  } 
  | { name: 'paymentIntentId', alias?: string  } 
  | { name: 'paymentIntentId_not', alias?: string  } 
  | { name: 'paymentIntentId_in', alias?: string  } 
  | { name: 'paymentIntentId_not_in', alias?: string  } 
  | { name: 'paymentIntentId_lt', alias?: string  } 
  | { name: 'paymentIntentId_lte', alias?: string  } 
  | { name: 'paymentIntentId_gt', alias?: string  } 
  | { name: 'paymentIntentId_gte', alias?: string  } 
  | { name: 'paymentIntentId_contains', alias?: string  } 
  | { name: 'paymentIntentId_not_contains', alias?: string  } 
  | { name: 'paymentIntentId_starts_with', alias?: string  } 
  | { name: 'paymentIntentId_not_starts_with', alias?: string  } 
  | { name: 'paymentIntentId_ends_with', alias?: string  } 
  | { name: 'paymentIntentId_not_ends_with', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'status_not', alias?: string  } 
  | { name: 'status_in', alias?: string  } 
  | { name: 'status_not_in', alias?: string  } 
  | { name: 'status_lt', alias?: string  } 
  | { name: 'status_lte', alias?: string  } 
  | { name: 'status_gt', alias?: string  } 
  | { name: 'status_gte', alias?: string  } 
  | { name: 'status_contains', alias?: string  } 
  | { name: 'status_not_contains', alias?: string  } 
  | { name: 'status_starts_with', alias?: string  } 
  | { name: 'status_not_starts_with', alias?: string  } 
  | { name: 'status_ends_with', alias?: string  } 
  | { name: 'status_not_ends_with', alias?: string  } 
  | { name: 'createdAt', alias?: string  } 
  | { name: 'createdAt_not', alias?: string  } 
  | { name: 'createdAt_in', alias?: string  } 
  | { name: 'createdAt_not_in', alias?: string  } 
  | { name: 'createdAt_lt', alias?: string  } 
  | { name: 'createdAt_lte', alias?: string  } 
  | { name: 'createdAt_gt', alias?: string  } 
  | { name: 'createdAt_gte', alias?: string  } 
  | { name: 'updatedAt', alias?: string  } 
  | { name: 'updatedAt_not', alias?: string  } 
  | { name: 'updatedAt_in', alias?: string  } 
  | { name: 'updatedAt_not_in', alias?: string  } 
  | { name: 'updatedAt_lt', alias?: string  } 
  | { name: 'updatedAt_lte', alias?: string  } 
  | { name: 'updatedAt_gt', alias?: string  } 
  | { name: 'updatedAt_gte', alias?: string  } 
  | { name: 'dueAt', alias?: string  } 
  | { name: 'dueAt_not', alias?: string  } 
  | { name: 'dueAt_in', alias?: string  } 
  | { name: 'dueAt_not_in', alias?: string  } 
  | { name: 'dueAt_lt', alias?: string  } 
  | { name: 'dueAt_lte', alias?: string  } 
  | { name: 'dueAt_gt', alias?: string  } 
  | { name: 'dueAt_gte', alias?: string  } 
  | { name: 'delayedBy', alias?: string  } 
  | { name: 'delayedBy_not', alias?: string  } 
  | { name: 'delayedBy_in', alias?: string  } 
  | { name: 'delayedBy_not_in', alias?: string  } 
  | { name: 'delayedBy_lt', alias?: string  } 
  | { name: 'delayedBy_lte', alias?: string  } 
  | { name: 'delayedBy_gt', alias?: string  } 
  | { name: 'delayedBy_gte', alias?: string  } 
  | { name: 'total', alias?: string  } 
  | { name: 'total_not', alias?: string  } 
  | { name: 'total_in', alias?: string  } 
  | { name: 'total_not_in', alias?: string  } 
  | { name: 'total_lt', alias?: string  } 
  | { name: 'total_lte', alias?: string  } 
  | { name: 'total_gt', alias?: string  } 
  | { name: 'total_gte', alias?: string  } 
  | { name: 'total_contains', alias?: string  } 
  | { name: 'total_not_contains', alias?: string  } 
  | { name: 'total_starts_with', alias?: string  } 
  | { name: 'total_not_starts_with', alias?: string  } 
  | { name: 'total_ends_with', alias?: string  } 
  | { name: 'total_not_ends_with', alias?: string  } 
  | { name: 'priceAdjustment', alias?: string  } 
  | { name: 'priceAdjustment_not', alias?: string  } 
  | { name: 'priceAdjustment_in', alias?: string  } 
  | { name: 'priceAdjustment_not_in', alias?: string  } 
  | { name: 'priceAdjustment_lt', alias?: string  } 
  | { name: 'priceAdjustment_lte', alias?: string  } 
  | { name: 'priceAdjustment_gt', alias?: string  } 
  | { name: 'priceAdjustment_gte', alias?: string  } 
  | { name: 'priceAdjustment_contains', alias?: string  } 
  | { name: 'priceAdjustment_not_contains', alias?: string  } 
  | { name: 'priceAdjustment_starts_with', alias?: string  } 
  | { name: 'priceAdjustment_not_starts_with', alias?: string  } 
  | { name: 'priceAdjustment_ends_with', alias?: string  } 
  | { name: 'priceAdjustment_not_ends_with', alias?: string  } 
  | { name: 'cancelReason', alias?: string  } 
  | { name: 'cancelReason_not', alias?: string  } 
  | { name: 'cancelReason_in', alias?: string  } 
  | { name: 'cancelReason_not_in', alias?: string  } 
  | { name: 'cancelReason_lt', alias?: string  } 
  | { name: 'cancelReason_lte', alias?: string  } 
  | { name: 'cancelReason_gt', alias?: string  } 
  | { name: 'cancelReason_gte', alias?: string  } 
  | { name: 'cancelReason_contains', alias?: string  } 
  | { name: 'cancelReason_not_contains', alias?: string  } 
  | { name: 'cancelReason_starts_with', alias?: string  } 
  | { name: 'cancelReason_not_starts_with', alias?: string  } 
  | { name: 'cancelReason_ends_with', alias?: string  } 
  | { name: 'cancelReason_not_ends_with', alias?: string  } 
  | { name: 'priceAdjustmentReason', alias?: string  } 
  | { name: 'priceAdjustmentReason_not', alias?: string  } 
  | { name: 'priceAdjustmentReason_in', alias?: string  } 
  | { name: 'priceAdjustmentReason_not_in', alias?: string  } 
  | { name: 'priceAdjustmentReason_lt', alias?: string  } 
  | { name: 'priceAdjustmentReason_lte', alias?: string  } 
  | { name: 'priceAdjustmentReason_gt', alias?: string  } 
  | { name: 'priceAdjustmentReason_gte', alias?: string  } 
  | { name: 'priceAdjustmentReason_contains', alias?: string  } 
  | { name: 'priceAdjustmentReason_not_contains', alias?: string  } 
  | { name: 'priceAdjustmentReason_starts_with', alias?: string  } 
  | { name: 'priceAdjustmentReason_not_starts_with', alias?: string  } 
  | { name: 'priceAdjustmentReason_ends_with', alias?: string  } 
  | { name: 'priceAdjustmentReason_not_ends_with', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface OrderUpdateManyWithWhereNestedInput {
  where?: OrderScalarWhereInput
  data?: OrderUpdateManyDataInput
}
export type OrderUpdateManyWithWhereNestedInputInputObject =
  | Extract<keyof OrderUpdateManyWithWhereNestedInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface OrderUpdateManyDataInput {
  orderNo?: number | null
  paymentIntentId?: string | null
  status?: string | null
  dueAt?: string | null
  delayedBy?: number | null
  total?: string | null
  priceAdjustment?: string | null
  cancelReason?: string | null
  priceAdjustmentReason?: string | null
}
export type OrderUpdateManyDataInputInputObject =
  | Extract<keyof OrderUpdateManyDataInput, string>
  | { name: 'orderNo', alias?: string  } 
  | { name: 'paymentIntentId', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'dueAt', alias?: string  } 
  | { name: 'delayedBy', alias?: string  } 
  | { name: 'total', alias?: string  } 
  | { name: 'priceAdjustment', alias?: string  } 
  | { name: 'cancelReason', alias?: string  } 
  | { name: 'priceAdjustmentReason', alias?: string  } 
  
export interface PaymentMethodUpdateOneWithoutCustomerInput {
  create?: PaymentMethodCreateWithoutCustomerInput | null
  update?: PaymentMethodUpdateWithoutCustomerDataInput | null
  upsert?: PaymentMethodUpsertWithoutCustomerInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: PaymentMethodWhereUniqueInput | null
}
export type PaymentMethodUpdateOneWithoutCustomerInputInputObject =
  | Extract<keyof PaymentMethodUpdateOneWithoutCustomerInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface PaymentMethodUpdateWithoutCustomerDataInput {
  payment_method_id?: string | null
  brand?: string | null
  last4?: string | null
}
export type PaymentMethodUpdateWithoutCustomerDataInputInputObject =
  | Extract<keyof PaymentMethodUpdateWithoutCustomerDataInput, string>
  | { name: 'payment_method_id', alias?: string  } 
  | { name: 'brand', alias?: string  } 
  | { name: 'last4', alias?: string  } 
  
export interface PaymentMethodUpsertWithoutCustomerInput {
  update?: PaymentMethodUpdateWithoutCustomerDataInput
  create?: PaymentMethodCreateWithoutCustomerInput
}
export type PaymentMethodUpsertWithoutCustomerInputInputObject =
  | Extract<keyof PaymentMethodUpsertWithoutCustomerInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface CustomerUpdateManyMutationInput {
  email?: string | null
  password?: string | null
  name?: string | null
  tel?: string | null
  customerStripeId?: string | null
}
export type CustomerUpdateManyMutationInputInputObject =
  | Extract<keyof CustomerUpdateManyMutationInput, string>
  | { name: 'email', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'tel', alias?: string  } 
  | { name: 'customerStripeId', alias?: string  } 
  
export interface PaymentMethodCreateInput {
  id?: string | null
  payment_method_id?: string
  brand?: string
  last4?: string
  customer?: CustomerCreateOneWithoutPaymentMethodInput | null
}
export type PaymentMethodCreateInputInputObject =
  | Extract<keyof PaymentMethodCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'payment_method_id', alias?: string  } 
  | { name: 'brand', alias?: string  } 
  | { name: 'last4', alias?: string  } 
  | { name: 'customer', alias?: string  } 
  
export interface CustomerCreateOneWithoutPaymentMethodInput {
  create?: CustomerCreateWithoutPaymentMethodInput | null
  connect?: CustomerWhereUniqueInput | null
}
export type CustomerCreateOneWithoutPaymentMethodInputInputObject =
  | Extract<keyof CustomerCreateOneWithoutPaymentMethodInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface CustomerCreateWithoutPaymentMethodInput {
  id?: string | null
  email?: string
  password?: string
  name?: string
  tel?: string
  customerStripeId?: string | null
  orders?: OrderCreateManyWithoutCustomerInput | null
}
export type CustomerCreateWithoutPaymentMethodInputInputObject =
  | Extract<keyof CustomerCreateWithoutPaymentMethodInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'tel', alias?: string  } 
  | { name: 'customerStripeId', alias?: string  } 
  | { name: 'orders', alias?: string  } 
  
export interface PaymentMethodUpdateInput {
  payment_method_id?: string | null
  brand?: string | null
  last4?: string | null
  customer?: CustomerUpdateOneWithoutPaymentMethodInput | null
}
export type PaymentMethodUpdateInputInputObject =
  | Extract<keyof PaymentMethodUpdateInput, string>
  | { name: 'payment_method_id', alias?: string  } 
  | { name: 'brand', alias?: string  } 
  | { name: 'last4', alias?: string  } 
  | { name: 'customer', alias?: string  } 
  
export interface CustomerUpdateOneWithoutPaymentMethodInput {
  create?: CustomerCreateWithoutPaymentMethodInput | null
  update?: CustomerUpdateWithoutPaymentMethodDataInput | null
  upsert?: CustomerUpsertWithoutPaymentMethodInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: CustomerWhereUniqueInput | null
}
export type CustomerUpdateOneWithoutPaymentMethodInputInputObject =
  | Extract<keyof CustomerUpdateOneWithoutPaymentMethodInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface CustomerUpdateWithoutPaymentMethodDataInput {
  email?: string | null
  password?: string | null
  name?: string | null
  tel?: string | null
  customerStripeId?: string | null
  orders?: OrderUpdateManyWithoutCustomerInput | null
}
export type CustomerUpdateWithoutPaymentMethodDataInputInputObject =
  | Extract<keyof CustomerUpdateWithoutPaymentMethodDataInput, string>
  | { name: 'email', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'tel', alias?: string  } 
  | { name: 'customerStripeId', alias?: string  } 
  | { name: 'orders', alias?: string  } 
  
export interface CustomerUpsertWithoutPaymentMethodInput {
  update?: CustomerUpdateWithoutPaymentMethodDataInput
  create?: CustomerCreateWithoutPaymentMethodInput
}
export type CustomerUpsertWithoutPaymentMethodInputInputObject =
  | Extract<keyof CustomerUpsertWithoutPaymentMethodInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface PaymentMethodUpdateManyMutationInput {
  payment_method_id?: string | null
  brand?: string | null
  last4?: string | null
}
export type PaymentMethodUpdateManyMutationInputInputObject =
  | Extract<keyof PaymentMethodUpdateManyMutationInput, string>
  | { name: 'payment_method_id', alias?: string  } 
  | { name: 'brand', alias?: string  } 
  | { name: 'last4', alias?: string  } 
  
export interface AddressCreateInput {
  id?: string | null
  number?: string
  streetName?: string
  city?: string
  postalCode?: string
  restaurant?: RestaurantCreateOneWithoutAddressInput
}
export type AddressCreateInputInputObject =
  | Extract<keyof AddressCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'number', alias?: string  } 
  | { name: 'streetName', alias?: string  } 
  | { name: 'city', alias?: string  } 
  | { name: 'postalCode', alias?: string  } 
  | { name: 'restaurant', alias?: string  } 
  
export interface RestaurantCreateOneWithoutAddressInput {
  create?: RestaurantCreateWithoutAddressInput | null
  connect?: RestaurantWhereUniqueInput | null
}
export type RestaurantCreateOneWithoutAddressInputInputObject =
  | Extract<keyof RestaurantCreateOneWithoutAddressInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface RestaurantCreateWithoutAddressInput {
  id?: string | null
  name?: string
  email?: string
  password?: string
  tel?: string
  image?: string | null
  logo?: string | null
  description?: string | null
  status?: string | null
  tags?: RestaurantCreatetagsInput | null
  openingTimes?: OpeningTimeCreateManyWithoutRestaurantInput | null
  averageBusyPreparationTime?: string | null
  averagePreparationTime?: string | null
  menus?: MenuCreateManyWithoutRestaurantInput | null
  isConnected?: boolean | null
  stripe_user_id?: string | null
  stripe_publishable_key?: string | null
  access_token?: string | null
  refresh_token?: string | null
}
export type RestaurantCreateWithoutAddressInputInputObject =
  | Extract<keyof RestaurantCreateWithoutAddressInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'tel', alias?: string  } 
  | { name: 'image', alias?: string  } 
  | { name: 'logo', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'tags', alias?: string  } 
  | { name: 'openingTimes', alias?: string  } 
  | { name: 'averageBusyPreparationTime', alias?: string  } 
  | { name: 'averagePreparationTime', alias?: string  } 
  | { name: 'menus', alias?: string  } 
  | { name: 'isConnected', alias?: string  } 
  | { name: 'stripe_user_id', alias?: string  } 
  | { name: 'stripe_publishable_key', alias?: string  } 
  | { name: 'access_token', alias?: string  } 
  | { name: 'refresh_token', alias?: string  } 
  
export interface AddressUpdateInput {
  number?: string | null
  streetName?: string | null
  city?: string | null
  postalCode?: string | null
  restaurant?: RestaurantUpdateOneRequiredWithoutAddressInput | null
}
export type AddressUpdateInputInputObject =
  | Extract<keyof AddressUpdateInput, string>
  | { name: 'number', alias?: string  } 
  | { name: 'streetName', alias?: string  } 
  | { name: 'city', alias?: string  } 
  | { name: 'postalCode', alias?: string  } 
  | { name: 'restaurant', alias?: string  } 
  
export interface RestaurantUpdateOneRequiredWithoutAddressInput {
  create?: RestaurantCreateWithoutAddressInput | null
  update?: RestaurantUpdateWithoutAddressDataInput | null
  upsert?: RestaurantUpsertWithoutAddressInput | null
  connect?: RestaurantWhereUniqueInput | null
}
export type RestaurantUpdateOneRequiredWithoutAddressInputInputObject =
  | Extract<keyof RestaurantUpdateOneRequiredWithoutAddressInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface RestaurantUpdateWithoutAddressDataInput {
  name?: string | null
  email?: string | null
  password?: string | null
  tel?: string | null
  image?: string | null
  logo?: string | null
  description?: string | null
  status?: string | null
  tags?: RestaurantUpdatetagsInput | null
  openingTimes?: OpeningTimeUpdateManyWithoutRestaurantInput | null
  averageBusyPreparationTime?: string | null
  averagePreparationTime?: string | null
  menus?: MenuUpdateManyWithoutRestaurantInput | null
  isConnected?: boolean | null
  stripe_user_id?: string | null
  stripe_publishable_key?: string | null
  access_token?: string | null
  refresh_token?: string | null
}
export type RestaurantUpdateWithoutAddressDataInputInputObject =
  | Extract<keyof RestaurantUpdateWithoutAddressDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'tel', alias?: string  } 
  | { name: 'image', alias?: string  } 
  | { name: 'logo', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'tags', alias?: string  } 
  | { name: 'openingTimes', alias?: string  } 
  | { name: 'averageBusyPreparationTime', alias?: string  } 
  | { name: 'averagePreparationTime', alias?: string  } 
  | { name: 'menus', alias?: string  } 
  | { name: 'isConnected', alias?: string  } 
  | { name: 'stripe_user_id', alias?: string  } 
  | { name: 'stripe_publishable_key', alias?: string  } 
  | { name: 'access_token', alias?: string  } 
  | { name: 'refresh_token', alias?: string  } 
  
export interface RestaurantUpsertWithoutAddressInput {
  update?: RestaurantUpdateWithoutAddressDataInput
  create?: RestaurantCreateWithoutAddressInput
}
export type RestaurantUpsertWithoutAddressInputInputObject =
  | Extract<keyof RestaurantUpsertWithoutAddressInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface AddressUpdateManyMutationInput {
  number?: string | null
  streetName?: string | null
  city?: string | null
  postalCode?: string | null
}
export type AddressUpdateManyMutationInputInputObject =
  | Extract<keyof AddressUpdateManyMutationInput, string>
  | { name: 'number', alias?: string  } 
  | { name: 'streetName', alias?: string  } 
  | { name: 'city', alias?: string  } 
  | { name: 'postalCode', alias?: string  } 
  
export interface RestaurantUpdateInput {
  name?: string | null
  email?: string | null
  password?: string | null
  address?: AddressUpdateOneRequiredWithoutRestaurantInput | null
  tel?: string | null
  image?: string | null
  logo?: string | null
  description?: string | null
  status?: string | null
  tags?: RestaurantUpdatetagsInput | null
  openingTimes?: OpeningTimeUpdateManyWithoutRestaurantInput | null
  averageBusyPreparationTime?: string | null
  averagePreparationTime?: string | null
  menus?: MenuUpdateManyWithoutRestaurantInput | null
  isConnected?: boolean | null
  stripe_user_id?: string | null
  stripe_publishable_key?: string | null
  access_token?: string | null
  refresh_token?: string | null
}
export type RestaurantUpdateInputInputObject =
  | Extract<keyof RestaurantUpdateInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'address', alias?: string  } 
  | { name: 'tel', alias?: string  } 
  | { name: 'image', alias?: string  } 
  | { name: 'logo', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'tags', alias?: string  } 
  | { name: 'openingTimes', alias?: string  } 
  | { name: 'averageBusyPreparationTime', alias?: string  } 
  | { name: 'averagePreparationTime', alias?: string  } 
  | { name: 'menus', alias?: string  } 
  | { name: 'isConnected', alias?: string  } 
  | { name: 'stripe_user_id', alias?: string  } 
  | { name: 'stripe_publishable_key', alias?: string  } 
  | { name: 'access_token', alias?: string  } 
  | { name: 'refresh_token', alias?: string  } 
  
export interface RestaurantUpdateManyMutationInput {
  name?: string | null
  email?: string | null
  password?: string | null
  tel?: string | null
  image?: string | null
  logo?: string | null
  description?: string | null
  status?: string | null
  tags?: RestaurantUpdatetagsInput | null
  averageBusyPreparationTime?: string | null
  averagePreparationTime?: string | null
  isConnected?: boolean | null
  stripe_user_id?: string | null
  stripe_publishable_key?: string | null
  access_token?: string | null
  refresh_token?: string | null
}
export type RestaurantUpdateManyMutationInputInputObject =
  | Extract<keyof RestaurantUpdateManyMutationInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'tel', alias?: string  } 
  | { name: 'image', alias?: string  } 
  | { name: 'logo', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'tags', alias?: string  } 
  | { name: 'averageBusyPreparationTime', alias?: string  } 
  | { name: 'averagePreparationTime', alias?: string  } 
  | { name: 'isConnected', alias?: string  } 
  | { name: 'stripe_user_id', alias?: string  } 
  | { name: 'stripe_publishable_key', alias?: string  } 
  | { name: 'access_token', alias?: string  } 
  | { name: 'refresh_token', alias?: string  } 
  
export interface OpeningTimeCreateInput {
  id?: string | null
  hours?: OpeningTimeCreatehoursInput | null
  days?: OpeningTimeCreatedaysInput | null
  restaurant?: RestaurantCreateOneWithoutOpeningTimesInput | null
}
export type OpeningTimeCreateInputInputObject =
  | Extract<keyof OpeningTimeCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'hours', alias?: string  } 
  | { name: 'days', alias?: string  } 
  | { name: 'restaurant', alias?: string  } 
  
export interface RestaurantCreateOneWithoutOpeningTimesInput {
  create?: RestaurantCreateWithoutOpeningTimesInput | null
  connect?: RestaurantWhereUniqueInput | null
}
export type RestaurantCreateOneWithoutOpeningTimesInputInputObject =
  | Extract<keyof RestaurantCreateOneWithoutOpeningTimesInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface RestaurantCreateWithoutOpeningTimesInput {
  id?: string | null
  name?: string
  email?: string
  password?: string
  address?: AddressCreateOneWithoutRestaurantInput
  tel?: string
  image?: string | null
  logo?: string | null
  description?: string | null
  status?: string | null
  tags?: RestaurantCreatetagsInput | null
  averageBusyPreparationTime?: string | null
  averagePreparationTime?: string | null
  menus?: MenuCreateManyWithoutRestaurantInput | null
  isConnected?: boolean | null
  stripe_user_id?: string | null
  stripe_publishable_key?: string | null
  access_token?: string | null
  refresh_token?: string | null
}
export type RestaurantCreateWithoutOpeningTimesInputInputObject =
  | Extract<keyof RestaurantCreateWithoutOpeningTimesInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'address', alias?: string  } 
  | { name: 'tel', alias?: string  } 
  | { name: 'image', alias?: string  } 
  | { name: 'logo', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'tags', alias?: string  } 
  | { name: 'averageBusyPreparationTime', alias?: string  } 
  | { name: 'averagePreparationTime', alias?: string  } 
  | { name: 'menus', alias?: string  } 
  | { name: 'isConnected', alias?: string  } 
  | { name: 'stripe_user_id', alias?: string  } 
  | { name: 'stripe_publishable_key', alias?: string  } 
  | { name: 'access_token', alias?: string  } 
  | { name: 'refresh_token', alias?: string  } 
  
export interface OpeningTimeUpdateInput {
  hours?: OpeningTimeUpdatehoursInput | null
  days?: OpeningTimeUpdatedaysInput | null
  restaurant?: RestaurantUpdateOneWithoutOpeningTimesInput | null
}
export type OpeningTimeUpdateInputInputObject =
  | Extract<keyof OpeningTimeUpdateInput, string>
  | { name: 'hours', alias?: string  } 
  | { name: 'days', alias?: string  } 
  | { name: 'restaurant', alias?: string  } 
  
export interface RestaurantUpdateOneWithoutOpeningTimesInput {
  create?: RestaurantCreateWithoutOpeningTimesInput | null
  update?: RestaurantUpdateWithoutOpeningTimesDataInput | null
  upsert?: RestaurantUpsertWithoutOpeningTimesInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: RestaurantWhereUniqueInput | null
}
export type RestaurantUpdateOneWithoutOpeningTimesInputInputObject =
  | Extract<keyof RestaurantUpdateOneWithoutOpeningTimesInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface RestaurantUpdateWithoutOpeningTimesDataInput {
  name?: string | null
  email?: string | null
  password?: string | null
  address?: AddressUpdateOneRequiredWithoutRestaurantInput | null
  tel?: string | null
  image?: string | null
  logo?: string | null
  description?: string | null
  status?: string | null
  tags?: RestaurantUpdatetagsInput | null
  averageBusyPreparationTime?: string | null
  averagePreparationTime?: string | null
  menus?: MenuUpdateManyWithoutRestaurantInput | null
  isConnected?: boolean | null
  stripe_user_id?: string | null
  stripe_publishable_key?: string | null
  access_token?: string | null
  refresh_token?: string | null
}
export type RestaurantUpdateWithoutOpeningTimesDataInputInputObject =
  | Extract<keyof RestaurantUpdateWithoutOpeningTimesDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'address', alias?: string  } 
  | { name: 'tel', alias?: string  } 
  | { name: 'image', alias?: string  } 
  | { name: 'logo', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'tags', alias?: string  } 
  | { name: 'averageBusyPreparationTime', alias?: string  } 
  | { name: 'averagePreparationTime', alias?: string  } 
  | { name: 'menus', alias?: string  } 
  | { name: 'isConnected', alias?: string  } 
  | { name: 'stripe_user_id', alias?: string  } 
  | { name: 'stripe_publishable_key', alias?: string  } 
  | { name: 'access_token', alias?: string  } 
  | { name: 'refresh_token', alias?: string  } 
  
export interface RestaurantUpsertWithoutOpeningTimesInput {
  update?: RestaurantUpdateWithoutOpeningTimesDataInput
  create?: RestaurantCreateWithoutOpeningTimesInput
}
export type RestaurantUpsertWithoutOpeningTimesInputInputObject =
  | Extract<keyof RestaurantUpsertWithoutOpeningTimesInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface OpeningTimeUpdateManyMutationInput {
  hours?: OpeningTimeUpdatehoursInput | null
  days?: OpeningTimeUpdatedaysInput | null
}
export type OpeningTimeUpdateManyMutationInputInputObject =
  | Extract<keyof OpeningTimeUpdateManyMutationInput, string>
  | { name: 'hours', alias?: string  } 
  | { name: 'days', alias?: string  } 
  
export interface ServiceTimeCreateInput {
  id?: string | null
  hours?: ServiceTimeCreatehoursInput | null
  days?: ServiceTimeCreatedaysInput | null
  menu?: MenuCreateOneWithoutServiceTimesInput | null
}
export type ServiceTimeCreateInputInputObject =
  | Extract<keyof ServiceTimeCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'hours', alias?: string  } 
  | { name: 'days', alias?: string  } 
  | { name: 'menu', alias?: string  } 
  
export interface MenuCreateOneWithoutServiceTimesInput {
  create?: MenuCreateWithoutServiceTimesInput | null
  connect?: MenuWhereUniqueInput | null
}
export type MenuCreateOneWithoutServiceTimesInputInputObject =
  | Extract<keyof MenuCreateOneWithoutServiceTimesInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface MenuCreateWithoutServiceTimesInput {
  id?: string | null
  name?: string
  description?: string | null
  restaurant?: RestaurantCreateOneWithoutMenusInput
  categories?: MenuCategoryCreateManyWithoutMenuInput | null
}
export type MenuCreateWithoutServiceTimesInputInputObject =
  | Extract<keyof MenuCreateWithoutServiceTimesInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'restaurant', alias?: string  } 
  | { name: 'categories', alias?: string  } 
  
export interface RestaurantCreateOneWithoutMenusInput {
  create?: RestaurantCreateWithoutMenusInput | null
  connect?: RestaurantWhereUniqueInput | null
}
export type RestaurantCreateOneWithoutMenusInputInputObject =
  | Extract<keyof RestaurantCreateOneWithoutMenusInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface RestaurantCreateWithoutMenusInput {
  id?: string | null
  name?: string
  email?: string
  password?: string
  address?: AddressCreateOneWithoutRestaurantInput
  tel?: string
  image?: string | null
  logo?: string | null
  description?: string | null
  status?: string | null
  tags?: RestaurantCreatetagsInput | null
  openingTimes?: OpeningTimeCreateManyWithoutRestaurantInput | null
  averageBusyPreparationTime?: string | null
  averagePreparationTime?: string | null
  isConnected?: boolean | null
  stripe_user_id?: string | null
  stripe_publishable_key?: string | null
  access_token?: string | null
  refresh_token?: string | null
}
export type RestaurantCreateWithoutMenusInputInputObject =
  | Extract<keyof RestaurantCreateWithoutMenusInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'address', alias?: string  } 
  | { name: 'tel', alias?: string  } 
  | { name: 'image', alias?: string  } 
  | { name: 'logo', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'tags', alias?: string  } 
  | { name: 'openingTimes', alias?: string  } 
  | { name: 'averageBusyPreparationTime', alias?: string  } 
  | { name: 'averagePreparationTime', alias?: string  } 
  | { name: 'isConnected', alias?: string  } 
  | { name: 'stripe_user_id', alias?: string  } 
  | { name: 'stripe_publishable_key', alias?: string  } 
  | { name: 'access_token', alias?: string  } 
  | { name: 'refresh_token', alias?: string  } 
  
export interface ServiceTimeUpdateInput {
  hours?: ServiceTimeUpdatehoursInput | null
  days?: ServiceTimeUpdatedaysInput | null
  menu?: MenuUpdateOneWithoutServiceTimesInput | null
}
export type ServiceTimeUpdateInputInputObject =
  | Extract<keyof ServiceTimeUpdateInput, string>
  | { name: 'hours', alias?: string  } 
  | { name: 'days', alias?: string  } 
  | { name: 'menu', alias?: string  } 
  
export interface MenuUpdateOneWithoutServiceTimesInput {
  create?: MenuCreateWithoutServiceTimesInput | null
  update?: MenuUpdateWithoutServiceTimesDataInput | null
  upsert?: MenuUpsertWithoutServiceTimesInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: MenuWhereUniqueInput | null
}
export type MenuUpdateOneWithoutServiceTimesInputInputObject =
  | Extract<keyof MenuUpdateOneWithoutServiceTimesInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface MenuUpdateWithoutServiceTimesDataInput {
  name?: string | null
  description?: string | null
  restaurant?: RestaurantUpdateOneRequiredWithoutMenusInput | null
  categories?: MenuCategoryUpdateManyWithoutMenuInput | null
}
export type MenuUpdateWithoutServiceTimesDataInputInputObject =
  | Extract<keyof MenuUpdateWithoutServiceTimesDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'restaurant', alias?: string  } 
  | { name: 'categories', alias?: string  } 
  
export interface RestaurantUpdateOneRequiredWithoutMenusInput {
  create?: RestaurantCreateWithoutMenusInput | null
  update?: RestaurantUpdateWithoutMenusDataInput | null
  upsert?: RestaurantUpsertWithoutMenusInput | null
  connect?: RestaurantWhereUniqueInput | null
}
export type RestaurantUpdateOneRequiredWithoutMenusInputInputObject =
  | Extract<keyof RestaurantUpdateOneRequiredWithoutMenusInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface RestaurantUpdateWithoutMenusDataInput {
  name?: string | null
  email?: string | null
  password?: string | null
  address?: AddressUpdateOneRequiredWithoutRestaurantInput | null
  tel?: string | null
  image?: string | null
  logo?: string | null
  description?: string | null
  status?: string | null
  tags?: RestaurantUpdatetagsInput | null
  openingTimes?: OpeningTimeUpdateManyWithoutRestaurantInput | null
  averageBusyPreparationTime?: string | null
  averagePreparationTime?: string | null
  isConnected?: boolean | null
  stripe_user_id?: string | null
  stripe_publishable_key?: string | null
  access_token?: string | null
  refresh_token?: string | null
}
export type RestaurantUpdateWithoutMenusDataInputInputObject =
  | Extract<keyof RestaurantUpdateWithoutMenusDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'address', alias?: string  } 
  | { name: 'tel', alias?: string  } 
  | { name: 'image', alias?: string  } 
  | { name: 'logo', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'tags', alias?: string  } 
  | { name: 'openingTimes', alias?: string  } 
  | { name: 'averageBusyPreparationTime', alias?: string  } 
  | { name: 'averagePreparationTime', alias?: string  } 
  | { name: 'isConnected', alias?: string  } 
  | { name: 'stripe_user_id', alias?: string  } 
  | { name: 'stripe_publishable_key', alias?: string  } 
  | { name: 'access_token', alias?: string  } 
  | { name: 'refresh_token', alias?: string  } 
  
export interface RestaurantUpsertWithoutMenusInput {
  update?: RestaurantUpdateWithoutMenusDataInput
  create?: RestaurantCreateWithoutMenusInput
}
export type RestaurantUpsertWithoutMenusInputInputObject =
  | Extract<keyof RestaurantUpsertWithoutMenusInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface MenuUpsertWithoutServiceTimesInput {
  update?: MenuUpdateWithoutServiceTimesDataInput
  create?: MenuCreateWithoutServiceTimesInput
}
export type MenuUpsertWithoutServiceTimesInputInputObject =
  | Extract<keyof MenuUpsertWithoutServiceTimesInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface ServiceTimeUpdateManyMutationInput {
  hours?: ServiceTimeUpdatehoursInput | null
  days?: ServiceTimeUpdatedaysInput | null
}
export type ServiceTimeUpdateManyMutationInputInputObject =
  | Extract<keyof ServiceTimeUpdateManyMutationInput, string>
  | { name: 'hours', alias?: string  } 
  | { name: 'days', alias?: string  } 
  
export interface MenuCreateInput {
  id?: string | null
  name?: string
  description?: string | null
  restaurant?: RestaurantCreateOneWithoutMenusInput
  serviceTimes?: ServiceTimeCreateManyWithoutMenuInput | null
  categories?: MenuCategoryCreateManyWithoutMenuInput | null
}
export type MenuCreateInputInputObject =
  | Extract<keyof MenuCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'restaurant', alias?: string  } 
  | { name: 'serviceTimes', alias?: string  } 
  | { name: 'categories', alias?: string  } 
  
export interface MenuUpdateInput {
  name?: string | null
  description?: string | null
  restaurant?: RestaurantUpdateOneRequiredWithoutMenusInput | null
  serviceTimes?: ServiceTimeUpdateManyWithoutMenuInput | null
  categories?: MenuCategoryUpdateManyWithoutMenuInput | null
}
export type MenuUpdateInputInputObject =
  | Extract<keyof MenuUpdateInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'restaurant', alias?: string  } 
  | { name: 'serviceTimes', alias?: string  } 
  | { name: 'categories', alias?: string  } 
  
export interface MenuUpdateManyMutationInput {
  name?: string | null
  description?: string | null
}
export type MenuUpdateManyMutationInputInputObject =
  | Extract<keyof MenuUpdateManyMutationInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  
export interface MenuCategoryCreateInput {
  id?: string | null
  name?: string
  menu?: MenuCreateOneWithoutCategoriesInput
  description?: string | null
  available?: boolean | null
  items?: MenuItemCreateManyWithoutCategoryInput | null
}
export type MenuCategoryCreateInputInputObject =
  | Extract<keyof MenuCategoryCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'menu', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'available', alias?: string  } 
  | { name: 'items', alias?: string  } 
  
export interface MenuCreateOneWithoutCategoriesInput {
  create?: MenuCreateWithoutCategoriesInput | null
  connect?: MenuWhereUniqueInput | null
}
export type MenuCreateOneWithoutCategoriesInputInputObject =
  | Extract<keyof MenuCreateOneWithoutCategoriesInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface MenuCreateWithoutCategoriesInput {
  id?: string | null
  name?: string
  description?: string | null
  restaurant?: RestaurantCreateOneWithoutMenusInput
  serviceTimes?: ServiceTimeCreateManyWithoutMenuInput | null
}
export type MenuCreateWithoutCategoriesInputInputObject =
  | Extract<keyof MenuCreateWithoutCategoriesInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'restaurant', alias?: string  } 
  | { name: 'serviceTimes', alias?: string  } 
  
export interface MenuCategoryUpdateInput {
  name?: string | null
  menu?: MenuUpdateOneRequiredWithoutCategoriesInput | null
  description?: string | null
  available?: boolean | null
  items?: MenuItemUpdateManyWithoutCategoryInput | null
}
export type MenuCategoryUpdateInputInputObject =
  | Extract<keyof MenuCategoryUpdateInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'menu', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'available', alias?: string  } 
  | { name: 'items', alias?: string  } 
  
export interface MenuUpdateOneRequiredWithoutCategoriesInput {
  create?: MenuCreateWithoutCategoriesInput | null
  update?: MenuUpdateWithoutCategoriesDataInput | null
  upsert?: MenuUpsertWithoutCategoriesInput | null
  connect?: MenuWhereUniqueInput | null
}
export type MenuUpdateOneRequiredWithoutCategoriesInputInputObject =
  | Extract<keyof MenuUpdateOneRequiredWithoutCategoriesInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface MenuUpdateWithoutCategoriesDataInput {
  name?: string | null
  description?: string | null
  restaurant?: RestaurantUpdateOneRequiredWithoutMenusInput | null
  serviceTimes?: ServiceTimeUpdateManyWithoutMenuInput | null
}
export type MenuUpdateWithoutCategoriesDataInputInputObject =
  | Extract<keyof MenuUpdateWithoutCategoriesDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'restaurant', alias?: string  } 
  | { name: 'serviceTimes', alias?: string  } 
  
export interface MenuUpsertWithoutCategoriesInput {
  update?: MenuUpdateWithoutCategoriesDataInput
  create?: MenuCreateWithoutCategoriesInput
}
export type MenuUpsertWithoutCategoriesInputInputObject =
  | Extract<keyof MenuUpsertWithoutCategoriesInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface MenuCategoryUpdateManyMutationInput {
  name?: string | null
  description?: string | null
  available?: boolean | null
}
export type MenuCategoryUpdateManyMutationInputInputObject =
  | Extract<keyof MenuCategoryUpdateManyMutationInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'available', alias?: string  } 
  
export interface MenuItemCreateInput {
  id?: string | null
  name?: string | null
  description?: string | null
  price?: string | null
  image?: string | null
  available?: boolean | null
  dietary?: MenuItemCreatedietaryInput | null
  category?: MenuCategoryCreateOneWithoutItemsInput | null
  options?: OptionCreateManyWithoutMenuItemsInput | null
}
export type MenuItemCreateInputInputObject =
  | Extract<keyof MenuItemCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'image', alias?: string  } 
  | { name: 'available', alias?: string  } 
  | { name: 'dietary', alias?: string  } 
  | { name: 'category', alias?: string  } 
  | { name: 'options', alias?: string  } 
  
export interface MenuCategoryCreateOneWithoutItemsInput {
  create?: MenuCategoryCreateWithoutItemsInput | null
  connect?: MenuCategoryWhereUniqueInput | null
}
export type MenuCategoryCreateOneWithoutItemsInputInputObject =
  | Extract<keyof MenuCategoryCreateOneWithoutItemsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface MenuCategoryCreateWithoutItemsInput {
  id?: string | null
  name?: string
  menu?: MenuCreateOneWithoutCategoriesInput
  description?: string | null
  available?: boolean | null
}
export type MenuCategoryCreateWithoutItemsInputInputObject =
  | Extract<keyof MenuCategoryCreateWithoutItemsInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'menu', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'available', alias?: string  } 
  
export interface MenuItemUpdateInput {
  name?: string | null
  description?: string | null
  price?: string | null
  image?: string | null
  available?: boolean | null
  dietary?: MenuItemUpdatedietaryInput | null
  category?: MenuCategoryUpdateOneWithoutItemsInput | null
  options?: OptionUpdateManyWithoutMenuItemsInput | null
}
export type MenuItemUpdateInputInputObject =
  | Extract<keyof MenuItemUpdateInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'image', alias?: string  } 
  | { name: 'available', alias?: string  } 
  | { name: 'dietary', alias?: string  } 
  | { name: 'category', alias?: string  } 
  | { name: 'options', alias?: string  } 
  
export interface MenuCategoryUpdateOneWithoutItemsInput {
  create?: MenuCategoryCreateWithoutItemsInput | null
  update?: MenuCategoryUpdateWithoutItemsDataInput | null
  upsert?: MenuCategoryUpsertWithoutItemsInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: MenuCategoryWhereUniqueInput | null
}
export type MenuCategoryUpdateOneWithoutItemsInputInputObject =
  | Extract<keyof MenuCategoryUpdateOneWithoutItemsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface MenuCategoryUpdateWithoutItemsDataInput {
  name?: string | null
  menu?: MenuUpdateOneRequiredWithoutCategoriesInput | null
  description?: string | null
  available?: boolean | null
}
export type MenuCategoryUpdateWithoutItemsDataInputInputObject =
  | Extract<keyof MenuCategoryUpdateWithoutItemsDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'menu', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'available', alias?: string  } 
  
export interface MenuCategoryUpsertWithoutItemsInput {
  update?: MenuCategoryUpdateWithoutItemsDataInput
  create?: MenuCategoryCreateWithoutItemsInput
}
export type MenuCategoryUpsertWithoutItemsInputInputObject =
  | Extract<keyof MenuCategoryUpsertWithoutItemsInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface MenuItemUpdateManyMutationInput {
  name?: string | null
  description?: string | null
  price?: string | null
  image?: string | null
  available?: boolean | null
  dietary?: MenuItemUpdatedietaryInput | null
}
export type MenuItemUpdateManyMutationInputInputObject =
  | Extract<keyof MenuItemUpdateManyMutationInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'image', alias?: string  } 
  | { name: 'available', alias?: string  } 
  | { name: 'dietary', alias?: string  } 
  
export interface OptionItemCreateInput {
  id?: string | null
  name?: string
  price?: string
  option?: OptionCreateOneWithoutItemsInput | null
}
export type OptionItemCreateInputInputObject =
  | Extract<keyof OptionItemCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'option', alias?: string  } 
  
export interface OptionCreateOneWithoutItemsInput {
  create?: OptionCreateWithoutItemsInput | null
  connect?: OptionWhereUniqueInput | null
}
export type OptionCreateOneWithoutItemsInputInputObject =
  | Extract<keyof OptionCreateOneWithoutItemsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface OptionCreateWithoutItemsInput {
  id?: string | null
  name?: string
  min?: string
  max?: string
  menuItems?: MenuItemCreateManyWithoutOptionsInput | null
  restaurant?: RestaurantCreateOneInput | null
}
export type OptionCreateWithoutItemsInputInputObject =
  | Extract<keyof OptionCreateWithoutItemsInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'min', alias?: string  } 
  | { name: 'max', alias?: string  } 
  | { name: 'menuItems', alias?: string  } 
  | { name: 'restaurant', alias?: string  } 
  
export interface MenuItemCreateManyWithoutOptionsInput {
  create?: MenuItemCreateWithoutOptionsInput[]
  connect?: MenuItemWhereUniqueInput[]
}
export type MenuItemCreateManyWithoutOptionsInputInputObject =
  | Extract<keyof MenuItemCreateManyWithoutOptionsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface MenuItemCreateWithoutOptionsInput {
  id?: string | null
  name?: string | null
  description?: string | null
  price?: string | null
  image?: string | null
  available?: boolean | null
  dietary?: MenuItemCreatedietaryInput | null
  category?: MenuCategoryCreateOneWithoutItemsInput | null
}
export type MenuItemCreateWithoutOptionsInputInputObject =
  | Extract<keyof MenuItemCreateWithoutOptionsInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'image', alias?: string  } 
  | { name: 'available', alias?: string  } 
  | { name: 'dietary', alias?: string  } 
  | { name: 'category', alias?: string  } 
  
export interface OptionItemUpdateInput {
  name?: string | null
  price?: string | null
  option?: OptionUpdateOneWithoutItemsInput | null
}
export type OptionItemUpdateInputInputObject =
  | Extract<keyof OptionItemUpdateInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'option', alias?: string  } 
  
export interface OptionUpdateOneWithoutItemsInput {
  create?: OptionCreateWithoutItemsInput | null
  update?: OptionUpdateWithoutItemsDataInput | null
  upsert?: OptionUpsertWithoutItemsInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: OptionWhereUniqueInput | null
}
export type OptionUpdateOneWithoutItemsInputInputObject =
  | Extract<keyof OptionUpdateOneWithoutItemsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface OptionUpdateWithoutItemsDataInput {
  name?: string | null
  min?: string | null
  max?: string | null
  menuItems?: MenuItemUpdateManyWithoutOptionsInput | null
  restaurant?: RestaurantUpdateOneInput | null
}
export type OptionUpdateWithoutItemsDataInputInputObject =
  | Extract<keyof OptionUpdateWithoutItemsDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'min', alias?: string  } 
  | { name: 'max', alias?: string  } 
  | { name: 'menuItems', alias?: string  } 
  | { name: 'restaurant', alias?: string  } 
  
export interface MenuItemUpdateManyWithoutOptionsInput {
  create?: MenuItemCreateWithoutOptionsInput[]
  delete?: MenuItemWhereUniqueInput[]
  connect?: MenuItemWhereUniqueInput[]
  set?: MenuItemWhereUniqueInput[]
  disconnect?: MenuItemWhereUniqueInput[]
  update?: MenuItemUpdateWithWhereUniqueWithoutOptionsInput[]
  upsert?: MenuItemUpsertWithWhereUniqueWithoutOptionsInput[]
  deleteMany?: MenuItemScalarWhereInput[]
  updateMany?: MenuItemUpdateManyWithWhereNestedInput[]
}
export type MenuItemUpdateManyWithoutOptionsInputInputObject =
  | Extract<keyof MenuItemUpdateManyWithoutOptionsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  | { name: 'set', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'deleteMany', alias?: string  } 
  | { name: 'updateMany', alias?: string  } 
  
export interface MenuItemUpdateWithWhereUniqueWithoutOptionsInput {
  where?: MenuItemWhereUniqueInput
  data?: MenuItemUpdateWithoutOptionsDataInput
}
export type MenuItemUpdateWithWhereUniqueWithoutOptionsInputInputObject =
  | Extract<keyof MenuItemUpdateWithWhereUniqueWithoutOptionsInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'data', alias?: string  } 
  
export interface MenuItemUpdateWithoutOptionsDataInput {
  name?: string | null
  description?: string | null
  price?: string | null
  image?: string | null
  available?: boolean | null
  dietary?: MenuItemUpdatedietaryInput | null
  category?: MenuCategoryUpdateOneWithoutItemsInput | null
}
export type MenuItemUpdateWithoutOptionsDataInputInputObject =
  | Extract<keyof MenuItemUpdateWithoutOptionsDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'description', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'image', alias?: string  } 
  | { name: 'available', alias?: string  } 
  | { name: 'dietary', alias?: string  } 
  | { name: 'category', alias?: string  } 
  
export interface MenuItemUpsertWithWhereUniqueWithoutOptionsInput {
  where?: MenuItemWhereUniqueInput
  update?: MenuItemUpdateWithoutOptionsDataInput
  create?: MenuItemCreateWithoutOptionsInput
}
export type MenuItemUpsertWithWhereUniqueWithoutOptionsInputInputObject =
  | Extract<keyof MenuItemUpsertWithWhereUniqueWithoutOptionsInput, string>
  | { name: 'where', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface OptionUpsertWithoutItemsInput {
  update?: OptionUpdateWithoutItemsDataInput
  create?: OptionCreateWithoutItemsInput
}
export type OptionUpsertWithoutItemsInputInputObject =
  | Extract<keyof OptionUpsertWithoutItemsInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface OptionItemUpdateManyMutationInput {
  name?: string | null
  price?: string | null
}
export type OptionItemUpdateManyMutationInputInputObject =
  | Extract<keyof OptionItemUpdateManyMutationInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'price', alias?: string  } 
  
export interface OptionCreateInput {
  id?: string | null
  name?: string
  min?: string
  max?: string
  items?: OptionItemCreateManyWithoutOptionInput | null
  menuItems?: MenuItemCreateManyWithoutOptionsInput | null
  restaurant?: RestaurantCreateOneInput | null
}
export type OptionCreateInputInputObject =
  | Extract<keyof OptionCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'min', alias?: string  } 
  | { name: 'max', alias?: string  } 
  | { name: 'items', alias?: string  } 
  | { name: 'menuItems', alias?: string  } 
  | { name: 'restaurant', alias?: string  } 
  
export interface OptionUpdateInput {
  name?: string | null
  min?: string | null
  max?: string | null
  items?: OptionItemUpdateManyWithoutOptionInput | null
  menuItems?: MenuItemUpdateManyWithoutOptionsInput | null
  restaurant?: RestaurantUpdateOneInput | null
}
export type OptionUpdateInputInputObject =
  | Extract<keyof OptionUpdateInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'min', alias?: string  } 
  | { name: 'max', alias?: string  } 
  | { name: 'items', alias?: string  } 
  | { name: 'menuItems', alias?: string  } 
  | { name: 'restaurant', alias?: string  } 
  
export interface OptionUpdateManyMutationInput {
  name?: string | null
  min?: string | null
  max?: string | null
}
export type OptionUpdateManyMutationInputInputObject =
  | Extract<keyof OptionUpdateManyMutationInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'min', alias?: string  } 
  | { name: 'max', alias?: string  } 
  
export interface OrderItemOptionItemCreateInput {
  id?: string | null
  name?: string
  price?: string
  option?: OrderItemOptionCreateOneWithoutItemsInput | null
}
export type OrderItemOptionItemCreateInputInputObject =
  | Extract<keyof OrderItemOptionItemCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'option', alias?: string  } 
  
export interface OrderItemOptionCreateOneWithoutItemsInput {
  create?: OrderItemOptionCreateWithoutItemsInput | null
  connect?: OrderItemOptionWhereUniqueInput | null
}
export type OrderItemOptionCreateOneWithoutItemsInputInputObject =
  | Extract<keyof OrderItemOptionCreateOneWithoutItemsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface OrderItemOptionCreateWithoutItemsInput {
  id?: string | null
  name?: string
  orderItem?: OrderItemCreateOneWithoutOptionsInput
}
export type OrderItemOptionCreateWithoutItemsInputInputObject =
  | Extract<keyof OrderItemOptionCreateWithoutItemsInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'orderItem', alias?: string  } 
  
export interface OrderItemCreateOneWithoutOptionsInput {
  create?: OrderItemCreateWithoutOptionsInput | null
  connect?: OrderItemWhereUniqueInput | null
}
export type OrderItemCreateOneWithoutOptionsInputInputObject =
  | Extract<keyof OrderItemCreateOneWithoutOptionsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface OrderItemCreateWithoutOptionsInput {
  id?: string | null
  name?: string
  price?: string | null
  image?: string | null
  quantity?: number | null
  order?: OrderCreateOneWithoutItemsInput
}
export type OrderItemCreateWithoutOptionsInputInputObject =
  | Extract<keyof OrderItemCreateWithoutOptionsInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'image', alias?: string  } 
  | { name: 'quantity', alias?: string  } 
  | { name: 'order', alias?: string  } 
  
export interface OrderCreateOneWithoutItemsInput {
  create?: OrderCreateWithoutItemsInput | null
  connect?: OrderWhereUniqueInput | null
}
export type OrderCreateOneWithoutItemsInputInputObject =
  | Extract<keyof OrderCreateOneWithoutItemsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface OrderCreateWithoutItemsInput {
  id?: string | null
  orderNo?: number
  paymentIntentId?: string | null
  status?: string | null
  dueAt?: string
  delayedBy?: number | null
  restaurant?: RestaurantCreateOneInput
  customer?: CustomerCreateOneWithoutOrdersInput
  total?: string
  priceAdjustment?: string | null
  cancelReason?: string | null
  priceAdjustmentReason?: string | null
}
export type OrderCreateWithoutItemsInputInputObject =
  | Extract<keyof OrderCreateWithoutItemsInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'orderNo', alias?: string  } 
  | { name: 'paymentIntentId', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'dueAt', alias?: string  } 
  | { name: 'delayedBy', alias?: string  } 
  | { name: 'restaurant', alias?: string  } 
  | { name: 'customer', alias?: string  } 
  | { name: 'total', alias?: string  } 
  | { name: 'priceAdjustment', alias?: string  } 
  | { name: 'cancelReason', alias?: string  } 
  | { name: 'priceAdjustmentReason', alias?: string  } 
  
export interface CustomerCreateOneWithoutOrdersInput {
  create?: CustomerCreateWithoutOrdersInput | null
  connect?: CustomerWhereUniqueInput | null
}
export type CustomerCreateOneWithoutOrdersInputInputObject =
  | Extract<keyof CustomerCreateOneWithoutOrdersInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface CustomerCreateWithoutOrdersInput {
  id?: string | null
  email?: string
  password?: string
  name?: string
  tel?: string
  customerStripeId?: string | null
  paymentMethod?: PaymentMethodCreateOneWithoutCustomerInput | null
}
export type CustomerCreateWithoutOrdersInputInputObject =
  | Extract<keyof CustomerCreateWithoutOrdersInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'email', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'tel', alias?: string  } 
  | { name: 'customerStripeId', alias?: string  } 
  | { name: 'paymentMethod', alias?: string  } 
  
export interface OrderItemOptionItemUpdateInput {
  name?: string | null
  price?: string | null
  option?: OrderItemOptionUpdateOneWithoutItemsInput | null
}
export type OrderItemOptionItemUpdateInputInputObject =
  | Extract<keyof OrderItemOptionItemUpdateInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'option', alias?: string  } 
  
export interface OrderItemOptionUpdateOneWithoutItemsInput {
  create?: OrderItemOptionCreateWithoutItemsInput | null
  update?: OrderItemOptionUpdateWithoutItemsDataInput | null
  upsert?: OrderItemOptionUpsertWithoutItemsInput | null
  delete?: boolean | null
  disconnect?: boolean | null
  connect?: OrderItemOptionWhereUniqueInput | null
}
export type OrderItemOptionUpdateOneWithoutItemsInputInputObject =
  | Extract<keyof OrderItemOptionUpdateOneWithoutItemsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'delete', alias?: string  } 
  | { name: 'disconnect', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface OrderItemOptionUpdateWithoutItemsDataInput {
  name?: string | null
  orderItem?: OrderItemUpdateOneRequiredWithoutOptionsInput | null
}
export type OrderItemOptionUpdateWithoutItemsDataInputInputObject =
  | Extract<keyof OrderItemOptionUpdateWithoutItemsDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'orderItem', alias?: string  } 
  
export interface OrderItemUpdateOneRequiredWithoutOptionsInput {
  create?: OrderItemCreateWithoutOptionsInput | null
  update?: OrderItemUpdateWithoutOptionsDataInput | null
  upsert?: OrderItemUpsertWithoutOptionsInput | null
  connect?: OrderItemWhereUniqueInput | null
}
export type OrderItemUpdateOneRequiredWithoutOptionsInputInputObject =
  | Extract<keyof OrderItemUpdateOneRequiredWithoutOptionsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface OrderItemUpdateWithoutOptionsDataInput {
  name?: string | null
  price?: string | null
  image?: string | null
  quantity?: number | null
  order?: OrderUpdateOneRequiredWithoutItemsInput | null
}
export type OrderItemUpdateWithoutOptionsDataInputInputObject =
  | Extract<keyof OrderItemUpdateWithoutOptionsDataInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'image', alias?: string  } 
  | { name: 'quantity', alias?: string  } 
  | { name: 'order', alias?: string  } 
  
export interface OrderUpdateOneRequiredWithoutItemsInput {
  create?: OrderCreateWithoutItemsInput | null
  update?: OrderUpdateWithoutItemsDataInput | null
  upsert?: OrderUpsertWithoutItemsInput | null
  connect?: OrderWhereUniqueInput | null
}
export type OrderUpdateOneRequiredWithoutItemsInputInputObject =
  | Extract<keyof OrderUpdateOneRequiredWithoutItemsInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface OrderUpdateWithoutItemsDataInput {
  orderNo?: number | null
  paymentIntentId?: string | null
  status?: string | null
  dueAt?: string | null
  delayedBy?: number | null
  restaurant?: RestaurantUpdateOneRequiredInput | null
  customer?: CustomerUpdateOneRequiredWithoutOrdersInput | null
  total?: string | null
  priceAdjustment?: string | null
  cancelReason?: string | null
  priceAdjustmentReason?: string | null
}
export type OrderUpdateWithoutItemsDataInputInputObject =
  | Extract<keyof OrderUpdateWithoutItemsDataInput, string>
  | { name: 'orderNo', alias?: string  } 
  | { name: 'paymentIntentId', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'dueAt', alias?: string  } 
  | { name: 'delayedBy', alias?: string  } 
  | { name: 'restaurant', alias?: string  } 
  | { name: 'customer', alias?: string  } 
  | { name: 'total', alias?: string  } 
  | { name: 'priceAdjustment', alias?: string  } 
  | { name: 'cancelReason', alias?: string  } 
  | { name: 'priceAdjustmentReason', alias?: string  } 
  
export interface CustomerUpdateOneRequiredWithoutOrdersInput {
  create?: CustomerCreateWithoutOrdersInput | null
  update?: CustomerUpdateWithoutOrdersDataInput | null
  upsert?: CustomerUpsertWithoutOrdersInput | null
  connect?: CustomerWhereUniqueInput | null
}
export type CustomerUpdateOneRequiredWithoutOrdersInputInputObject =
  | Extract<keyof CustomerUpdateOneRequiredWithoutOrdersInput, string>
  | { name: 'create', alias?: string  } 
  | { name: 'update', alias?: string  } 
  | { name: 'upsert', alias?: string  } 
  | { name: 'connect', alias?: string  } 
  
export interface CustomerUpdateWithoutOrdersDataInput {
  email?: string | null
  password?: string | null
  name?: string | null
  tel?: string | null
  customerStripeId?: string | null
  paymentMethod?: PaymentMethodUpdateOneWithoutCustomerInput | null
}
export type CustomerUpdateWithoutOrdersDataInputInputObject =
  | Extract<keyof CustomerUpdateWithoutOrdersDataInput, string>
  | { name: 'email', alias?: string  } 
  | { name: 'password', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'tel', alias?: string  } 
  | { name: 'customerStripeId', alias?: string  } 
  | { name: 'paymentMethod', alias?: string  } 
  
export interface CustomerUpsertWithoutOrdersInput {
  update?: CustomerUpdateWithoutOrdersDataInput
  create?: CustomerCreateWithoutOrdersInput
}
export type CustomerUpsertWithoutOrdersInputInputObject =
  | Extract<keyof CustomerUpsertWithoutOrdersInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface OrderUpsertWithoutItemsInput {
  update?: OrderUpdateWithoutItemsDataInput
  create?: OrderCreateWithoutItemsInput
}
export type OrderUpsertWithoutItemsInputInputObject =
  | Extract<keyof OrderUpsertWithoutItemsInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface OrderItemUpsertWithoutOptionsInput {
  update?: OrderItemUpdateWithoutOptionsDataInput
  create?: OrderItemCreateWithoutOptionsInput
}
export type OrderItemUpsertWithoutOptionsInputInputObject =
  | Extract<keyof OrderItemUpsertWithoutOptionsInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface OrderItemOptionUpsertWithoutItemsInput {
  update?: OrderItemOptionUpdateWithoutItemsDataInput
  create?: OrderItemOptionCreateWithoutItemsInput
}
export type OrderItemOptionUpsertWithoutItemsInputInputObject =
  | Extract<keyof OrderItemOptionUpsertWithoutItemsInput, string>
  | { name: 'update', alias?: string  } 
  | { name: 'create', alias?: string  } 
  
export interface OrderItemOptionItemUpdateManyMutationInput {
  name?: string | null
  price?: string | null
}
export type OrderItemOptionItemUpdateManyMutationInputInputObject =
  | Extract<keyof OrderItemOptionItemUpdateManyMutationInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'price', alias?: string  } 
  
export interface OrderItemOptionCreateInput {
  id?: string | null
  name?: string
  items?: OrderItemOptionItemCreateManyWithoutOptionInput | null
  orderItem?: OrderItemCreateOneWithoutOptionsInput
}
export type OrderItemOptionCreateInputInputObject =
  | Extract<keyof OrderItemOptionCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'items', alias?: string  } 
  | { name: 'orderItem', alias?: string  } 
  
export interface OrderItemOptionUpdateInput {
  name?: string | null
  items?: OrderItemOptionItemUpdateManyWithoutOptionInput | null
  orderItem?: OrderItemUpdateOneRequiredWithoutOptionsInput | null
}
export type OrderItemOptionUpdateInputInputObject =
  | Extract<keyof OrderItemOptionUpdateInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'items', alias?: string  } 
  | { name: 'orderItem', alias?: string  } 
  
export interface OrderItemOptionUpdateManyMutationInput {
  name?: string | null
}
export type OrderItemOptionUpdateManyMutationInputInputObject =
  | Extract<keyof OrderItemOptionUpdateManyMutationInput, string>
  | { name: 'name', alias?: string  } 
  
export interface OrderItemCreateInput {
  id?: string | null
  name?: string
  price?: string | null
  image?: string | null
  quantity?: number | null
  options?: OrderItemOptionCreateManyWithoutOrderItemInput | null
  order?: OrderCreateOneWithoutItemsInput
}
export type OrderItemCreateInputInputObject =
  | Extract<keyof OrderItemCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'name', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'image', alias?: string  } 
  | { name: 'quantity', alias?: string  } 
  | { name: 'options', alias?: string  } 
  | { name: 'order', alias?: string  } 
  
export interface OrderItemUpdateInput {
  name?: string | null
  price?: string | null
  image?: string | null
  quantity?: number | null
  options?: OrderItemOptionUpdateManyWithoutOrderItemInput | null
  order?: OrderUpdateOneRequiredWithoutItemsInput | null
}
export type OrderItemUpdateInputInputObject =
  | Extract<keyof OrderItemUpdateInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'image', alias?: string  } 
  | { name: 'quantity', alias?: string  } 
  | { name: 'options', alias?: string  } 
  | { name: 'order', alias?: string  } 
  
export interface OrderItemUpdateManyMutationInput {
  name?: string | null
  price?: string | null
  image?: string | null
  quantity?: number | null
}
export type OrderItemUpdateManyMutationInputInputObject =
  | Extract<keyof OrderItemUpdateManyMutationInput, string>
  | { name: 'name', alias?: string  } 
  | { name: 'price', alias?: string  } 
  | { name: 'image', alias?: string  } 
  | { name: 'quantity', alias?: string  } 
  
export interface OrderCreateInput {
  id?: string | null
  orderNo?: number
  paymentIntentId?: string | null
  status?: string | null
  dueAt?: string
  delayedBy?: number | null
  restaurant?: RestaurantCreateOneInput
  customer?: CustomerCreateOneWithoutOrdersInput
  items?: OrderItemCreateManyWithoutOrderInput | null
  total?: string
  priceAdjustment?: string | null
  cancelReason?: string | null
  priceAdjustmentReason?: string | null
}
export type OrderCreateInputInputObject =
  | Extract<keyof OrderCreateInput, string>
  | { name: 'id', alias?: string  } 
  | { name: 'orderNo', alias?: string  } 
  | { name: 'paymentIntentId', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'dueAt', alias?: string  } 
  | { name: 'delayedBy', alias?: string  } 
  | { name: 'restaurant', alias?: string  } 
  | { name: 'customer', alias?: string  } 
  | { name: 'items', alias?: string  } 
  | { name: 'total', alias?: string  } 
  | { name: 'priceAdjustment', alias?: string  } 
  | { name: 'cancelReason', alias?: string  } 
  | { name: 'priceAdjustmentReason', alias?: string  } 
  
export interface OrderUpdateInput {
  orderNo?: number | null
  paymentIntentId?: string | null
  status?: string | null
  dueAt?: string | null
  delayedBy?: number | null
  restaurant?: RestaurantUpdateOneRequiredInput | null
  customer?: CustomerUpdateOneRequiredWithoutOrdersInput | null
  items?: OrderItemUpdateManyWithoutOrderInput | null
  total?: string | null
  priceAdjustment?: string | null
  cancelReason?: string | null
  priceAdjustmentReason?: string | null
}
export type OrderUpdateInputInputObject =
  | Extract<keyof OrderUpdateInput, string>
  | { name: 'orderNo', alias?: string  } 
  | { name: 'paymentIntentId', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'dueAt', alias?: string  } 
  | { name: 'delayedBy', alias?: string  } 
  | { name: 'restaurant', alias?: string  } 
  | { name: 'customer', alias?: string  } 
  | { name: 'items', alias?: string  } 
  | { name: 'total', alias?: string  } 
  | { name: 'priceAdjustment', alias?: string  } 
  | { name: 'cancelReason', alias?: string  } 
  | { name: 'priceAdjustmentReason', alias?: string  } 
  
export interface OrderUpdateManyMutationInput {
  orderNo?: number | null
  paymentIntentId?: string | null
  status?: string | null
  dueAt?: string | null
  delayedBy?: number | null
  total?: string | null
  priceAdjustment?: string | null
  cancelReason?: string | null
  priceAdjustmentReason?: string | null
}
export type OrderUpdateManyMutationInputInputObject =
  | Extract<keyof OrderUpdateManyMutationInput, string>
  | { name: 'orderNo', alias?: string  } 
  | { name: 'paymentIntentId', alias?: string  } 
  | { name: 'status', alias?: string  } 
  | { name: 'dueAt', alias?: string  } 
  | { name: 'delayedBy', alias?: string  } 
  | { name: 'total', alias?: string  } 
  | { name: 'priceAdjustment', alias?: string  } 
  | { name: 'cancelReason', alias?: string  } 
  | { name: 'priceAdjustmentReason', alias?: string  } 
  
export interface CustomerSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: CustomerWhereInput | null
  AND?: CustomerSubscriptionWhereInput[]
  OR?: CustomerSubscriptionWhereInput[]
  NOT?: CustomerSubscriptionWhereInput[]
}
export type CustomerSubscriptionWhereInputInputObject =
  | Extract<keyof CustomerSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface PaymentMethodSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: PaymentMethodWhereInput | null
  AND?: PaymentMethodSubscriptionWhereInput[]
  OR?: PaymentMethodSubscriptionWhereInput[]
  NOT?: PaymentMethodSubscriptionWhereInput[]
}
export type PaymentMethodSubscriptionWhereInputInputObject =
  | Extract<keyof PaymentMethodSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface AddressSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: AddressWhereInput | null
  AND?: AddressSubscriptionWhereInput[]
  OR?: AddressSubscriptionWhereInput[]
  NOT?: AddressSubscriptionWhereInput[]
}
export type AddressSubscriptionWhereInputInputObject =
  | Extract<keyof AddressSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface RestaurantSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: RestaurantWhereInput | null
  AND?: RestaurantSubscriptionWhereInput[]
  OR?: RestaurantSubscriptionWhereInput[]
  NOT?: RestaurantSubscriptionWhereInput[]
}
export type RestaurantSubscriptionWhereInputInputObject =
  | Extract<keyof RestaurantSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface OpeningTimeSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: OpeningTimeWhereInput | null
  AND?: OpeningTimeSubscriptionWhereInput[]
  OR?: OpeningTimeSubscriptionWhereInput[]
  NOT?: OpeningTimeSubscriptionWhereInput[]
}
export type OpeningTimeSubscriptionWhereInputInputObject =
  | Extract<keyof OpeningTimeSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface ServiceTimeSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: ServiceTimeWhereInput | null
  AND?: ServiceTimeSubscriptionWhereInput[]
  OR?: ServiceTimeSubscriptionWhereInput[]
  NOT?: ServiceTimeSubscriptionWhereInput[]
}
export type ServiceTimeSubscriptionWhereInputInputObject =
  | Extract<keyof ServiceTimeSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface MenuSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: MenuWhereInput | null
  AND?: MenuSubscriptionWhereInput[]
  OR?: MenuSubscriptionWhereInput[]
  NOT?: MenuSubscriptionWhereInput[]
}
export type MenuSubscriptionWhereInputInputObject =
  | Extract<keyof MenuSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface MenuCategorySubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: MenuCategoryWhereInput | null
  AND?: MenuCategorySubscriptionWhereInput[]
  OR?: MenuCategorySubscriptionWhereInput[]
  NOT?: MenuCategorySubscriptionWhereInput[]
}
export type MenuCategorySubscriptionWhereInputInputObject =
  | Extract<keyof MenuCategorySubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface MenuItemSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: MenuItemWhereInput | null
  AND?: MenuItemSubscriptionWhereInput[]
  OR?: MenuItemSubscriptionWhereInput[]
  NOT?: MenuItemSubscriptionWhereInput[]
}
export type MenuItemSubscriptionWhereInputInputObject =
  | Extract<keyof MenuItemSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface OptionItemSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: OptionItemWhereInput | null
  AND?: OptionItemSubscriptionWhereInput[]
  OR?: OptionItemSubscriptionWhereInput[]
  NOT?: OptionItemSubscriptionWhereInput[]
}
export type OptionItemSubscriptionWhereInputInputObject =
  | Extract<keyof OptionItemSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface OptionSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: OptionWhereInput | null
  AND?: OptionSubscriptionWhereInput[]
  OR?: OptionSubscriptionWhereInput[]
  NOT?: OptionSubscriptionWhereInput[]
}
export type OptionSubscriptionWhereInputInputObject =
  | Extract<keyof OptionSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface OrderItemOptionItemSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: OrderItemOptionItemWhereInput | null
  AND?: OrderItemOptionItemSubscriptionWhereInput[]
  OR?: OrderItemOptionItemSubscriptionWhereInput[]
  NOT?: OrderItemOptionItemSubscriptionWhereInput[]
}
export type OrderItemOptionItemSubscriptionWhereInputInputObject =
  | Extract<keyof OrderItemOptionItemSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface OrderItemOptionSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: OrderItemOptionWhereInput | null
  AND?: OrderItemOptionSubscriptionWhereInput[]
  OR?: OrderItemOptionSubscriptionWhereInput[]
  NOT?: OrderItemOptionSubscriptionWhereInput[]
}
export type OrderItemOptionSubscriptionWhereInputInputObject =
  | Extract<keyof OrderItemOptionSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface OrderItemSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: OrderItemWhereInput | null
  AND?: OrderItemSubscriptionWhereInput[]
  OR?: OrderItemSubscriptionWhereInput[]
  NOT?: OrderItemSubscriptionWhereInput[]
}
export type OrderItemSubscriptionWhereInputInputObject =
  | Extract<keyof OrderItemSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  
export interface OrderSubscriptionWhereInput {
  mutation_in?: prisma.MutationType[]
  updatedFields_contains?: string | null
  updatedFields_contains_every?: string[]
  updatedFields_contains_some?: string[]
  node?: OrderWhereInput | null
  AND?: OrderSubscriptionWhereInput[]
  OR?: OrderSubscriptionWhereInput[]
  NOT?: OrderSubscriptionWhereInput[]
}
export type OrderSubscriptionWhereInputInputObject =
  | Extract<keyof OrderSubscriptionWhereInput, string>
  | { name: 'mutation_in', alias?: string  } 
  | { name: 'updatedFields_contains', alias?: string  } 
  | { name: 'updatedFields_contains_every', alias?: string  } 
  | { name: 'updatedFields_contains_some', alias?: string  } 
  | { name: 'node', alias?: string  } 
  | { name: 'AND', alias?: string  } 
  | { name: 'OR', alias?: string  } 
  | { name: 'NOT', alias?: string  } 
  

export type OrderOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'orderNo_ASC'
  | 'orderNo_DESC'
  | 'paymentIntentId_ASC'
  | 'paymentIntentId_DESC'
  | 'status_ASC'
  | 'status_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  | 'dueAt_ASC'
  | 'dueAt_DESC'
  | 'delayedBy_ASC'
  | 'delayedBy_DESC'
  | 'total_ASC'
  | 'total_DESC'
  | 'priceAdjustment_ASC'
  | 'priceAdjustment_DESC'
  | 'cancelReason_ASC'
  | 'cancelReason_DESC'
  | 'priceAdjustmentReason_ASC'
  | 'priceAdjustmentReason_DESC'
  
export type OpeningTimeOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type MenuOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'name_ASC'
  | 'name_DESC'
  | 'description_ASC'
  | 'description_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type ServiceTimeOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type MenuCategoryOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'name_ASC'
  | 'name_DESC'
  | 'description_ASC'
  | 'description_DESC'
  | 'available_ASC'
  | 'available_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type MenuItemOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'name_ASC'
  | 'name_DESC'
  | 'description_ASC'
  | 'description_DESC'
  | 'price_ASC'
  | 'price_DESC'
  | 'image_ASC'
  | 'image_DESC'
  | 'available_ASC'
  | 'available_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type OptionOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'name_ASC'
  | 'name_DESC'
  | 'min_ASC'
  | 'min_DESC'
  | 'max_ASC'
  | 'max_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type OptionItemOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'name_ASC'
  | 'name_DESC'
  | 'price_ASC'
  | 'price_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type OrderItemOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'name_ASC'
  | 'name_DESC'
  | 'price_ASC'
  | 'price_DESC'
  | 'image_ASC'
  | 'image_DESC'
  | 'quantity_ASC'
  | 'quantity_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type OrderItemOptionOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'name_ASC'
  | 'name_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type OrderItemOptionItemOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'name_ASC'
  | 'name_DESC'
  | 'price_ASC'
  | 'price_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type CustomerOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'email_ASC'
  | 'email_DESC'
  | 'password_ASC'
  | 'password_DESC'
  | 'name_ASC'
  | 'name_DESC'
  | 'tel_ASC'
  | 'tel_DESC'
  | 'customerStripeId_ASC'
  | 'customerStripeId_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type PaymentMethodOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'payment_method_id_ASC'
  | 'payment_method_id_DESC'
  | 'brand_ASC'
  | 'brand_DESC'
  | 'last4_ASC'
  | 'last4_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type AddressOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'number_ASC'
  | 'number_DESC'
  | 'streetName_ASC'
  | 'streetName_DESC'
  | 'city_ASC'
  | 'city_DESC'
  | 'postalCode_ASC'
  | 'postalCode_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type RestaurantOrderByInputValues =
  | 'id_ASC'
  | 'id_DESC'
  | 'name_ASC'
  | 'name_DESC'
  | 'email_ASC'
  | 'email_DESC'
  | 'password_ASC'
  | 'password_DESC'
  | 'tel_ASC'
  | 'tel_DESC'
  | 'image_ASC'
  | 'image_DESC'
  | 'logo_ASC'
  | 'logo_DESC'
  | 'description_ASC'
  | 'description_DESC'
  | 'status_ASC'
  | 'status_DESC'
  | 'averageBusyPreparationTime_ASC'
  | 'averageBusyPreparationTime_DESC'
  | 'averagePreparationTime_ASC'
  | 'averagePreparationTime_DESC'
  | 'isConnected_ASC'
  | 'isConnected_DESC'
  | 'stripe_user_id_ASC'
  | 'stripe_user_id_DESC'
  | 'stripe_publishable_key_ASC'
  | 'stripe_publishable_key_DESC'
  | 'access_token_ASC'
  | 'access_token_DESC'
  | 'refresh_token_ASC'
  | 'refresh_token_DESC'
  | 'createdAt_ASC'
  | 'createdAt_DESC'
  | 'updatedAt_ASC'
  | 'updatedAt_DESC'
  
export type MutationTypeValues =
  | 'CREATED'
  | 'UPDATED'
  | 'DELETED'
  
  